
                    Nyquest Technology Co., Ltd.

NYASM 2.40

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    2-    2     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__divuint
                                    1-   15     	extern	__muluchar
                                    1-   16     	extern	_clear_ram
                                    1-   17     	extern	_multi_16b
                                    1-   18     	extern	_T0MD
                                    1-   19     	extern	_PCON1
                                    1-   20     	extern	_CMPCR
                                    1-   21     	extern	_BODCON
                                    1-   22     	extern	_PS0CV
                                    1-   23     	extern	_APHCON
                                    1-   24     	extern	_IOSTB
                                    1-   25     	extern	_IOSTA
                                    1-   26     	extern	_BZ3CR
                                    1-   27     	extern	_PS3CV
                                    1-   28     	extern	_PWM3DUTY
                                    1-   29     	extern	_T3CR2
                                    1-   30     	extern	_T3CR1
                                    1-   31     	extern	_TMR3
                                    1-   32     	extern	_OSCCR
                                    1-   33     	extern	_BZ2CR
                                    1-   34     	extern	_PS2CV
                                    1-   35     	extern	_PWM2DUTY
                                    1-   36     	extern	_T2CR2
                                    1-   37     	extern	_T2CR1
                                    1-   38     	extern	_TMR2
                                    1-   39     	extern	_TBHD
                                    1-   40     	extern	_TBHP
                                    1-   41     	extern	_IRCR
                                    1-   42     	extern	_BZ1CR
                                    1-   43     	extern	_PS1CV
                                    1-   44     	extern	_PWM1DUTY
                                    1-   45     	extern	_T1CR2
                                    1-   46     	extern	_T1CR1
                                    1-   47     	extern	_TMR1
                                    1-   48     	extern	_TM3RH
                                    1-   49     	extern	_TMRH
                                    1-   50     	extern	_ADD
                                    1-   51     	extern	_PCHBUF
                                    1-   52     	extern	_STATUS
                                    1-   53     	extern	_PCL
                                    1-   54     	extern	_TMR0
                                    1-   55     	extern	_INTE2bits
                                    1-   56     	extern	_RFCbits
                                    1-   57     	extern	_ANAENbits
                                    1-   58     	extern	_INTEDGbits
                                    1-   59     	extern	_PACONbits
                                    1-   60     	extern	_AWUCONbits
                                    1-   61     	extern	_ADCRbits
                                    1-   62     	extern	_ADVREFHbits
                                    1-   63     	extern	_ADRbits
                                    1-   64     	extern	_ADMDbits
                                    1-   65     	extern	_INTFbits
                                    1-   66     	extern	_INTEbits
                                    1-   67     	extern	_BPHCONbits
                                    1-   68     	extern	_ABPLCONbits
                                    1-   69     	extern	_BWUCONbits
                                    1-   70     	extern	_PCONbits
                                    1-   71     	extern	_PORTBbits
                                    1-   72     	extern	_PORTAbits
                                    1-   73     	extern	__gptrget1
                                    1-   74     	extern	__gptrput1
                                    1-   75     	extern	__nyc_ny8_startup
                                    1-   76     ;--------------------------------------------------------
                                    1-   77     ; global declarations
                                    1-   78     ;--------------------------------------------------------
                                    1-   79     	extern	_main
                                    1-   80     	extern	_m68_pressure_proc
                                    1-   81     	extern	_get_m68_pressure_nbytes
                                    1-   82     	extern	_ip53xs_read_nBytes
                                    1-   83     	extern	_ip53xs_writeByte
                                    1-   84     	extern	_i2c_readByte
                                    1-   85     	extern	_i2c_writeByte
                                    1-   86     	extern	_i2c_send_nack
                                    1-   87     	extern	_i2c_send_ack
                                    1-   88     	extern	_i2c_chk_ack
                                    1-   89     	extern	_i2c_stop
                                    1-   90     	extern	_i2c_start
                                    1-   91     	extern	_Key_Proc
                                    1-   92     	extern	_gpioKeyScan
                                    1-   93     	extern	_get_bat_vol
                                    1-   94     	extern	_get_vin_status
                                    1-   95     	extern	__dly_us
                                    1-   96     	extern	_isr
                                    1-   97     	extern	_gpioKeyEvent
                                    1-   98     	extern	_INTE2
                                    1-   99     	extern	_RFC
                                    1-  100     	extern	_ANAEN
                                    1-  101     	extern	_INTEDG
                                    1-  102     	extern	_PACON
                                    1-  103     	extern	_AWUCON
                                    1-  104     	extern	_ADCR
                                    1-  105     	extern	_ADVREFH
                                    1-  106     	extern	_ADR
                                    1-  107     	extern	_ADMD
                                    1-  108     	extern	_INTF
                                    1-  109     	extern	_INTE
                                    1-  110     	extern	_BPHCON
                                    1-  111     	extern	_ABPLCON
                                    1-  112     	extern	_BWUCON
                                    1-  113     	extern	_PCON
                                    1-  114     	extern	_PORTB
                                    1-  115     	extern	_PORTA
                                    1-  116     	extern	_m68Pressure2
                                    1-  117     	extern	_m68Pressure
                                    1-  118     	extern	_gSysTick
                                    1-  119     	extern	_gpioKeyState
                                    1-  120     	extern	_gpioKeyWaitTimer
                                    1-  121     	extern	_delaySleepTime
                                    1-  122     	extern	_timer_slice_10ms
                                    1-  123     	extern	_delay_op_m68_timer
                                    1-  124     	extern	_yMotorWorkStep
                                    1-  125     	extern	_yMotorWorkCycle
                                    1-  126     	extern	_yMotorWorkDutyBase
                                    1-  127     	extern	_yMotorWorkDuty
                                    1-  128     	extern	_yMotorWorkMode
                                    1-  129     	extern	_mMotorWorkCycle
                                    1-  130     	extern	_mMotorWorkDuty
                                    1-  131     	extern	_mMotorWorkMode4Cnt
                                    1-  132     	extern	_mMotorWorkMode
                                    1-  133     	extern	_red_led_blink_cnt
                                    1-  134     	extern	_vFlag_0
                                    1-  135     	extern	_io_uart_tx
                                    1-  137     	extern PSAVE
                                    1-  138     	extern SSAVE
                                    1-  139     	extern WSAVE
                                    1-  140     	extern STK12
                                    1-  141     	extern STK11
                                    1-  142     	extern STK10
                                    1-  143     	extern STK09
                                    1-  144     	extern STK08
                                    1-  145     	extern STK07
                                    1-  146     	extern STK06
                                    1-  147     	extern STK05
                                    1-  148     	extern STK04
                                    1-  149     	extern STK03
                                    1-  150     	extern STK02
                                    1-  151     	extern STK01
                                    1-  152     	extern STK00
                                    1-  154     .segment "share_bank"
     0000                           1-  155     PSAVE:
                                    1-  156     	.res 1
                                    1-  157     .segment "share_bank"
     0000                           1-  158     SSAVE:
                                    1-  159     	.res 1
                                    1-  160     .segment "share_bank"
     0000                           1-  161     WSAVE:
                                    1-  162     	.res 1
                                    1-  163     .segment "share_bank"
     0000                           1-  164     STK12:
                                    1-  165     	.res 1
                                    1-  166     .segment "share_bank"
     0000                           1-  167     STK11:
                                    1-  168     	.res 1
                                    1-  169     .segment "share_bank"
     0000                           1-  170     STK10:
                                    1-  171     	.res 1
                                    1-  172     .segment "share_bank"
     0000                           1-  173     STK09:
                                    1-  174     	.res 1
                                    1-  175     .segment "share_bank"
     0000                           1-  176     STK08:
                                    1-  177     	.res 1
                                    1-  178     .segment "share_bank"
     0000                           1-  179     STK07:
                                    1-  180     	.res 1
                                    1-  181     .segment "share_bank"
     0000                           1-  182     STK06:
                                    1-  183     	.res 1
                                    1-  184     .segment "share_bank"
     0000                           1-  185     STK05:
                                    1-  186     	.res 1
                                    1-  187     .segment "share_bank"
     0000                           1-  188     STK04:
                                    1-  189     	.res 1
                                    1-  190     .segment "share_bank"
     0000                           1-  191     STK03:
                                    1-  192     	.res 1
                                    1-  193     .segment "share_bank"
     0000                           1-  194     STK02:
                                    1-  195     	.res 1
                                    1-  196     .segment "share_bank"
     0000                           1-  197     STK01:
                                    1-  198     	.res 1
                                    1-  199     .segment "share_bank"
     0000                           1-  200     STK00:
                                    1-  201     	.res 1
                                    1-  203     ;--------------------------------------------------------
                                    1-  204     ; global definitions
                                    1-  205     ;--------------------------------------------------------
                                    1-  206     .segment "uninit"
     0000                           1-  207     _vFlag_0:
                                    1-  208     	.res 1
                                    1-  211     .segment "uninit"
     0000                           1-  212     _red_led_blink_cnt:
                                    1-  213     	.res 1
                                    1-  216     .segment "uninit"
     0000                           1-  217     _mMotorWorkMode:
                                    1-  218     	.res 1
                                    1-  221     .segment "uninit"
     0000                           1-  222     _mMotorWorkMode4Cnt:
                                    1-  223     	.res 1
                                    1-  226     .segment "uninit"
     0000                           1-  227     _mMotorWorkDuty:
                                    1-  228     	.res 2
                                    1-  231     .segment "uninit"
     0000                           1-  232     _mMotorWorkCycle:
                                    1-  233     	.res 2
                                    1-  236     .segment "uninit"
     0000                           1-  237     _yMotorWorkMode:
                                    1-  238     	.res 1
                                    1-  241     .segment "uninit"
     0000                           1-  242     _yMotorWorkDuty:
                                    1-  243     	.res 1
                                    1-  246     .segment "uninit"
     0000                           1-  247     _yMotorWorkDutyBase:
                                    1-  248     	.res 1
                                    1-  251     .segment "uninit"
     0000                           1-  252     _yMotorWorkCycle:
                                    1-  253     	.res 1
                                    1-  256     .segment "uninit"
     0000                           1-  257     _yMotorWorkStep:
                                    1-  258     	.res 1
                                    1-  261     .segment "uninit"
     0000                           1-  262     _delay_op_m68_timer:
                                    1-  263     	.res 1
                                    1-  266     .segment "uninit"
     0000                           1-  267     _timer_slice_10ms:
                                    1-  268     	.res 1
                                    1-  271     .segment "uninit"
     0000                           1-  272     _delaySleepTime:
                                    1-  273     	.res 1
                                    1-  276     .segment "uninit"
     0000                           1-  277     _gpioKeyWaitTimer:
                                    1-  278     	.res 1
                                    1-  281     .segment "uninit"
     0000                           1-  282     _gpioKeyState:
                                    1-  283     	.res 1
                                    1-  286     .segment "uninit"
     0000                           1-  287     _gSysTick:
                                    1-  288     	.res 1
                                    1-  291     .segment "uninit"
     0000                           1-  292     _m68Pressure:
                                    1-  293     	.res 2
                                    1-  296     .segment "uninit"
     0000                           1-  297     _m68Pressure2:
                                    1-  298     	.res 2
                                    1-  301     ;--------------------------------------------------------
                                    1-  302     ; absolute symbol definitions
                                    1-  303     ;--------------------------------------------------------
                                    1-  304     ;--------------------------------------------------------
                                    1-  305     ; compiler-defined variables
                                    1-  306     ;--------------------------------------------------------
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x103E:
                                    1-  309     	.res	1
                                    1-  310     .segment "uninit"
     0000                           1-  311     r0x1026:
                                    1-  312     	.res	1
                                    1-  313     .segment "uninit"
     0000                           1-  314     r0x1028:
                                    1-  315     	.res	1
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x102A:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x1029:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x102C:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x1027:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x103B:
                                    1-  330     	.res	1
                                    1-  331     .segment "uninit"
     0000                           1-  332     r0x103C:
                                    1-  333     	.res	1
                                    1-  334     .segment "uninit"
     0000                           1-  335     r0x103D:
                                    1-  336     	.res	1
                                    1-  337     .segment "uninit"
     0000                           1-  338     r0x102D:
                                    1-  339     	.res	1
                                    1-  340     .segment "uninit"
     0000                           1-  341     r0x102B:
                                    1-  342     	.res	1
                                    1-  343     .segment "uninit"
     0000                           1-  344     r0x102E:
                                    1-  345     	.res	1
                                    1-  346     .segment "uninit"
     0000                           1-  347     r0x102F:
                                    1-  348     	.res	1
                                    1-  349     .segment "uninit"
     0000                           1-  350     r0x1030:
                                    1-  351     	.res	1
                                    1-  352     .segment "uninit"
     0000                           1-  353     r0x1031:
                                    1-  354     	.res	1
                                    1-  355     .segment "uninit"
     0000                           1-  356     r0x1032:
                                    1-  357     	.res	1
                                    1-  358     .segment "uninit"
     0000                           1-  359     r0x1034:
                                    1-  360     	.res	1
                                    1-  361     .segment "uninit"
     0000                           1-  362     r0x1035:
                                    1-  363     	.res	1
                                    1-  364     .segment "uninit"
     0000                           1-  365     r0x1038:
                                    1-  366     	.res	1
                                    1-  367     .segment "uninit"
     0000                           1-  368     r0x103A:
                                    1-  369     	.res	1
                                    1-  370     .segment "uninit"
     0000                           1-  371     _isr_yTimerCnt_65536_5:
                                    1-  372     	.res	1
                                    1-  374     .segment "uninit"
     0000                           1-  375     _isr_mTimerCnt_65536_5:
                                    1-  376     	.res	2
                                    1-  378     .segment "uninit"
     0000                           1-  379     ___sdcc_saved_fsr:
                                    1-  380     	.res	1
                                    1-  382     .segment "uninit"
     0000                           1-  383     ___sdcc_saved_stk00:
                                    1-  384     	.res	1
                                    1-  386     .segment "uninit"
     0000                           1-  387     ___sdcc_saved_stk01:
                                    1-  388     	.res	1
                                    1-  390     .segment "uninit"
     0000                           1-  391     ___sdcc_saved_stk02:
                                    1-  392     	.res	1
                                    1-  394     .segment "uninit"
     0000                           1-  395     ___sdcc_saved_stk03:
                                    1-  396     	.res	1
                                    1-  398     .segment "uninit"
     0000                           1-  399     ___sdcc_saved_stk04:
                                    1-  400     	.res	1
                                    1-  402     .segment "uninit"
     0000                           1-  403     _get_vin_status_counter_65536_22:
                                    1-  404     	.res	1
                                    1-  406     .segment "uninit"
     0000                           1-  407     _get_bat_vol_counter_65536_32:
                                    1-  408     	.res	1
                                    1-  410     .segment "uninit"
     0000                           1-  411     _get_m68_pressure_nbytes_reg_buffer_65536_109:
                                    1-  412     	.res	4
                                    1-  414     ;--------------------------------------------------------
                                    1-  415     ; initialized data
                                    1-  416     ;--------------------------------------------------------
                                    1-  418     .segment "idata"
     0000                           1-  419     _gpioKeyScan_prekeyIndex_65536_43:
     0000 00FF                      1-  422     	dw	0xff	; 255
                                    1-  425     .segment "code"
     0000                           1-  426     _gpioKeyEvent:
     0000 2000                      1-  427     	retia 0x00	; 0
     0001 2023                      1-  428     	retia 0x23	; 35
     0002 2043                      1-  429     	retia 0x43	; 67	'C'
     0003 2000                      1-  430     	retia 0x00	; 0
     0004 2000                      1-  431     	retia 0x00	; 0
     0005 2000                      1-  432     	retia 0x00	; 0
     0006 2024                      1-  433     	retia 0x24	; 36
     0007 2044                      1-  434     	retia 0x44	; 68	'D'
     0008 2000                      1-  435     	retia 0x00	; 0
     0009 2000                      1-  436     	retia 0x00	; 0
     000A 2000                      1-  437     	retia 0x00	; 0
     000B 2000                      1-  438     	retia 0x00	; 0
     000C 2045                      1-  439     	retia 0x45	; 69	'E'
     000D 2000                      1-  440     	retia 0x00	; 0
     000E 2000                      1-  441     	retia 0x00	; 0
                                    1-  442     ;--------------------------------------------------------
                                    1-  443     ; initialized absolute data
                                    1-  444     ;--------------------------------------------------------
                                    1-  445     ;--------------------------------------------------------
                                    1-  446     ; overlayable items in internal ram 
                                    1-  447     ;--------------------------------------------------------
                                    1-  448     ;	udata_ovr
                                    1-  449     ;--------------------------------------------------------
                                    1-  450     ; reset vector 
                                    1-  451     ;--------------------------------------------------------
                                    1-  452     ORG	0x0000
     0000 3rrr                      1-  453     	LGOTO	__nyc_ny8_startup
                                    1-  454     ;--------------------------------------------------------
                                    1-  455     ; interrupt and initialization code
                                    1-  456     ;--------------------------------------------------------
                                    1-  457     ORG 0x0008
                                    1-  458     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  460     .segment "code"
     0000                           1-  461     __sdcc_interrupt:
                                    1-  462     ;***
                                    1-  463     ;  pBlock Stats: dbName = I
                                    1-  464     ;***
                                    1-  465     ;6 compiler assigned registers:
                                    1-  466     ;   STK00
                                    1-  467     ;   STK01
                                    1-  468     ;   STK02
                                    1-  469     ;   STK03
                                    1-  470     ;   STK04
                                    1-  471     ;   r0x103E
                                    1-  472     ;; Starting pCode block
     0000                           1-  473     _isr:
                                    1-  474     ; 0 exit points
                                    1-  475     	.line	111, "main.c"; 	void isr(void) __interrupt(0) // 64us   //! 100us -- 10ms
     0000 00rr                      1-  476     	MOVAR	WSAVE
     0001 1503                      1-  477     	SWAPR	STATUS,W
     0002 0283                      1-  478     	CLRR	STATUS
     0003 00rr                      1-  479     	MOVAR	SSAVE
     0004 010A                      1-  480     	MOVR	PCHBUF,W
     0005 028A                      1-  481     	CLRR	PCHBUF
     0006 00rr                      1-  482     	MOVAR	PSAVE
     0007 0104                      1-  483     	MOVR	FSR,W
                                    1-  484     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1-  485     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  486     	MOVR	STK00,W
                                    1-  487     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 00rr                      1-  488     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  489     	MOVR	STK01,W
                                    1-  490     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1-  491     	MOVAR	___sdcc_saved_stk01
     0010 01rr                      1-  492     	MOVR	STK02,W
                                    1-  493     	BANKSEL	___sdcc_saved_stk02
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 00rr                      1-  494     	MOVAR	___sdcc_saved_stk02
     0013 01rr                      1-  495     	MOVR	STK03,W
                                    1-  496     	BANKSEL	___sdcc_saved_stk03
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 00rr                      1-  497     	MOVAR	___sdcc_saved_stk03
     0016 01rr                      1-  498     	MOVR	STK04,W
                                    1-  499     	BANKSEL	___sdcc_saved_stk04
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 00rr                      1-  500     	MOVAR	___sdcc_saved_stk04
                                    1-  501     	.line	116, "main.c"; 	if (TM0IF)
     0019 08rr                      1-  502     	BTRSS	_INTFbits,0
                                    1-  503     	MGOTO	_02027_DS_
     001A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  504     	.line	118, "main.c"; 	TM0IF = 0;
     001B 21FE                      1-  505     	MOVIA	0xfe
     001C 00rr                      1-  506     	MOVAR	(_INTFbits + 0)
                                    1-  507     	.line	119, "main.c"; 	TMR0 = 0x47;               // 125 138;//0x0F;  34.8us
     001D 2147                      1-  508     	MOVIA	0x47
     001E 00rr                      1-  509     	MOVAR	_TMR0
                                    1-  510     	.line	120, "main.c"; 	bFlag_gSysTick_Change = 1; // 128us
                                    1-  511     	BANKSEL	_vFlag_0
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 18rr                      1-  512     	BSR	_vFlag_0,0
                                    1-  513     	.line	121, "main.c"; 	if (yMotorWorkMode)
                                    1-  514     	BANKSEL	_yMotorWorkMode
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1-  515     	MOVR	_yMotorWorkMode,W
     0023 0D03                      1-  516     	BTRSC	STATUS,2
                                    1-  517     	MGOTO	_02011_DS_
     0024 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  518     	.line	123, "main.c"; 	yTimerCnt++;
                                    1-  519     	BANKSEL	_isr_yTimerCnt_65536_5
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 05rr                      1-  520     	INCR	_isr_yTimerCnt_65536_5,F
                                    1-  521     	.line	124, "main.c"; 	if (yTimerCnt >= yMotorWorkCycle)
                                    1-  522     	BANKSEL	_yMotorWorkCycle
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 01rr                      1-  523     	MOVR	_yMotorWorkCycle,W
                                    1-  524     	BANKSEL	_isr_yTimerCnt_65536_5
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 04rr                      1-  525     	SUBAR	_isr_yTimerCnt_65536_5,W
     002B 0C03                      1-  526     	BTRSC	STATUS,0
                                    1-  527     	.line	126, "main.c"; 	yTimerCnt = 0;
     002C 02rr                      1-  528     	CLRR	_isr_yTimerCnt_65536_5
                                    1-  529     	.line	128, "main.c"; 	if (yTimerCnt < yMotorWorkDuty)
                                    1-  530     	BANKSEL	_yMotorWorkDuty
     002D rrrr                      3-  109 m1      .banksel ram_address
     002E 01rr                      1-  531     	MOVR	_yMotorWorkDuty,W
                                    1-  532     	BANKSEL	_isr_yTimerCnt_65536_5
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 04rr                      1-  533     	SUBAR	_isr_yTimerCnt_65536_5,W
     0031 0C03                      1-  534     	BTRSC	STATUS,0
                                    1-  535     	MGOTO	_02008_DS_
     0032 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  536     	.line	130, "main.c"; 	Y_BDCM_ON;
     0033 18rr                      1-  537     	BSR	_PORTBbits,0
                                    1-  538     	MGOTO	_02011_DS_
     0034 3rrr                      3-   62 m1      LGOTO rom_address
     0035                           1-  539     _02008_DS_:
                                    1-  540     	.line	134, "main.c"; 	Y_BDCM_OFF;
     0035 1Crr                      1-  541     	BCR	_PORTBbits,0
     0036                           1-  542     _02011_DS_:
                                    1-  543     	.line	137, "main.c"; 	if (mMotorWorkMode)
                                    1-  544     	BANKSEL	_mMotorWorkMode
     0036 rrrr                      3-  109 m1      .banksel ram_address
     0037 01rr                      1-  545     	MOVR	_mMotorWorkMode,W
     0038 0D03                      1-  546     	BTRSC	STATUS,2
                                    1-  547     	MGOTO	_02027_DS_
     0039 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  548     	.line	139, "main.c"; 	mTimerCnt++;
                                    1-  549     	BANKSEL	_isr_mTimerCnt_65536_5
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 05rr                      1-  550     	INCR	_isr_mTimerCnt_65536_5,F
     003C 0D03                      1-  551     	BTRSC	STATUS,2
     003D 05rr                      1-  552     	INCR	(_isr_mTimerCnt_65536_5 + 1),F
                                    1-  553     	.line	140, "main.c"; 	if (mTimerCnt >= mMotorWorkCycle)
                                    1-  554     	BANKSEL	_mMotorWorkCycle
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 01rr                      1-  555     	MOVR	_mMotorWorkCycle,W
                                    1-  556     	BANKSEL	_isr_mTimerCnt_65536_5
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 04rr                      1-  557     	SUBAR	_isr_mTimerCnt_65536_5,W
                                    1-  558     	BANKSEL	_mMotorWorkCycle
     0042 rrrr                      3-  109 m1      .banksel ram_address
     0043 01rr                      1-  559     	MOVR	(_mMotorWorkCycle + 1),W
                                    1-  560     	BANKSEL	_isr_mTimerCnt_65536_5
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 35rr                      1-  561     	SBCAR	(_isr_mTimerCnt_65536_5 + 1),W
     0046 0803                      1-  562     	BTRSS	STATUS,0
                                    1-  563     	MGOTO	_02019_DS_
     0047 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  564     	.line	142, "main.c"; 	mTimerCnt = 0;
     0048 02rr                      1-  565     	CLRR	_isr_mTimerCnt_65536_5
     0049 02rr                      1-  566     	CLRR	(_isr_mTimerCnt_65536_5 + 1)
                                    1-  567     	.line	143, "main.c"; 	if (4 == mMotorWorkMode)
                                    1-  568     	BANKSEL	_mMotorWorkMode
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 01rr                      1-  569     	MOVR	_mMotorWorkMode,W
     004C 2404                      1-  570     	XORIA	0x04
     004D 0903                      1-  571     	BTRSS	STATUS,2
                                    1-  572     	MGOTO	_02019_DS_
     004E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  573     	.line	145, "main.c"; 	mMotorWorkMode4Cnt++; // 0 1 2 3
                                    1-  574     	BANKSEL	_mMotorWorkMode4Cnt
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 01rr                      1-  575     	MOVR	_mMotorWorkMode4Cnt,W
                                    1-  576     	BANKSEL	r0x103E
     0051 rrrr                      3-  109 m1      .banksel ram_address
     0052 00rr                      1-  577     	MOVAR	r0x103E
     0053 05rr                      1-  578     	INCR	r0x103E,W
                                    1-  579     	BANKSEL	_mMotorWorkMode4Cnt
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 00rr                      1-  580     	MOVAR	_mMotorWorkMode4Cnt
                                    1-  581     	.line	146, "main.c"; 	if (3 == mMotorWorkMode4Cnt)
     0056 2403                      1-  582     	XORIA	0x03
     0057 0903                      1-  583     	BTRSS	STATUS,2
                                    1-  584     	MGOTO	_02013_DS_
     0058 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  585     	.line	149, "main.c"; 	mMotorWorkDuty = 10000;  // 50% --- 200ms = 2000*100us
     0059 2110                      1-  586     	MOVIA	0x10
                                    1-  587     	BANKSEL	_mMotorWorkDuty
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 00rr                      1-  588     	MOVAR	_mMotorWorkDuty
     005C 2127                      1-  589     	MOVIA	0x27
     005D 00rr                      1-  590     	MOVAR	(_mMotorWorkDuty + 1)
                                    1-  591     	.line	150, "main.c"; 	mMotorWorkCycle = 12500; // 对应周期1250ms 12500*100us
     005E 21D4                      1-  592     	MOVIA	0xd4
                                    1-  593     	BANKSEL	_mMotorWorkCycle
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 00rr                      1-  594     	MOVAR	_mMotorWorkCycle
     0061 2130                      1-  595     	MOVIA	0x30
     0062 00rr                      1-  596     	MOVAR	(_mMotorWorkCycle + 1)
                                    1-  597     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  598     ;;unsigned compare: left >= lit(0x4=4), size=1
     0063                           1-  599     _02013_DS_:
                                    1-  600     	.line	152, "main.c"; 	if (mMotorWorkMode4Cnt > 3)
     0063 2104                      1-  601     	MOVIA	0x04
                                    1-  602     	BANKSEL	_mMotorWorkMode4Cnt
     0064 rrrr                      3-  109 m1      .banksel ram_address
     0065 04rr                      1-  603     	SUBAR	_mMotorWorkMode4Cnt,W
     0066 0803                      1-  604     	BTRSS	STATUS,0
                                    1-  605     	MGOTO	_02019_DS_
     0067 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  606     	.line	154, "main.c"; 	mMotorWorkMode4Cnt = 0;
     0068 02rr                      1-  607     	CLRR	_mMotorWorkMode4Cnt
                                    1-  608     	.line	155, "main.c"; 	mMotorWorkDuty = 2000;  // 50% --- 200ms = 2000*100us
     0069 21D0                      1-  609     	MOVIA	0xd0
                                    1-  610     	BANKSEL	_mMotorWorkDuty
     006A rrrr                      3-  109 m1      .banksel ram_address
     006B 00rr                      1-  611     	MOVAR	_mMotorWorkDuty
     006C 2107                      1-  612     	MOVIA	0x07
     006D 00rr                      1-  613     	MOVAR	(_mMotorWorkDuty + 1)
                                    1-  614     	.line	156, "main.c"; 	mMotorWorkCycle = 4000; // 对应周期400ms 1%=4ms 100%= 10ms
     006E 21A0                      1-  615     	MOVIA	0xa0
                                    1-  616     	BANKSEL	_mMotorWorkCycle
     006F rrrr                      3-  109 m1      .banksel ram_address
     0070 00rr                      1-  617     	MOVAR	_mMotorWorkCycle
     0071 210F                      1-  618     	MOVIA	0x0f
     0072 00rr                      1-  619     	MOVAR	(_mMotorWorkCycle + 1)
     0073                           1-  620     _02019_DS_:
                                    1-  621     	.line	161, "main.c"; 	if (mTimerCnt < mMotorWorkDuty)
                                    1-  622     	BANKSEL	_mMotorWorkDuty
     0073 rrrr                      3-  109 m1      .banksel ram_address
     0074 01rr                      1-  623     	MOVR	_mMotorWorkDuty,W
                                    1-  624     	BANKSEL	_isr_mTimerCnt_65536_5
     0075 rrrr                      3-  109 m1      .banksel ram_address
     0076 04rr                      1-  625     	SUBAR	_isr_mTimerCnt_65536_5,W
                                    1-  626     	BANKSEL	_mMotorWorkDuty
     0077 rrrr                      3-  109 m1      .banksel ram_address
     0078 01rr                      1-  627     	MOVR	(_mMotorWorkDuty + 1),W
                                    1-  628     	BANKSEL	_isr_mTimerCnt_65536_5
     0079 rrrr                      3-  109 m1      .banksel ram_address
     007A 35rr                      1-  629     	SBCAR	(_isr_mTimerCnt_65536_5 + 1),W
     007B 0C03                      1-  630     	BTRSC	STATUS,0
                                    1-  631     	MGOTO	_02021_DS_
     007C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  632     	.line	163, "main.c"; 	M_BDCM_ON;
     007D 18rr                      1-  633     	BSR	_PORTAbits,0
                                    1-  634     	MGOTO	_02027_DS_
     007E 3rrr                      3-   62 m1      LGOTO rom_address
     007F                           1-  635     _02021_DS_:
                                    1-  636     	.line	167, "main.c"; 	M_BDCM_OFF;
     007F 1Crr                      1-  637     	BCR	_PORTAbits,0
     0080                           1-  638     _02027_DS_:
                                    1-  639     	.line	171, "main.c"; 	}
                                    1-  640     	BANKSEL	___sdcc_saved_stk04
     0080 rrrr                      3-  109 m1      .banksel ram_address
     0081 01rr                      1-  641     	MOVR	___sdcc_saved_stk04,W
     0082 00rr                      1-  642     	MOVAR	STK04
                                    1-  643     	BANKSEL	___sdcc_saved_stk03
     0083 rrrr                      3-  109 m1      .banksel ram_address
     0084 01rr                      1-  644     	MOVR	___sdcc_saved_stk03,W
     0085 00rr                      1-  645     	MOVAR	STK03
                                    1-  646     	BANKSEL	___sdcc_saved_stk02
     0086 rrrr                      3-  109 m1      .banksel ram_address
     0087 01rr                      1-  647     	MOVR	___sdcc_saved_stk02,W
     0088 00rr                      1-  648     	MOVAR	STK02
                                    1-  649     	BANKSEL	___sdcc_saved_stk01
     0089 rrrr                      3-  109 m1      .banksel ram_address
     008A 01rr                      1-  650     	MOVR	___sdcc_saved_stk01,W
     008B 00rr                      1-  651     	MOVAR	STK01
                                    1-  652     	BANKSEL	___sdcc_saved_stk00
     008C rrrr                      3-  109 m1      .banksel ram_address
     008D 01rr                      1-  653     	MOVR	___sdcc_saved_stk00,W
     008E 00rr                      1-  654     	MOVAR	STK00
                                    1-  655     	BANKSEL	___sdcc_saved_fsr
     008F rrrr                      3-  109 m1      .banksel ram_address
     0090 01rr                      1-  656     	MOVR	___sdcc_saved_fsr,W
     0091 0084                      1-  657     	MOVAR	FSR
     0092 01rr                      1-  658     	MOVR	PSAVE,W
     0093 008A                      1-  659     	MOVAR	PCHBUF
     0094 0283                      1-  660     	CLRR	STATUS
     0095 15rr                      1-  661     	SWAPR	SSAVE,W
     0096 0083                      1-  662     	MOVAR	STATUS
     0097 15rr                      1-  663     	SWAPR	WSAVE,F
     0098 15rr                      1-  664     	SWAPR	WSAVE,W
     0099                           1-  665     END_OF_INTERRUPT:
     0099 0011                      1-  666     	RETIE	
                                    1-  668     ;--------------------------------------------------------
                                    1-  669     ; code
                                    1-  670     ;--------------------------------------------------------
                                    1-  671     ; code_main	code
                                    1-  672     ;***
                                    1-  673     ;  pBlock Stats: dbName = M
                                    1-  674     ;***
                                    1-  675     ;has an exit
                                    1-  676     ;functions called:
                                    1-  677     ;   _get_vin_status
                                    1-  678     ;   _Key_Proc
                                    1-  679     ;   _get_m68_pressure_nbytes
                                    1-  680     ;   _m68_pressure_proc
                                    1-  681     ;   _get_bat_vol
                                    1-  682     ;   _io_uart_tx
                                    1-  683     ;   _io_uart_tx
                                    1-  684     ;   _io_uart_tx
                                    1-  685     ;   _io_uart_tx
                                    1-  686     ;   _io_uart_tx
                                    1-  687     ;   _get_vin_status
                                    1-  688     ;   _Key_Proc
                                    1-  689     ;   _get_m68_pressure_nbytes
                                    1-  690     ;   _m68_pressure_proc
                                    1-  691     ;   _get_bat_vol
                                    1-  692     ;   _io_uart_tx
                                    1-  693     ;   _io_uart_tx
                                    1-  694     ;   _io_uart_tx
                                    1-  695     ;   _io_uart_tx
                                    1-  696     ;   _io_uart_tx
                                    1-  697     ;1 compiler assigned register :
                                    1-  698     ;   r0x103A
                                    1-  699     ;; Starting pCode block
                                    1-  700     .segment "code"; module=main, function=_main
     0000                           1-  702     _main:
                                    1-  703     ; 2 exit points
                                    1-  704     	.line	980, "main.c"; 	DISI();
     0000 0013                      1-  705     	DISI
                                    1-  706     	.line	981, "main.c"; 	PORTA = 0x0C;
     0001 210C                      1-  707     	MOVIA	0x0c
     0002 00rr                      1-  708     	MOVAR	_PORTA
                                    1-  709     	.line	982, "main.c"; 	PORTB = 0x02; // 0000 0010 PB1 = 1 m68 power off
     0003 2102                      1-  710     	MOVIA	0x02
     0004 00rr                      1-  711     	MOVAR	_PORTB
                                    1-  712     	.line	984, "main.c"; 	IOSTA = 0x4E; // PA5 Input <-- Set PA5 to open drain output
     0005 214E                      1-  713     	MOVIA	0x4e
     0006 000r                      1-  714     	IOST	_IOSTA
                                    1-  715     	.line	985, "main.c"; 	IOSTB = 0x0C; //
     0007 210C                      1-  716     	MOVIA	0x0c
     0008 000r                      1-  717     	IOST	_IOSTB
                                    1-  718     	.line	988, "main.c"; 	BPHCON &= 0xF3; //! Bit[5:0] : PortB Pull-High Control Register (1:Disable, 0:Pull-High)
     0009 21F3                      1-  719     	MOVIA	0xf3
     000A 10rr                      1-  720     	ANDAR	_BPHCON,F
                                    1-  721     	.line	991, "main.c"; 	PCON1 &= (~BIT0); // T0EN = 0;
     000B 001r                      1-  722     	IOSTR	_PCON1
                                    1-  723     	BANKSEL	r0x103A
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1-  724     	MOVAR	r0x103A
     000E 1Crr                      1-  725     	BCR	r0x103A,0
     000F 01rr                      1-  726     	MOVR	r0x103A,W
     0010 000r                      1-  727     	IOST	_PCON1
                                    1-  728     	.line	992, "main.c"; 	T0MD = 0x00;      // 8M,2T  Prescaler0 to timer0 预分频比（Dividing Rate）1:2,
     0011 0200                      1-  729     	CLRA	
     0012 0003                      1-  730     	T0MD	
                                    1-  731     	.line	993, "main.c"; 	INTE = 0x01;      // Timer0 overflow interrupt enable bit
     0013 2101                      1-  732     	MOVIA	0x01
     0014 00rr                      1-  733     	MOVAR	_INTE
                                    1-  734     	.line	994, "main.c"; 	PCON = 0x98;      //  C_WDT_En | C_LVR_En;                // Enable WDT ,  Enable LVR
     0015 2198                      1-  735     	MOVIA	0x98
     0016 00rr                      1-  736     	MOVAR	_PCON
                                    1-  737     	.line	996, "main.c"; 	PCON1 &= 0xE3;                 // 111 0 00 11
     0017 001r                      1-  738     	IOSTR	_PCON1
     0018 00rr                      1-  739     	MOVAR	r0x103A
     0019 21E3                      1-  740     	MOVIA	0xe3
     001A 10rr                      1-  741     	ANDAR	r0x103A,F
     001B 01rr                      1-  742     	MOVR	r0x103A,W
     001C 000r                      1-  743     	IOST	_PCON1
                                    1-  744     	.line	997, "main.c"; 	PCON1 |= (BIT4 | BIT3 | BIT0); // LVDS[2:0] 110 --3.6V,Enable Timer0
     001D 001r                      1-  745     	IOSTR	_PCON1
     001E 00rr                      1-  746     	MOVAR	r0x103A
     001F 2119                      1-  747     	MOVIA	0x19
     0020 11rr                      1-  748     	IORAR	r0x103A,F
     0021 01rr                      1-  749     	MOVR	r0x103A,W
     0022 000r                      1-  750     	IOST	_PCON1
                                    1-  751     	.line	998, "main.c"; 	PCON |= BIT5;                  // 开启LVD。
     0023 1Arr                      1-  752     	BSR	_PCON,5
                                    1-  753     	.line	999, "main.c"; 	ENI();                         //  Enable all unmasked interrupts
     0024 0004                      1-  754     	ENI
                                    1-  755     	.line	1001, "main.c"; 	delaySleepTime = CONST_DELAY_SLEEP_TIME;
     0025 2114                      1-  756     	MOVIA	0x14
                                    1-  757     	BANKSEL	_delaySleepTime
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 00rr                      1-  758     	MOVAR	_delaySleepTime
     0028                           1-  759     _02547_DS_:
                                    1-  760     	.line	1005, "main.c"; 	CLRWDT();
     0028 0002                      1-  761     	clrwdt
                                    1-  762     	.line	1007, "main.c"; 	if (bFlag_gSysTick_Change)
                                    1-  763     	BANKSEL	_vFlag_0
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 08rr                      1-  764     	BTRSS	_vFlag_0,0
                                    1-  765     	MGOTO	_02547_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  766     	.line	1009, "main.c"; 	bFlag_gSysTick_Change = 0;
     002C 1Crr                      1-  767     	BCR	_vFlag_0,0
                                    1-  768     	.line	1011, "main.c"; 	gSysTick++;
                                    1-  769     	BANKSEL	_gSysTick
     002D rrrr                      3-  109 m1      .banksel ram_address
     002E 01rr                      1-  770     	MOVR	_gSysTick,W
                                    1-  771     	BANKSEL	r0x103A
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 00rr                      1-  772     	MOVAR	r0x103A
     0031 05rr                      1-  773     	INCR	r0x103A,W
                                    1-  774     	BANKSEL	_gSysTick
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 00rr                      1-  775     	MOVAR	_gSysTick
                                    1-  776     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  777     ;;unsigned compare: left >= lit(0x64=100), size=1
                                    1-  778     	.line	1013, "main.c"; 	if (gSysTick > 99) // 10ms
     0034 2164                      1-  779     	MOVIA	0x64
     0035 04rr                      1-  780     	SUBAR	_gSysTick,W
     0036 0803                      1-  781     	BTRSS	STATUS,0
                                    1-  782     	MGOTO	_00001_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  783     	.line	1015, "main.c"; 	gSysTick = 0;
     0038 02rr                      1-  784     	CLRR	_gSysTick
                                    1-  785     	.line	1016, "main.c"; 	timer_slice_10ms++;
                                    1-  786     	BANKSEL	_timer_slice_10ms
     0039 rrrr                      3-  109 m1      .banksel ram_address
     003A 01rr                      1-  787     	MOVR	_timer_slice_10ms,W
                                    1-  788     	BANKSEL	r0x103A
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 00rr                      1-  789     	MOVAR	r0x103A
     003D 05rr                      1-  790     	INCR	r0x103A,W
                                    1-  791     	BANKSEL	_timer_slice_10ms
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 00rr                      1-  792     	MOVAR	_timer_slice_10ms
                                    1-  793     	.line	1017, "main.c"; 	get_vin_status();
                                    1-  794     	MCALL	_get_vin_status
     0040 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  795     	.line	1018, "main.c"; 	Key_Proc();
                                    1-  796     	MCALL	_Key_Proc
     0041 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  797     	.line	1019, "main.c"; 	if (delay_op_m68_timer)
                                    1-  798     	BANKSEL	_delay_op_m68_timer
     0042 rrrr                      3-  109 m1      .banksel ram_address
     0043 01rr                      1-  799     	MOVR	_delay_op_m68_timer,W
     0044 0D03                      1-  800     	BTRSC	STATUS,2
                                    1-  801     	MGOTO	_02503_DS_
     0045 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  802     	.line	1021, "main.c"; 	delay_op_m68_timer--;
     0046 01rr                      1-  803     	MOVR	_delay_op_m68_timer,W
                                    1-  804     	BANKSEL	r0x103A
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1-  805     	MOVAR	r0x103A
     0049 06rr                      1-  806     	DECR	r0x103A,W
                                    1-  807     	BANKSEL	_delay_op_m68_timer
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 00rr                      1-  808     	MOVAR	_delay_op_m68_timer
     004C                           1-  809     _02503_DS_:
                                    1-  810     	.line	1024, "main.c"; 	if (!(timer_slice_10ms & 0x1F)) // 320ms
                                    1-  811     	BANKSEL	_timer_slice_10ms
     004C rrrr                      3-  109 m1      .banksel ram_address
     004D 01rr                      1-  812     	MOVR	_timer_slice_10ms,W
     004E 221F                      1-  813     	ANDIA	0x1f
     004F 0903                      1-  814     	BTRSS	STATUS,2
                                    1-  815     	MGOTO	_00001_DS_
     0050 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  816     	.line	1026, "main.c"; 	bFlag_Timeslice_320ms = 1;
                                    1-  817     	BANKSEL	_vFlag_0
     0051 rrrr                      3-  109 m1      .banksel ram_address
     0052 18rr                      1-  818     	BSR	_vFlag_0,1
     0053                           1-  819     _00001_DS_:
                                    1-  820     	.line	1030, "main.c"; 	if (bFlag_Timeslice_320ms)
                                    1-  821     	BANKSEL	_vFlag_0
     0053 rrrr                      3-  109 m1      .banksel ram_address
     0054 08rr                      1-  822     	BTRSS	_vFlag_0,1
                                    1-  823     	MGOTO	_02547_DS_
     0055 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  824     	.line	1032, "main.c"; 	bFlag_Timeslice_320ms = 0;
     0056 1Crr                      1-  825     	BCR	_vFlag_0,1
                                    1-  826     	.line	1033, "main.c"; 	P_DECODE ^= 1;
                                    1-  827     	BANKSEL	r0x103A
     0057 rrrr                      3-  109 m1      .banksel ram_address
     0058 02rr                      1-  828     	CLRR	r0x103A
     0059 0Frr                      1-  829     	BTRSC	_PORTAbits,7
     005A 05rr                      1-  830     	INCR	r0x103A,F
     005B 2101                      1-  831     	MOVIA	0x01
     005C 12rr                      1-  832     	XORAR	r0x103A,F
     005D 13rr                      1-  833     	RRR	r0x103A,W
     005E 0803                      1-  834     	BTRSS	STATUS,0
     005F 1Frr                      1-  835     	BCR	_PORTAbits,7
     0060 0C03                      1-  836     	BTRSC	STATUS,0
     0061 1Brr                      1-  837     	BSR	_PORTAbits,7
                                    1-  838     	.line	1034, "main.c"; 	bFlag_blink ^= 1;
     0062 2180                      1-  839     	MOVIA	0x80
                                    1-  840     	BANKSEL	_vFlag_0
     0063 rrrr                      3-  109 m1      .banksel ram_address
     0064 12rr                      1-  841     	XORAR	_vFlag_0,F
                                    1-  842     	.line	1036, "main.c"; 	if ((yMotorWorkMode) && (yMotorWorkMode < 4))
                                    1-  843     	BANKSEL	_yMotorWorkMode
     0065 rrrr                      3-  109 m1      .banksel ram_address
     0066 01rr                      1-  844     	MOVR	_yMotorWorkMode,W
     0067 0D03                      1-  845     	BTRSC	STATUS,2
                                    1-  846     	MGOTO	_02511_DS_
     0068 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  847     ;;unsigned compare: left < lit(0x4=4), size=1
     0069 2104                      1-  848     	MOVIA	0x04
     006A 04rr                      1-  849     	SUBAR	_yMotorWorkMode,W
     006B 0C03                      1-  850     	BTRSC	STATUS,0
                                    1-  851     	MGOTO	_02511_DS_
     006C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  852     	.line	1038, "main.c"; 	if (0 == delay_op_m68_timer)
                                    1-  853     	BANKSEL	_delay_op_m68_timer
     006D rrrr                      3-  109 m1      .banksel ram_address
     006E 01rr                      1-  854     	MOVR	_delay_op_m68_timer,W
     006F 0903                      1-  855     	BTRSS	STATUS,2
                                    1-  856     	MGOTO	_02511_DS_
     0070 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  857     	.line	1040, "main.c"; 	get_m68_pressure_nbytes();
                                    1-  858     	MCALL	_get_m68_pressure_nbytes
     0071 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  859     	.line	1041, "main.c"; 	m68_pressure_proc();
                                    1-  860     	MCALL	_m68_pressure_proc
     0072 2rrr                      3-   65 m1      LCALL rom_address
     0073                           1-  861     _02511_DS_:
                                    1-  862     	.line	1044, "main.c"; 	get_bat_vol();
                                    1-  863     	MCALL	_get_bat_vol
     0073 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  864     	.line	1045, "main.c"; 	if (red_led_blink_cnt)
                                    1-  865     	BANKSEL	_red_led_blink_cnt
     0074 rrrr                      3-  109 m1      .banksel ram_address
     0075 01rr                      1-  866     	MOVR	_red_led_blink_cnt,W
     0076 0D03                      1-  867     	BTRSC	STATUS,2
                                    1-  868     	MGOTO	_02521_DS_
     0077 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  869     	.line	1047, "main.c"; 	red_led_blink_cnt--;
     0078 01rr                      1-  870     	MOVR	_red_led_blink_cnt,W
                                    1-  871     	BANKSEL	r0x103A
     0079 rrrr                      3-  109 m1      .banksel ram_address
     007A 00rr                      1-  872     	MOVAR	r0x103A
     007B 06rr                      1-  873     	DECR	r0x103A,W
                                    1-  874     	BANKSEL	_red_led_blink_cnt
     007C rrrr                      3-  109 m1      .banksel ram_address
     007D 00rr                      1-  875     	MOVAR	_red_led_blink_cnt
                                    1-  876     	.line	1048, "main.c"; 	if (red_led_blink_cnt % 2)
     007E 08rr                      1-  877     	BTRSS	_red_led_blink_cnt,0
                                    1-  878     	MGOTO	_02514_DS_
     007F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  879     	.line	1050, "main.c"; 	bFlag_light_on = 1;
                                    1-  880     	BANKSEL	_vFlag_0
     0080 rrrr                      3-  109 m1      .banksel ram_address
     0081 19rr                      1-  881     	BSR	_vFlag_0,3
                                    1-  882     	.line	1051, "main.c"; 	io_uart_tx(0xA1);
     0082 21A1                      1-  883     	MOVIA	0xa1
                                    1-  884     	MCALL	_io_uart_tx
     0083 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  885     	.line	1052, "main.c"; 	P_LED_R_OUTPUT;
     0084 001r                      1-  886     	IOSTR	_IOSTA
                                    1-  887     	BANKSEL	r0x103A
     0085 rrrr                      3-  109 m1      .banksel ram_address
     0086 00rr                      1-  888     	MOVAR	r0x103A
     0087 1Crr                      1-  889     	BCR	r0x103A,1
     0088 01rr                      1-  890     	MOVR	r0x103A,W
     0089 000r                      1-  891     	IOST	_IOSTA
                                    1-  892     	.line	1053, "main.c"; 	P_LED_R_ON;
     008A 18rr                      1-  893     	BSR	_PORTAbits,1
                                    1-  894     	MGOTO	_02515_DS_
     008B 3rrr                      3-   62 m1      LGOTO rom_address
     008C                           1-  895     _02514_DS_:
                                    1-  896     	.line	1057, "main.c"; 	bFlag_light_on = 0;
                                    1-  897     	BANKSEL	_vFlag_0
     008C rrrr                      3-  109 m1      .banksel ram_address
     008D 1Drr                      1-  898     	BCR	_vFlag_0,3
                                    1-  899     	.line	1058, "main.c"; 	io_uart_tx(0xA0);
     008E 21A0                      1-  900     	MOVIA	0xa0
                                    1-  901     	MCALL	_io_uart_tx
     008F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  902     	.line	1059, "main.c"; 	P_LED_R_OUTPUT;
     0090 001r                      1-  903     	IOSTR	_IOSTA
                                    1-  904     	BANKSEL	r0x103A
     0091 rrrr                      3-  109 m1      .banksel ram_address
     0092 00rr                      1-  905     	MOVAR	r0x103A
     0093 1Crr                      1-  906     	BCR	r0x103A,1
     0094 01rr                      1-  907     	MOVR	r0x103A,W
     0095 000r                      1-  908     	IOST	_IOSTA
                                    1-  909     	.line	1060, "main.c"; 	P_LED_R_OFF;
     0096 1Crr                      1-  910     	BCR	_PORTAbits,1
     0097                           1-  911     _02515_DS_:
                                    1-  912     	.line	1062, "main.c"; 	if (0 == red_led_blink_cnt)
                                    1-  913     	BANKSEL	_red_led_blink_cnt
     0097 rrrr                      3-  109 m1      .banksel ram_address
     0098 01rr                      1-  914     	MOVR	_red_led_blink_cnt,W
     0099 0903                      1-  915     	BTRSS	STATUS,2
                                    1-  916     	MGOTO	_02522_DS_
     009A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  917     	.line	1064, "main.c"; 	if (bFlag_bat_vol_shutdown)
                                    1-  918     	BANKSEL	_vFlag_0
     009B rrrr                      3-  109 m1      .banksel ram_address
     009C 0Brr                      1-  919     	BTRSS	_vFlag_0,6
                                    1-  920     	MGOTO	_02522_DS_
     009D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  921     	.line	1066, "main.c"; 	io_uart_tx(0x22);
     009E 2122                      1-  922     	MOVIA	0x22
                                    1-  923     	MCALL	_io_uart_tx
     009F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  924     	.line	1067, "main.c"; 	yMotorWorkMode = 0;
                                    1-  925     	BANKSEL	_yMotorWorkMode
     00A0 rrrr                      3-  109 m1      .banksel ram_address
     00A1 02rr                      1-  926     	CLRR	_yMotorWorkMode
                                    1-  927     	.line	1068, "main.c"; 	yMotorWorkDuty = 0;    // 0/200 = 0%
                                    1-  928     	BANKSEL	_yMotorWorkDuty
     00A2 rrrr                      3-  109 m1      .banksel ram_address
     00A3 02rr                      1-  929     	CLRR	_yMotorWorkDuty
                                    1-  930     	.line	1069, "main.c"; 	yMotorWorkCycle = 200; // 对应周期20ms = 200*100us
     00A4 21C8                      1-  931     	MOVIA	0xc8
                                    1-  932     	BANKSEL	_yMotorWorkCycle
     00A5 rrrr                      3-  109 m1      .banksel ram_address
     00A6 00rr                      1-  933     	MOVAR	_yMotorWorkCycle
                                    1-  934     	.line	1070, "main.c"; 	Y_BDCM_OFF;
     00A7 1Crr                      1-  935     	BCR	_PORTBbits,0
                                    1-  936     	.line	1071, "main.c"; 	M68_POWER_OFF;
     00A8 18rr                      1-  937     	BSR	_PORTBbits,1
                                    1-  938     	.line	1073, "main.c"; 	io_uart_tx(0x11);
     00A9 2111                      1-  939     	MOVIA	0x11
                                    1-  940     	MCALL	_io_uart_tx
     00AA 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  941     	.line	1074, "main.c"; 	mMotorWorkMode = 0;
                                    1-  942     	BANKSEL	_mMotorWorkMode
     00AB rrrr                      3-  109 m1      .banksel ram_address
     00AC 02rr                      1-  943     	CLRR	_mMotorWorkMode
                                    1-  944     	.line	1075, "main.c"; 	mMotorWorkDuty = 0;    // 0% = 0*100us = 0ms
                                    1-  945     	BANKSEL	_mMotorWorkDuty
     00AD rrrr                      3-  109 m1      .banksel ram_address
     00AE 02rr                      1-  946     	CLRR	_mMotorWorkDuty
     00AF 02rr                      1-  947     	CLRR	(_mMotorWorkDuty + 1)
                                    1-  948     	.line	1076, "main.c"; 	mMotorWorkCycle = 100; // 对应周期10ms 1%=100us 100%= 10ms
     00B0 2164                      1-  949     	MOVIA	0x64
                                    1-  950     	BANKSEL	_mMotorWorkCycle
     00B1 rrrr                      3-  109 m1      .banksel ram_address
     00B2 00rr                      1-  951     	MOVAR	_mMotorWorkCycle
     00B3 02rr                      1-  952     	CLRR	(_mMotorWorkCycle + 1)
                                    1-  953     	.line	1077, "main.c"; 	M_BDCM_OFF;
     00B4 1Crr                      1-  954     	BCR	_PORTAbits,0
                                    1-  955     	MGOTO	_02522_DS_
     00B5 3rrr                      3-   62 m1      LGOTO rom_address
     00B6                           1-  956     _02521_DS_:
                                    1-  957     	.line	1083, "main.c"; 	bFlag_light_on = 0;
                                    1-  958     	BANKSEL	_vFlag_0
     00B6 rrrr                      3-  109 m1      .banksel ram_address
     00B7 1Drr                      1-  959     	BCR	_vFlag_0,3
                                    1-  960     	.line	1084, "main.c"; 	io_uart_tx(0xA0);
     00B8 21A0                      1-  961     	MOVIA	0xa0
                                    1-  962     	MCALL	_io_uart_tx
     00B9 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  963     	.line	1085, "main.c"; 	P_LED_R_OUTPUT;
     00BA 001r                      1-  964     	IOSTR	_IOSTA
                                    1-  965     	BANKSEL	r0x103A
     00BB rrrr                      3-  109 m1      .banksel ram_address
     00BC 00rr                      1-  966     	MOVAR	r0x103A
     00BD 1Crr                      1-  967     	BCR	r0x103A,1
     00BE 01rr                      1-  968     	MOVR	r0x103A,W
     00BF 000r                      1-  969     	IOST	_IOSTA
                                    1-  970     	.line	1086, "main.c"; 	P_LED_R_OFF;
     00C0 1Crr                      1-  971     	BCR	_PORTAbits,1
     00C1                           1-  972     _02522_DS_:
                                    1-  973     	.line	1088, "main.c"; 	if ((yMotorWorkMode) || (mMotorWorkMode))
                                    1-  974     	BANKSEL	_yMotorWorkMode
     00C1 rrrr                      3-  109 m1      .banksel ram_address
     00C2 01rr                      1-  975     	MOVR	_yMotorWorkMode,W
     00C3 0903                      1-  976     	BTRSS	STATUS,2
                                    1-  977     	MGOTO	_02523_DS_
     00C4 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  978     	BANKSEL	_mMotorWorkMode
     00C5 rrrr                      3-  109 m1      .banksel ram_address
     00C6 01rr                      1-  979     	MOVR	_mMotorWorkMode,W
     00C7 0D03                      1-  980     	BTRSC	STATUS,2
                                    1-  981     	MGOTO	_02524_DS_
     00C8 3rrr                      3-   62 m1      LGOTO rom_address
     00C9                           1-  982     _02523_DS_:
                                    1-  983     	.line	1090, "main.c"; 	delaySleepTime = CONST_DELAY_SLEEP_TIME;
     00C9 2114                      1-  984     	MOVIA	0x14
                                    1-  985     	BANKSEL	_delaySleepTime
     00CA rrrr                      3-  109 m1      .banksel ram_address
     00CB 00rr                      1-  986     	MOVAR	_delaySleepTime
     00CC                           1-  987     _02524_DS_:
                                    1-  988     	.line	1092, "main.c"; 	if ((0 == bFlag_Vin_Plug_In) && (0 == yMotorWorkMode) && (0 == mMotorWorkMode) && (0 == red_led_blink_cnt))
                                    1-  989     	BANKSEL	_vFlag_0
     00CC rrrr                      3-  109 m1      .banksel ram_address
     00CD 0Err                      1-  990     	BTRSC	_vFlag_0,4
                                    1-  991     	MGOTO	_02547_DS_
     00CE 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  992     	BANKSEL	_yMotorWorkMode
     00CF rrrr                      3-  109 m1      .banksel ram_address
     00D0 01rr                      1-  993     	MOVR	_yMotorWorkMode,W
     00D1 0903                      1-  994     	BTRSS	STATUS,2
                                    1-  995     	MGOTO	_02547_DS_
     00D2 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  996     	BANKSEL	_mMotorWorkMode
     00D3 rrrr                      3-  109 m1      .banksel ram_address
     00D4 01rr                      1-  997     	MOVR	_mMotorWorkMode,W
     00D5 0903                      1-  998     	BTRSS	STATUS,2
                                    1-  999     	MGOTO	_02547_DS_
     00D6 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1000     	BANKSEL	_red_led_blink_cnt
     00D7 rrrr                      3-  109 m1      .banksel ram_address
     00D8 01rr                      1- 1001     	MOVR	_red_led_blink_cnt,W
     00D9 0903                      1- 1002     	BTRSS	STATUS,2
                                    1- 1003     	MGOTO	_02547_DS_
     00DA 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1004     	.line	1094, "main.c"; 	if (!delaySleepTime)
                                    1- 1005     	BANKSEL	_delaySleepTime
     00DB rrrr                      3-  109 m1      .banksel ram_address
     00DC 01rr                      1- 1006     	MOVR	_delaySleepTime,W
     00DD 0903                      1- 1007     	BTRSS	STATUS,2
                                    1- 1008     	MGOTO	_02535_DS_
     00DE 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1009     	.line	1097, "main.c"; 	DISI();
     00DF 0013                      1- 1010     	DISI
                                    1- 1011     	.line	1098, "main.c"; 	INTE = 0x00; // Timer0 overflow interrupt enable bit
     00E0 02rr                      1- 1012     	CLRR	_INTE
                                    1- 1013     	.line	1099, "main.c"; 	PCON = 0x18;
     00E1 2118                      1- 1014     	MOVIA	0x18
     00E2 00rr                      1- 1015     	MOVAR	_PCON
                                    1- 1016     	.line	1100, "main.c"; 	PORTA = 0x0C;
     00E3 210C                      1- 1017     	MOVIA	0x0c
     00E4 00rr                      1- 1018     	MOVAR	_PORTA
                                    1- 1019     	.line	1101, "main.c"; 	PORTB = 0x02;          // PB1 = 1
     00E5 2102                      1- 1020     	MOVIA	0x02
     00E6 00rr                      1- 1021     	MOVAR	_PORTB
                                    1- 1022     	.line	1102, "main.c"; 	IOSTA = 0x4E;          // PA5 Input <-- Set PA5 to open drain output
     00E7 214E                      1- 1023     	MOVIA	0x4e
     00E8 000r                      1- 1024     	IOST	_IOSTA
                                    1- 1025     	.line	1103, "main.c"; 	IOSTB = 0x0C;          // PB5 output PB4 Input
     00E9 210C                      1- 1026     	MOVIA	0x0c
     00EA 000r                      1- 1027     	IOST	_IOSTB
                                    1- 1028     	.line	1104, "main.c"; 	AWUCON = C_PA6_Wakeup; //(C_PA5_Wakeup | C_PA4_Wakeup | C_PA0_Wakeup);
     00EB 2140                      1- 1029     	MOVIA	0x40
     00EC 00rr                      1- 1030     	MOVAR	_AWUCON
                                    1- 1031     	.line	1105, "main.c"; 	BWUCON = (C_PB3_Wakeup | C_PB2_Wakeup);
     00ED 210C                      1- 1032     	MOVIA	0x0c
     00EE 00rr                      1- 1033     	MOVAR	_BWUCON
                                    1- 1034     	.line	1106, "main.c"; 	INTE = C_INT_PABKey; // Enable PortB input change interrupt
     00EF 2102                      1- 1035     	MOVIA	0x02
     00F0 00rr                      1- 1036     	MOVAR	_INTE
                                    1- 1037     	.line	1107, "main.c"; 	INTF = 0;
     00F1 02rr                      1- 1038     	CLRR	_INTF
                                    1- 1039     	.line	1108, "main.c"; 	if (0 == P_KEY_M)
     00F2 09rr                      1- 1040     	BTRSS	_PORTBbits,3
                                    1- 1041     	MGOTO	_02530_DS_
     00F3 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1042     	.line	1112, "main.c"; 	if (0 == P_KEY_Y)
     00F4 09rr                      1- 1043     	BTRSS	_PORTBbits,2
                                    1- 1044     	MGOTO	_02530_DS_
     00F5 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1045     	.line	1116, "main.c"; 	ADMD = C_ADC_CH_Dis | C_Quarter_VDD;
     00F6 210B                      1- 1046     	MOVIA	0x0b
     00F7 00rr                      1- 1047     	MOVAR	_ADMD
                                    1- 1048     	.line	1117, "main.c"; 	ADMDbits.GCHS = 0; // disable global ADC channel    (SFR "ADMD")
     00F8 1Err                      1- 1049     	BCR	_ADMDbits,4
                                    1- 1050     	.line	1118, "main.c"; 	UPDATE_REG(PORTB);
     00F9 01rr                      1- 1051     	MOVR	_PORTB,F
                                    1- 1052     	.line	1119, "main.c"; 	UPDATE_REG(PORTA);
     00FA 01rr                      1- 1053     	MOVR	_PORTA,F
                                    1- 1054     	.line	1120, "main.c"; 	NOP();
     00FB 0000                      1- 1055     	nop
                                    1- 1056     	.line	1121, "main.c"; 	SLEEP();
     00FC 0001                      1- 1057     	sleep
     00FD                           1- 1058     _02530_DS_:
                                    1- 1059     	.line	1123, "main.c"; 	INTFbits.PABIF = 0;
     00FD 21FD                      1- 1060     	MOVIA	0xfd
     00FE 00rr                      1- 1061     	MOVAR	(_INTFbits + 0)
                                    1- 1062     	.line	1125, "main.c"; 	delaySleepTime = CONST_DELAY_SLEEP_TIME;
     00FF 2114                      1- 1063     	MOVIA	0x14
                                    1- 1064     	BANKSEL	_delaySleepTime
     0100 rrrr                      3-  109 m1      .banksel ram_address
     0101 00rr                      1- 1065     	MOVAR	_delaySleepTime
                                    1- 1066     	.line	1126, "main.c"; 	bFlag_bat_vol_shutdown = 0;
                                    1- 1067     	BANKSEL	_vFlag_0
     0102 rrrr                      3-  109 m1      .banksel ram_address
     0103 1Frr                      1- 1068     	BCR	_vFlag_0,6
                                    1- 1069     	.line	1127, "main.c"; 	if (bFlag_bat_vol_low)
     0104 0Arr                      1- 1070     	BTRSS	_vFlag_0,5
                                    1- 1071     	MGOTO	_02532_DS_
     0105 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1072     	.line	1129, "main.c"; 	PCON1 &= 0xE3;                 // 111 0 00 11
     0106 001r                      1- 1073     	IOSTR	_PCON1
                                    1- 1074     	BANKSEL	r0x103A
     0107 rrrr                      3-  109 m1      .banksel ram_address
     0108 00rr                      1- 1075     	MOVAR	r0x103A
     0109 21E3                      1- 1076     	MOVIA	0xe3
     010A 10rr                      1- 1077     	ANDAR	r0x103A,F
     010B 01rr                      1- 1078     	MOVR	r0x103A,W
     010C 000r                      1- 1079     	IOST	_PCON1
                                    1- 1080     	.line	1130, "main.c"; 	PCON1 |= (BIT4 | BIT2 | BIT0); // LVDS[2:0] 101 --3.3V
     010D 001r                      1- 1081     	IOSTR	_PCON1
     010E 00rr                      1- 1082     	MOVAR	r0x103A
     010F 2115                      1- 1083     	MOVIA	0x15
     0110 11rr                      1- 1084     	IORAR	r0x103A,F
     0111 01rr                      1- 1085     	MOVR	r0x103A,W
     0112 000r                      1- 1086     	IOST	_PCON1
                                    1- 1087     	MGOTO	_02533_DS_
     0113 3rrr                      3-   62 m1      LGOTO rom_address
     0114                           1- 1088     _02532_DS_:
                                    1- 1089     	.line	1134, "main.c"; 	PCON1 &= 0xE3;                 // 111 0 00 11
     0114 001r                      1- 1090     	IOSTR	_PCON1
                                    1- 1091     	BANKSEL	r0x103A
     0115 rrrr                      3-  109 m1      .banksel ram_address
     0116 00rr                      1- 1092     	MOVAR	r0x103A
     0117 21E3                      1- 1093     	MOVIA	0xe3
     0118 10rr                      1- 1094     	ANDAR	r0x103A,F
     0119 01rr                      1- 1095     	MOVR	r0x103A,W
     011A 000r                      1- 1096     	IOST	_PCON1
                                    1- 1097     	.line	1135, "main.c"; 	PCON1 |= (BIT4 | BIT3 | BIT0); // LVDS[2:0] 110 --3.6V
     011B 001r                      1- 1098     	IOSTR	_PCON1
     011C 00rr                      1- 1099     	MOVAR	r0x103A
     011D 2119                      1- 1100     	MOVIA	0x19
     011E 11rr                      1- 1101     	IORAR	r0x103A,F
     011F 01rr                      1- 1102     	MOVR	r0x103A,W
     0120 000r                      1- 1103     	IOST	_PCON1
     0121                           1- 1104     _02533_DS_:
                                    1- 1105     	.line	1138, "main.c"; 	PCON = 0x98;
     0121 2198                      1- 1106     	MOVIA	0x98
     0122 00rr                      1- 1107     	MOVAR	_PCON
                                    1- 1108     	.line	1139, "main.c"; 	PCON |= BIT5; // 开启LVD。
     0123 1Arr                      1- 1109     	BSR	_PCON,5
                                    1- 1110     	.line	1140, "main.c"; 	INTE = 0x01;  // Timer0 overflow interrupt enable bit
     0124 2101                      1- 1111     	MOVIA	0x01
     0125 00rr                      1- 1112     	MOVAR	_INTE
                                    1- 1113     	.line	1141, "main.c"; 	ENI();
     0126 0004                      1- 1114     	ENI
                                    1- 1115     	MGOTO	_02547_DS_
     0127 3rrr                      3-   62 m1      LGOTO rom_address
     0128                           1- 1116     _02535_DS_:
                                    1- 1117     	.line	1145, "main.c"; 	delaySleepTime--;
                                    1- 1118     	BANKSEL	_delaySleepTime
     0128 rrrr                      3-  109 m1      .banksel ram_address
     0129 01rr                      1- 1119     	MOVR	_delaySleepTime,W
                                    1- 1120     	BANKSEL	r0x103A
     012A rrrr                      3-  109 m1      .banksel ram_address
     012B 00rr                      1- 1121     	MOVAR	r0x103A
     012C 06rr                      1- 1122     	DECR	r0x103A,W
                                    1- 1123     	BANKSEL	_delaySleepTime
     012D rrrr                      3-  109 m1      .banksel ram_address
     012E 00rr                      1- 1124     	MOVAR	_delaySleepTime
                                    1- 1125     	MGOTO	_02547_DS_
     012F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1126     	.line	1151, "main.c"; 	}
                                    1- 1127     	RETURN	
     0130 0010                      3-   39 m1      ret
                                    1- 1128     ; exit point of _main
                                    1- 1130     ;***
                                    1- 1131     ;  pBlock Stats: dbName = C
                                    1- 1132     ;***
                                    1- 1133     ;has an exit
                                    1- 1134     ;2 compiler assigned registers:
                                    1- 1135     ;   r0x1026
                                    1- 1136     ;   r0x1027
                                    1- 1137     ;; Starting pCode block
                                    1- 1138     .segment "code"; module=main, function=_io_uart_tx
                                    1- 1140     ;local variable name mapping:
     0000                           1- 1143     _io_uart_tx:
                                    1- 1144     ; 2 exit points
                                    1- 1145     	.line	924, "main.c"; 	void io_uart_tx(unsigned char sendByte)
                                    1- 1146     	BANKSEL	r0x1026
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 1147     	MOVAR	r0x1026
                                    1- 1148     	.line	930, "main.c"; 	DISI(); // GIE = 0;
     0002 0013                      1- 1149     	DISI
                                    1- 1150     	.line	931, "main.c"; 	P_IO_UART_TX_OUTPUT;
     0003 001r                      1- 1151     	IOSTR	_IOSTA
                                    1- 1152     	BANKSEL	r0x1027
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 00rr                      1- 1153     	MOVAR	r0x1027
     0006 1Err                      1- 1154     	BCR	r0x1027,4
     0007 01rr                      1- 1155     	MOVR	r0x1027,W
     0008 000r                      1- 1156     	IOST	_IOSTA
                                    1- 1157     	.line	932, "main.c"; 	P_IO_UART_TX_CLR; // 输出高
     0009 1Err                      1- 1158     	BCR	_PORTAbits,4
                                    1- 1159     	.line	933, "main.c"; 	NOP();
     000A 0000                      1- 1160     	nop
                                    1- 1161     	.line	934, "main.c"; 	NOP();
     000B 0000                      1- 1162     	nop
                                    1- 1163     	.line	935, "main.c"; 	NOP();
     000C 0000                      1- 1164     	nop
                                    1- 1165     	.line	936, "main.c"; 	NOP();
     000D 0000                      1- 1166     	nop
                                    1- 1167     	.line	937, "main.c"; 	NOP();
     000E 0000                      1- 1168     	nop
                                    1- 1169     	.line	938, "main.c"; 	NOP();
     000F 0000                      1- 1170     	nop
                                    1- 1171     	.line	939, "main.c"; 	NOP();
     0010 0000                      1- 1172     	nop
                                    1- 1173     	.line	940, "main.c"; 	NOP();
     0011 0000                      1- 1174     	nop
                                    1- 1175     	.line	941, "main.c"; 	NOP();
     0012 0000                      1- 1176     	nop
                                    1- 1177     	.line	943, "main.c"; 	while (bCount)
     0013 2108                      1- 1178     	MOVIA	0x08
                                    1- 1179     	BANKSEL	r0x1027
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 00rr                      1- 1180     	MOVAR	r0x1027
     0016                           1- 1181     _02495_DS_:
                                    1- 1182     	BANKSEL	r0x1027
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 01rr                      1- 1183     	MOVR	r0x1027,W
     0018 0D03                      1- 1184     	BTRSC	STATUS,2
                                    1- 1185     	MGOTO	_02497_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1186     	.line	945, "main.c"; 	if (sendByte & 0x01)
                                    1- 1187     	BANKSEL	r0x1026
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 08rr                      1- 1188     	BTRSS	r0x1026,0
                                    1- 1189     	MGOTO	_02493_DS_
     001C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1190     	.line	947, "main.c"; 	P_IO_UART_TX_SET; // 输出高
     001D 1Arr                      1- 1191     	BSR	_PORTAbits,4
                                    1- 1192     	.line	948, "main.c"; 	NOP();
     001E 0000                      1- 1193     	nop
                                    1- 1194     	.line	949, "main.c"; 	NOP();
     001F 0000                      1- 1195     	nop
                                    1- 1196     	MGOTO	_02494_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021                           1- 1197     _02493_DS_:
                                    1- 1198     	.line	953, "main.c"; 	P_IO_UART_TX_CLR; // 输出低
     0021 1Err                      1- 1199     	BCR	_PORTAbits,4
                                    1- 1200     	.line	954, "main.c"; 	NOP();
     0022 0000                      1- 1201     	nop
                                    1- 1202     	.line	955, "main.c"; 	NOP();
     0023 0000                      1- 1203     	nop
                                    1- 1204     	.line	956, "main.c"; 	NOP();
     0024 0000                      1- 1205     	nop
                                    1- 1206     	.line	957, "main.c"; 	NOP();
     0025 0000                      1- 1207     	nop
                                    1- 1208     	.line	958, "main.c"; 	NOP();
     0026 0000                      1- 1209     	nop
     0027                           1- 1210     _02494_DS_:
                                    1- 1211     	.line	960, "main.c"; 	bCount--;
                                    1- 1212     	BANKSEL	r0x1027
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 06rr                      1- 1213     	DECR	r0x1027,F
                                    1- 1214     	.line	961, "main.c"; 	sendByte >>= 1;
     0029 1C03                      1- 1215     	BCR	STATUS,0
                                    1- 1216     	BANKSEL	r0x1026
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 13rr                      1- 1217     	RRR	r0x1026,F
                                    1- 1218     	MGOTO	_02495_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
     002D                           1- 1219     _02497_DS_:
                                    1- 1220     	.line	964, "main.c"; 	NOP();
     002D 0000                      1- 1221     	nop
                                    1- 1222     	.line	965, "main.c"; 	P_IO_UART_TX_SET; // 输出高
     002E 1Arr                      1- 1223     	BSR	_PORTAbits,4
                                    1- 1224     	.line	966, "main.c"; 	NOP();
     002F 0000                      1- 1225     	nop
                                    1- 1226     	.line	967, "main.c"; 	NOP();
     0030 0000                      1- 1227     	nop
                                    1- 1228     	.line	968, "main.c"; 	NOP();
     0031 0000                      1- 1229     	nop
                                    1- 1230     	.line	969, "main.c"; 	NOP();
     0032 0000                      1- 1231     	nop
                                    1- 1232     	.line	970, "main.c"; 	NOP();
     0033 0000                      1- 1233     	nop
                                    1- 1234     	.line	971, "main.c"; 	NOP();
     0034 0000                      1- 1235     	nop
                                    1- 1236     	.line	972, "main.c"; 	NOP();
     0035 0000                      1- 1237     	nop
                                    1- 1238     	.line	973, "main.c"; 	NOP();
     0036 0000                      1- 1239     	nop
                                    1- 1240     	.line	974, "main.c"; 	NOP();
     0037 0000                      1- 1241     	nop
                                    1- 1242     	.line	975, "main.c"; 	ENI(); // GIE = 1;
     0038 0004                      1- 1243     	ENI
                                    1- 1244     	.line	976, "main.c"; 	}
                                    1- 1245     	RETURN	
     0039 0010                      3-   39 m1      ret
                                    1- 1246     ; exit point of _io_uart_tx
                                    1- 1248     ;***
                                    1- 1249     ;  pBlock Stats: dbName = C
                                    1- 1250     ;***
                                    1- 1251     ;has an exit
                                    1- 1252     ;functions called:
                                    1- 1253     ;   __divuint
                                    1- 1254     ;   __divuint
                                    1- 1255     ;6 compiler assigned registers:
                                    1- 1256     ;   STK02
                                    1- 1257     ;   STK01
                                    1- 1258     ;   STK00
                                    1- 1259     ;   r0x1026
                                    1- 1260     ;   r0x1027
                                    1- 1261     ;   r0x1028
                                    1- 1262     ;; Starting pCode block
                                    1- 1263     .segment "code"; module=main, function=_m68_pressure_proc
                                    1- 1265     ;local variable name mapping:
     0000                           1- 1267     _m68_pressure_proc:
                                    1- 1268     ; 2 exit points
                                    1- 1269     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1270     ;;unsigned compare: left >= lit(0x1F5=501), size=2
                                    1- 1271     	.line	868, "main.c"; 	if (m68Pressure > 500)
     0000 21F5                      1- 1272     	MOVIA	0xf5
                                    1- 1273     	BANKSEL	_m68Pressure
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 04rr                      1- 1274     	SUBAR	_m68Pressure,W
     0003 2101                      1- 1275     	MOVIA	0x01
     0004 35rr                      1- 1276     	SBCAR	(_m68Pressure + 1),W
     0005 0803                      1- 1277     	BTRSS	STATUS,0
                                    1- 1278     	MGOTO	_02471_DS_
     0006 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1279     	.line	871, "main.c"; 	mMotorWorkDuty = 100;
     0007 2164                      1- 1280     	MOVIA	0x64
                                    1- 1281     	BANKSEL	_mMotorWorkDuty
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1- 1282     	MOVAR	_mMotorWorkDuty
     000A 02rr                      1- 1283     	CLRR	(_mMotorWorkDuty + 1)
                                    1- 1284     	.line	872, "main.c"; 	mMotorWorkCycle = 100;
     000B 2164                      1- 1285     	MOVIA	0x64
                                    1- 1286     	BANKSEL	_mMotorWorkCycle
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1- 1287     	MOVAR	_mMotorWorkCycle
     000E 02rr                      1- 1288     	CLRR	(_mMotorWorkCycle + 1)
                                    1- 1289     	MGOTO	_02473_DS_
     000F 3rrr                      3-   62 m1      LGOTO rom_address
     0010                           1- 1290     _02471_DS_:
                                    1- 1291     	.line	876, "main.c"; 	itmp_pressure_level = (m68Pressure / 50);
     0010 2132                      1- 1292     	MOVIA	0x32
     0011 00rr                      1- 1293     	MOVAR	STK02
     0012 2100                      1- 1294     	MOVIA	0x00
     0013 00rr                      1- 1295     	MOVAR	STK01
                                    1- 1296     	BANKSEL	_m68Pressure
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 01rr                      1- 1297     	MOVR	_m68Pressure,W
     0016 00rr                      1- 1298     	MOVAR	STK00
     0017 01rr                      1- 1299     	MOVR	(_m68Pressure + 1),W
                                    1- 1300     	MCALL	__divuint
     0018 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1301     ;;100	MOVAR	r0x1026
     0019 01rr                      1- 1302     	MOVR	STK00,W
                                    1- 1303     	BANKSEL	r0x1027
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 00rr                      1- 1304     	MOVAR	r0x1027
                                    1- 1305     	BANKSEL	r0x1028
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 00rr                      1- 1306     	MOVAR	r0x1028
                                    1- 1307     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1308     ;;unsigned compare: left >= lit(0xB=11), size=1
                                    1- 1309     	.line	877, "main.c"; 	if (itmp_pressure_level > 10)
     001E 210B                      1- 1310     	MOVIA	0x0b
     001F 04rr                      1- 1311     	SUBAR	r0x1028,W
     0020 0803                      1- 1312     	BTRSS	STATUS,0
                                    1- 1313     	MGOTO	_02456_DS_
     0021 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1314     	.line	879, "main.c"; 	itmp_pressure_level = 10;
     0022 210A                      1- 1315     	MOVIA	0x0a
     0023 00rr                      1- 1316     	MOVAR	r0x1028
                                    1- 1317     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1318     ;;unsigned compare: left >= lit(0xB=11), size=1
     0024                           1- 1319     _02456_DS_:
                                    1- 1320     	.line	881, "main.c"; 	switch (itmp_pressure_level)
     0024 210B                      1- 1321     	MOVIA	0x0b
                                    1- 1322     	BANKSEL	r0x1028
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 04rr                      1- 1323     	SUBAR	r0x1028,W
     0027 0C03                      1- 1324     	BTRSC	STATUS,0
                                    1- 1325     	MGOTO	_02473_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
     0029 21rr                      1- 1326     	MOVIA	((_02487_DS_ >> 8) & 0xff)
     002A 008A                      1- 1327     	MOVAR	PCHBUF
     002B 01rr                      1- 1328     	MOVR	r0x1028,W
     002C 25rr                      1- 1329     	ADDIA	_02487_DS_
     002D 0C03                      1- 1330     	BTRSC	STATUS,0
     002E 058A                      1- 1331     	INCR	PCHBUF,F
     002F 0082                      1- 1332     	MOVAR	PCL
     0030                           1- 1333     _02487_DS_:
                                    1- 1334     	MGOTO	_02458_DS_
     0030 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1335     	MGOTO	_02459_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1336     	MGOTO	_02460_DS_
     0032 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1337     	MGOTO	_02461_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1338     	MGOTO	_02462_DS_
     0034 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1339     	MGOTO	_02463_DS_
     0035 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1340     	MGOTO	_02464_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1341     	MGOTO	_02465_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1342     	MGOTO	_02466_DS_
     0038 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1343     	MGOTO	_02467_DS_
     0039 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1344     	MGOTO	_02457_DS_
     003A 3rrr                      3-   62 m1      LGOTO rom_address
     003B                           1- 1345     _02457_DS_:
                                    1- 1346     	.line	885, "main.c"; 	mMotorWorkDuty = 100;
     003B 2164                      1- 1347     	MOVIA	0x64
                                    1- 1348     	BANKSEL	_mMotorWorkDuty
     003C rrrr                      3-  109 m1      .banksel ram_address
     003D 00rr                      1- 1349     	MOVAR	_mMotorWorkDuty
     003E 02rr                      1- 1350     	CLRR	(_mMotorWorkDuty + 1)
                                    1- 1351     	.line	886, "main.c"; 	mMotorWorkCycle = 100;
     003F 2164                      1- 1352     	MOVIA	0x64
                                    1- 1353     	BANKSEL	_mMotorWorkCycle
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 00rr                      1- 1354     	MOVAR	_mMotorWorkCycle
     0042 02rr                      1- 1355     	CLRR	(_mMotorWorkCycle + 1)
                                    1- 1356     	.line	887, "main.c"; 	break;
                                    1- 1357     	MGOTO	_02473_DS_
     0043 3rrr                      3-   62 m1      LGOTO rom_address
     0044                           1- 1358     _02458_DS_:
                                    1- 1359     	.line	889, "main.c"; 	yMotorWorkDuty = (yMotorWorkDutyBase + 0);
                                    1- 1360     	BANKSEL	_yMotorWorkDutyBase
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 01rr                      1- 1361     	MOVR	_yMotorWorkDutyBase,W
                                    1- 1362     	BANKSEL	_yMotorWorkDuty
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 00rr                      1- 1363     	MOVAR	_yMotorWorkDuty
                                    1- 1364     	.line	890, "main.c"; 	break;
                                    1- 1365     	MGOTO	_02473_DS_
     0048 3rrr                      3-   62 m1      LGOTO rom_address
     0049                           1- 1366     _02459_DS_:
                                    1- 1367     	.line	892, "main.c"; 	yMotorWorkDuty = (yMotorWorkDutyBase + yMotorWorkStep);
                                    1- 1368     	BANKSEL	_yMotorWorkDutyBase
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 01rr                      1- 1369     	MOVR	_yMotorWorkDutyBase,W
                                    1- 1370     	BANKSEL	_yMotorWorkStep
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 03rr                      1- 1371     	ADDAR	_yMotorWorkStep,W
                                    1- 1372     	BANKSEL	_yMotorWorkDuty
     004D rrrr                      3-  109 m1      .banksel ram_address
     004E 00rr                      1- 1373     	MOVAR	_yMotorWorkDuty
                                    1- 1374     	.line	893, "main.c"; 	break;
                                    1- 1375     	MGOTO	_02473_DS_
     004F 3rrr                      3-   62 m1      LGOTO rom_address
     0050                           1- 1376     _02460_DS_:
                                    1- 1377     	.line	895, "main.c"; 	yMotorWorkDuty = (yMotorWorkDutyBase + (yMotorWorkStep << 1)); // x2
     0050 1C03                      1- 1378     	BCR	STATUS,0
                                    1- 1379     	BANKSEL	_yMotorWorkStep
     0051 rrrr                      3-  109 m1      .banksel ram_address
     0052 14rr                      1- 1380     	RLR	_yMotorWorkStep,W
                                    1- 1381     	BANKSEL	r0x1027
     0053 rrrr                      3-  109 m1      .banksel ram_address
     0054 00rr                      1- 1382     	MOVAR	r0x1027
                                    1- 1383     	BANKSEL	_yMotorWorkDutyBase
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 03rr                      1- 1384     	ADDAR	_yMotorWorkDutyBase,W
                                    1- 1385     	BANKSEL	_yMotorWorkDuty
     0057 rrrr                      3-  109 m1      .banksel ram_address
     0058 00rr                      1- 1386     	MOVAR	_yMotorWorkDuty
                                    1- 1387     	.line	896, "main.c"; 	break;
                                    1- 1388     	MGOTO	_02473_DS_
     0059 3rrr                      3-   62 m1      LGOTO rom_address
     005A                           1- 1389     _02461_DS_:
                                    1- 1390     	.line	898, "main.c"; 	yMotorWorkDuty = (yMotorWorkDutyBase + (yMotorWorkStep << 1) + yMotorWorkStep); // x3
     005A 1C03                      1- 1391     	BCR	STATUS,0
                                    1- 1392     	BANKSEL	_yMotorWorkStep
     005B rrrr                      3-  109 m1      .banksel ram_address
     005C 14rr                      1- 1393     	RLR	_yMotorWorkStep,W
                                    1- 1394     	BANKSEL	r0x1027
     005D rrrr                      3-  109 m1      .banksel ram_address
     005E 00rr                      1- 1395     	MOVAR	r0x1027
                                    1- 1396     	BANKSEL	_yMotorWorkDutyBase
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 01rr                      1- 1397     	MOVR	_yMotorWorkDutyBase,W
                                    1- 1398     	BANKSEL	r0x1027
     0061 rrrr                      3-  109 m1      .banksel ram_address
     0062 03rr                      1- 1399     	ADDAR	r0x1027,F
     0063 01rr                      1- 1400     	MOVR	r0x1027,W
                                    1- 1401     	BANKSEL	_yMotorWorkStep
     0064 rrrr                      3-  109 m1      .banksel ram_address
     0065 03rr                      1- 1402     	ADDAR	_yMotorWorkStep,W
                                    1- 1403     	BANKSEL	_yMotorWorkDuty
     0066 rrrr                      3-  109 m1      .banksel ram_address
     0067 00rr                      1- 1404     	MOVAR	_yMotorWorkDuty
                                    1- 1405     	.line	899, "main.c"; 	break;
                                    1- 1406     	MGOTO	_02473_DS_
     0068 3rrr                      3-   62 m1      LGOTO rom_address
     0069                           1- 1407     _02462_DS_:
                                    1- 1408     	.line	901, "main.c"; 	yMotorWorkDuty = (yMotorWorkDutyBase + (yMotorWorkStep << 2)); // x4
     0069 1C03                      1- 1409     	BCR	STATUS,0
                                    1- 1410     	BANKSEL	_yMotorWorkStep
     006A rrrr                      3-  109 m1      .banksel ram_address
     006B 14rr                      1- 1411     	RLR	_yMotorWorkStep,W
                                    1- 1412     	BANKSEL	r0x1027
     006C rrrr                      3-  109 m1      .banksel ram_address
     006D 00rr                      1- 1413     	MOVAR	r0x1027
     006E 1C03                      1- 1414     	BCR	STATUS,0
     006F 14rr                      1- 1415     	RLR	r0x1027,F
     0070 01rr                      1- 1416     	MOVR	r0x1027,W
                                    1- 1417     	BANKSEL	_yMotorWorkDutyBase
     0071 rrrr                      3-  109 m1      .banksel ram_address
     0072 03rr                      1- 1418     	ADDAR	_yMotorWorkDutyBase,W
                                    1- 1419     	BANKSEL	_yMotorWorkDuty
     0073 rrrr                      3-  109 m1      .banksel ram_address
     0074 00rr                      1- 1420     	MOVAR	_yMotorWorkDuty
                                    1- 1421     	.line	902, "main.c"; 	break;
                                    1- 1422     	MGOTO	_02473_DS_
     0075 3rrr                      3-   62 m1      LGOTO rom_address
     0076                           1- 1423     _02463_DS_:
                                    1- 1424     	.line	904, "main.c"; 	yMotorWorkDuty = (yMotorWorkDutyBase + (yMotorWorkStep << 2) + yMotorWorkStep); // x5
     0076 1C03                      1- 1425     	BCR	STATUS,0
                                    1- 1426     	BANKSEL	_yMotorWorkStep
     0077 rrrr                      3-  109 m1      .banksel ram_address
     0078 14rr                      1- 1427     	RLR	_yMotorWorkStep,W
                                    1- 1428     	BANKSEL	r0x1027
     0079 rrrr                      3-  109 m1      .banksel ram_address
     007A 00rr                      1- 1429     	MOVAR	r0x1027
     007B 1C03                      1- 1430     	BCR	STATUS,0
     007C 14rr                      1- 1431     	RLR	r0x1027,F
                                    1- 1432     	BANKSEL	_yMotorWorkDutyBase
     007D rrrr                      3-  109 m1      .banksel ram_address
     007E 01rr                      1- 1433     	MOVR	_yMotorWorkDutyBase,W
                                    1- 1434     	BANKSEL	r0x1027
     007F rrrr                      3-  109 m1      .banksel ram_address
     0080 03rr                      1- 1435     	ADDAR	r0x1027,F
     0081 01rr                      1- 1436     	MOVR	r0x1027,W
                                    1- 1437     	BANKSEL	_yMotorWorkStep
     0082 rrrr                      3-  109 m1      .banksel ram_address
     0083 03rr                      1- 1438     	ADDAR	_yMotorWorkStep,W
                                    1- 1439     	BANKSEL	_yMotorWorkDuty
     0084 rrrr                      3-  109 m1      .banksel ram_address
     0085 00rr                      1- 1440     	MOVAR	_yMotorWorkDuty
                                    1- 1441     	.line	905, "main.c"; 	break;
                                    1- 1442     	MGOTO	_02473_DS_
     0086 3rrr                      3-   62 m1      LGOTO rom_address
     0087                           1- 1443     _02464_DS_:
                                    1- 1444     	.line	907, "main.c"; 	yMotorWorkDuty = (yMotorWorkDutyBase + (yMotorWorkStep << 2) + (yMotorWorkStep << 1)); // x6
     0087 1C03                      1- 1445     	BCR	STATUS,0
                                    1- 1446     	BANKSEL	_yMotorWorkStep
     0088 rrrr                      3-  109 m1      .banksel ram_address
     0089 14rr                      1- 1447     	RLR	_yMotorWorkStep,W
                                    1- 1448     	BANKSEL	r0x1027
     008A rrrr                      3-  109 m1      .banksel ram_address
     008B 00rr                      1- 1449     	MOVAR	r0x1027
     008C 1C03                      1- 1450     	BCR	STATUS,0
     008D 14rr                      1- 1451     	RLR	r0x1027,F
                                    1- 1452     	BANKSEL	_yMotorWorkDutyBase
     008E rrrr                      3-  109 m1      .banksel ram_address
     008F 01rr                      1- 1453     	MOVR	_yMotorWorkDutyBase,W
                                    1- 1454     	BANKSEL	r0x1027
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 03rr                      1- 1455     	ADDAR	r0x1027,F
     0092 1C03                      1- 1456     	BCR	STATUS,0
                                    1- 1457     	BANKSEL	_yMotorWorkStep
     0093 rrrr                      3-  109 m1      .banksel ram_address
     0094 14rr                      1- 1458     	RLR	_yMotorWorkStep,W
                                    1- 1459     ;;99	MOVAR	r0x1026
                                    1- 1460     	BANKSEL	r0x1027
     0095 rrrr                      3-  109 m1      .banksel ram_address
     0096 03rr                      1- 1461     	ADDAR	r0x1027,W
                                    1- 1462     	BANKSEL	_yMotorWorkDuty
     0097 rrrr                      3-  109 m1      .banksel ram_address
     0098 00rr                      1- 1463     	MOVAR	_yMotorWorkDuty
                                    1- 1464     	.line	908, "main.c"; 	break;
                                    1- 1465     	MGOTO	_02473_DS_
     0099 3rrr                      3-   62 m1      LGOTO rom_address
     009A                           1- 1466     _02465_DS_:
                                    1- 1467     	.line	910, "main.c"; 	yMotorWorkDuty = (yMotorWorkDutyBase + (yMotorWorkStep << 3) - yMotorWorkStep); // x7
     009A 1C03                      1- 1468     	BCR	STATUS,0
                                    1- 1469     	BANKSEL	_yMotorWorkStep
     009B rrrr                      3-  109 m1      .banksel ram_address
     009C 14rr                      1- 1470     	RLR	_yMotorWorkStep,W
                                    1- 1471     	BANKSEL	r0x1027
     009D rrrr                      3-  109 m1      .banksel ram_address
     009E 00rr                      1- 1472     	MOVAR	r0x1027
     009F 1C03                      1- 1473     	BCR	STATUS,0
     00A0 14rr                      1- 1474     	RLR	r0x1027,F
     00A1 1C03                      1- 1475     	BCR	STATUS,0
     00A2 14rr                      1- 1476     	RLR	r0x1027,F
                                    1- 1477     	BANKSEL	_yMotorWorkDutyBase
     00A3 rrrr                      3-  109 m1      .banksel ram_address
     00A4 01rr                      1- 1478     	MOVR	_yMotorWorkDutyBase,W
                                    1- 1479     	BANKSEL	r0x1027
     00A5 rrrr                      3-  109 m1      .banksel ram_address
     00A6 03rr                      1- 1480     	ADDAR	r0x1027,F
                                    1- 1481     	BANKSEL	_yMotorWorkStep
     00A7 rrrr                      3-  109 m1      .banksel ram_address
     00A8 01rr                      1- 1482     	MOVR	_yMotorWorkStep,W
                                    1- 1483     	BANKSEL	r0x1027
     00A9 rrrr                      3-  109 m1      .banksel ram_address
     00AA 04rr                      1- 1484     	SUBAR	r0x1027,W
                                    1- 1485     	BANKSEL	_yMotorWorkDuty
     00AB rrrr                      3-  109 m1      .banksel ram_address
     00AC 00rr                      1- 1486     	MOVAR	_yMotorWorkDuty
                                    1- 1487     	.line	911, "main.c"; 	break;
                                    1- 1488     	MGOTO	_02473_DS_
     00AD 3rrr                      3-   62 m1      LGOTO rom_address
     00AE                           1- 1489     _02466_DS_:
                                    1- 1490     	.line	913, "main.c"; 	yMotorWorkDuty = (yMotorWorkDutyBase + (yMotorWorkStep << 3)); // x8
     00AE 1C03                      1- 1491     	BCR	STATUS,0
                                    1- 1492     	BANKSEL	_yMotorWorkStep
     00AF rrrr                      3-  109 m1      .banksel ram_address
     00B0 14rr                      1- 1493     	RLR	_yMotorWorkStep,W
                                    1- 1494     	BANKSEL	r0x1027
     00B1 rrrr                      3-  109 m1      .banksel ram_address
     00B2 00rr                      1- 1495     	MOVAR	r0x1027
     00B3 1C03                      1- 1496     	BCR	STATUS,0
     00B4 14rr                      1- 1497     	RLR	r0x1027,F
     00B5 1C03                      1- 1498     	BCR	STATUS,0
     00B6 14rr                      1- 1499     	RLR	r0x1027,F
     00B7 01rr                      1- 1500     	MOVR	r0x1027,W
                                    1- 1501     	BANKSEL	_yMotorWorkDutyBase
     00B8 rrrr                      3-  109 m1      .banksel ram_address
     00B9 03rr                      1- 1502     	ADDAR	_yMotorWorkDutyBase,W
                                    1- 1503     	BANKSEL	_yMotorWorkDuty
     00BA rrrr                      3-  109 m1      .banksel ram_address
     00BB 00rr                      1- 1504     	MOVAR	_yMotorWorkDuty
                                    1- 1505     	.line	914, "main.c"; 	break;
                                    1- 1506     	MGOTO	_02473_DS_
     00BC 3rrr                      3-   62 m1      LGOTO rom_address
     00BD                           1- 1507     _02467_DS_:
                                    1- 1508     	.line	916, "main.c"; 	yMotorWorkDuty = (yMotorWorkDutyBase + (yMotorWorkStep << 3) + yMotorWorkStep); // x9
     00BD 1C03                      1- 1509     	BCR	STATUS,0
                                    1- 1510     	BANKSEL	_yMotorWorkStep
     00BE rrrr                      3-  109 m1      .banksel ram_address
     00BF 14rr                      1- 1511     	RLR	_yMotorWorkStep,W
                                    1- 1512     	BANKSEL	r0x1027
     00C0 rrrr                      3-  109 m1      .banksel ram_address
     00C1 00rr                      1- 1513     	MOVAR	r0x1027
     00C2 1C03                      1- 1514     	BCR	STATUS,0
     00C3 14rr                      1- 1515     	RLR	r0x1027,F
     00C4 1C03                      1- 1516     	BCR	STATUS,0
     00C5 14rr                      1- 1517     	RLR	r0x1027,F
                                    1- 1518     	BANKSEL	_yMotorWorkDutyBase
     00C6 rrrr                      3-  109 m1      .banksel ram_address
     00C7 01rr                      1- 1519     	MOVR	_yMotorWorkDutyBase,W
                                    1- 1520     	BANKSEL	r0x1027
     00C8 rrrr                      3-  109 m1      .banksel ram_address
     00C9 03rr                      1- 1521     	ADDAR	r0x1027,F
     00CA 01rr                      1- 1522     	MOVR	r0x1027,W
                                    1- 1523     	BANKSEL	_yMotorWorkStep
     00CB rrrr                      3-  109 m1      .banksel ram_address
     00CC 03rr                      1- 1524     	ADDAR	_yMotorWorkStep,W
                                    1- 1525     	BANKSEL	_yMotorWorkDuty
     00CD rrrr                      3-  109 m1      .banksel ram_address
     00CE 00rr                      1- 1526     	MOVAR	_yMotorWorkDuty
     00CF                           1- 1527     _02473_DS_:
                                    1- 1528     	.line	922, "main.c"; 	}
                                    1- 1529     	RETURN	
     00CF 0010                      3-   39 m1      ret
                                    1- 1530     ; exit point of _m68_pressure_proc
                                    1- 1532     ;***
                                    1- 1533     ;  pBlock Stats: dbName = C
                                    1- 1534     ;***
                                    1- 1535     ;has an exit
                                    1- 1536     ;functions called:
                                    1- 1537     ;   _ip53xs_read_nBytes
                                    1- 1538     ;   _io_uart_tx
                                    1- 1539     ;   _io_uart_tx
                                    1- 1540     ;   _io_uart_tx
                                    1- 1541     ;   _io_uart_tx
                                    1- 1542     ;   _io_uart_tx
                                    1- 1543     ;   _io_uart_tx
                                    1- 1544     ;   _io_uart_tx
                                    1- 1545     ;   _io_uart_tx
                                    1- 1546     ;   _io_uart_tx
                                    1- 1547     ;   _io_uart_tx
                                    1- 1548     ;   _ip53xs_read_nBytes
                                    1- 1549     ;   _io_uart_tx
                                    1- 1550     ;   _io_uart_tx
                                    1- 1551     ;   _io_uart_tx
                                    1- 1552     ;   _io_uart_tx
                                    1- 1553     ;   _io_uart_tx
                                    1- 1554     ;   _io_uart_tx
                                    1- 1555     ;   _io_uart_tx
                                    1- 1556     ;   _io_uart_tx
                                    1- 1557     ;   _io_uart_tx
                                    1- 1558     ;   _io_uart_tx
                                    1- 1559     ;10 compiler assigned registers:
                                    1- 1560     ;   r0x1035
                                    1- 1561     ;   r0x1036
                                    1- 1562     ;   r0x1037
                                    1- 1563     ;   STK04
                                    1- 1564     ;   STK03
                                    1- 1565     ;   STK02
                                    1- 1566     ;   STK01
                                    1- 1567     ;   STK00
                                    1- 1568     ;   r0x1038
                                    1- 1569     ;   r0x1039
                                    1- 1570     ;; Starting pCode block
                                    1- 1571     .segment "code"; module=main, function=_get_m68_pressure_nbytes
                                    1- 1573     ;local variable name mapping:
     0000                           1- 1576     _get_m68_pressure_nbytes:
                                    1- 1577     ; 2 exit points
                                    1- 1578     	.line	837, "main.c"; 	reg_buffer[0] = 0;
                                    1- 1579     	BANKSEL	_get_m68_pressure_nbytes_reg_buffer_65536_109
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 02rr                      1- 1580     	CLRR	(_get_m68_pressure_nbytes_reg_buffer_65536_109 + 0)
                                    1- 1581     	.line	838, "main.c"; 	reg_buffer[1] = 0;
     0002 02rr                      1- 1582     	CLRR	(_get_m68_pressure_nbytes_reg_buffer_65536_109 + 1)
                                    1- 1583     	.line	839, "main.c"; 	reg_buffer[2] = 0;
     0003 02rr                      1- 1584     	CLRR	(_get_m68_pressure_nbytes_reg_buffer_65536_109 + 2)
                                    1- 1585     	.line	840, "main.c"; 	reg_buffer[3] = 0;
     0004 02rr                      1- 1586     	CLRR	(_get_m68_pressure_nbytes_reg_buffer_65536_109 + 3)
                                    1- 1587     	.line	841, "main.c"; 	ip53xs_read_nBytes(&reg_buffer[0], 0xE4, 0x21, 4);
     0005 21rr                      1- 1588     	MOVIA	(_get_m68_pressure_nbytes_reg_buffer_65536_109 + 0)
                                    1- 1589     	BANKSEL	r0x1035
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1590     	MOVAR	r0x1035
                                    1- 1591     ;;110	CLRR	r0x1036
                                    1- 1592     ;;112	CLRR	r0x1037
     0008 2104                      1- 1593     	MOVIA	0x04
     0009 00rr                      1- 1594     	MOVAR	STK04
     000A 2121                      1- 1595     	MOVIA	0x21
     000B 00rr                      1- 1596     	MOVAR	STK03
     000C 21E4                      1- 1597     	MOVIA	0xe4
     000D 00rr                      1- 1598     	MOVAR	STK02
     000E 01rr                      1- 1599     	MOVR	r0x1035,W
     000F 00rr                      1- 1600     	MOVAR	STK01
     0010 2100                      1- 1601     	MOVIA	0x00
     0011 00rr                      1- 1602     	MOVAR	STK00
                                    1- 1603     	MCALL	_ip53xs_read_nBytes
     0012 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1604     	.line	842, "main.c"; 	io_uart_tx(0xAA);
     0013 21AA                      1- 1605     	MOVIA	0xaa
                                    1- 1606     	MCALL	_io_uart_tx
     0014 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1607     	.line	843, "main.c"; 	io_uart_tx(0xAA);
     0015 21AA                      1- 1608     	MOVIA	0xaa
                                    1- 1609     	MCALL	_io_uart_tx
     0016 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1610     	.line	844, "main.c"; 	io_uart_tx((unsigned char)(reg_buffer[1]));
                                    1- 1611     	BANKSEL	_get_m68_pressure_nbytes_reg_buffer_65536_109
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 01rr                      1- 1612     	MOVR	(_get_m68_pressure_nbytes_reg_buffer_65536_109 + 1),W
                                    1- 1613     	BANKSEL	r0x1035
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 00rr                      1- 1614     	MOVAR	r0x1035
                                    1- 1615     	MCALL	_io_uart_tx
     001B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1616     	.line	845, "main.c"; 	io_uart_tx((unsigned char)(reg_buffer[0]));
                                    1- 1617     	BANKSEL	_get_m68_pressure_nbytes_reg_buffer_65536_109
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 01rr                      1- 1618     	MOVR	_get_m68_pressure_nbytes_reg_buffer_65536_109,W
                                    1- 1619     ;;6	MOVAR	r0x1035
                                    1- 1620     	MCALL	_io_uart_tx
     001E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1621     	.line	846, "main.c"; 	itmp_16bits = reg_buffer[1];
                                    1- 1622     	BANKSEL	_get_m68_pressure_nbytes_reg_buffer_65536_109
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 01rr                      1- 1623     	MOVR	(_get_m68_pressure_nbytes_reg_buffer_65536_109 + 1),W
                                    1- 1624     ;;6	MOVAR	r0x1035
                                    1- 1625     	BANKSEL	r0x1038
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 00rr                      1- 1626     	MOVAR	r0x1038
                                    1- 1627     ;;3	MOVAR	r0x1036
                                    1- 1628     ;;3	CLRR	r0x1037
                                    1- 1629     ;;106	MOVR	r0x1036,W
                                    1- 1630     ;;103	CLRR	r0x1035
                                    1- 1631     	.line	848, "main.c"; 	itmp_16bits |= reg_buffer[0];
                                    1- 1632     	BANKSEL	_get_m68_pressure_nbytes_reg_buffer_65536_109
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 01rr                      1- 1633     	MOVR	_get_m68_pressure_nbytes_reg_buffer_65536_109,W
                                    1- 1634     ;;109	MOVAR	r0x1036
                                    1- 1635     	BANKSEL	_m68Pressure
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 00rr                      1- 1636     	MOVAR	_m68Pressure
                                    1- 1637     ;;111	MOVAR	r0x1037
                                    1- 1638     ;;114	CLRR	r0x1039
                                    1- 1639     ;;108	MOVR	r0x1037,W
                                    1- 1640     ;;104	IORAR	r0x1035,W
                                    1- 1641     	BANKSEL	r0x1038
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 01rr                      1- 1642     	MOVR	r0x1038,W
                                    1- 1643     	BANKSEL	_m68Pressure
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 00rr                      1- 1644     	MOVAR	(_m68Pressure + 1)
                                    1- 1645     	.line	850, "main.c"; 	io_uart_tx(0xBB);
     002B 21BB                      1- 1646     	MOVIA	0xbb
                                    1- 1647     	MCALL	_io_uart_tx
     002C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1648     	.line	851, "main.c"; 	io_uart_tx(0xBB);
     002D 21BB                      1- 1649     	MOVIA	0xbb
                                    1- 1650     	MCALL	_io_uart_tx
     002E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1651     	.line	853, "main.c"; 	io_uart_tx((unsigned char)(reg_buffer[3]));
                                    1- 1652     	BANKSEL	_get_m68_pressure_nbytes_reg_buffer_65536_109
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 01rr                      1- 1653     	MOVR	(_get_m68_pressure_nbytes_reg_buffer_65536_109 + 3),W
                                    1- 1654     ;;6	MOVAR	r0x1035
                                    1- 1655     	MCALL	_io_uart_tx
     0031 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1656     	.line	854, "main.c"; 	io_uart_tx((unsigned char)(reg_buffer[2]));
                                    1- 1657     	BANKSEL	_get_m68_pressure_nbytes_reg_buffer_65536_109
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 01rr                      1- 1658     	MOVR	(_get_m68_pressure_nbytes_reg_buffer_65536_109 + 2),W
                                    1- 1659     ;;6	MOVAR	r0x1035
                                    1- 1660     	MCALL	_io_uart_tx
     0034 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1661     	.line	855, "main.c"; 	itmp_16bits = reg_buffer[3];
                                    1- 1662     	BANKSEL	_get_m68_pressure_nbytes_reg_buffer_65536_109
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 01rr                      1- 1663     	MOVR	(_get_m68_pressure_nbytes_reg_buffer_65536_109 + 3),W
                                    1- 1664     ;;6	MOVAR	r0x1035
                                    1- 1665     	BANKSEL	r0x1038
     0037 rrrr                      3-  109 m1      .banksel ram_address
     0038 00rr                      1- 1666     	MOVAR	r0x1038
                                    1- 1667     ;;3	MOVAR	r0x1036
                                    1- 1668     ;;3	CLRR	r0x1037
                                    1- 1669     ;;105	MOVR	r0x1036,W
                                    1- 1670     ;;101	CLRR	r0x1035
                                    1- 1671     	.line	857, "main.c"; 	itmp_16bits |= reg_buffer[2];
                                    1- 1672     	BANKSEL	_get_m68_pressure_nbytes_reg_buffer_65536_109
     0039 rrrr                      3-  109 m1      .banksel ram_address
     003A 01rr                      1- 1673     	MOVR	(_get_m68_pressure_nbytes_reg_buffer_65536_109 + 2),W
                                    1- 1674     ;;6	MOVAR	r0x1036
                                    1- 1675     	BANKSEL	_m68Pressure2
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 00rr                      1- 1676     	MOVAR	_m68Pressure2
                                    1- 1677     ;;6	MOVAR	r0x1037
                                    1- 1678     ;;113	CLRR	r0x1039
                                    1- 1679     ;;107	MOVR	r0x1037,W
                                    1- 1680     ;;102	IORAR	r0x1035,W
                                    1- 1681     	BANKSEL	r0x1038
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 01rr                      1- 1682     	MOVR	r0x1038,W
                                    1- 1683     	BANKSEL	_m68Pressure2
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 00rr                      1- 1684     	MOVAR	(_m68Pressure2 + 1)
                                    1- 1685     	.line	859, "main.c"; 	io_uart_tx(0xCC);
     0041 21CC                      1- 1686     	MOVIA	0xcc
                                    1- 1687     	MCALL	_io_uart_tx
     0042 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1688     	.line	860, "main.c"; 	io_uart_tx(0xCC);
     0043 21CC                      1- 1689     	MOVIA	0xcc
                                    1- 1690     	MCALL	_io_uart_tx
     0044 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1691     	.line	861, "main.c"; 	}
                                    1- 1692     	RETURN	
     0045 0010                      3-   39 m1      ret
                                    1- 1693     ; exit point of _get_m68_pressure_nbytes
                                    1- 1695     ;***
                                    1- 1696     ;  pBlock Stats: dbName = C
                                    1- 1697     ;***
                                    1- 1698     ;has an exit
                                    1- 1699     ;functions called:
                                    1- 1700     ;   _i2c_start
                                    1- 1701     ;   _i2c_writeByte
                                    1- 1702     ;   _i2c_writeByte
                                    1- 1703     ;   _i2c_start
                                    1- 1704     ;   _i2c_writeByte
                                    1- 1705     ;   _i2c_readByte
                                    1- 1706     ;   __gptrput1
                                    1- 1707     ;   _i2c_send_ack
                                    1- 1708     ;   _i2c_readByte
                                    1- 1709     ;   __gptrput1
                                    1- 1710     ;   _i2c_send_nack
                                    1- 1711     ;   _i2c_stop
                                    1- 1712     ;   _i2c_start
                                    1- 1713     ;   _i2c_writeByte
                                    1- 1714     ;   _i2c_writeByte
                                    1- 1715     ;   _i2c_start
                                    1- 1716     ;   _i2c_writeByte
                                    1- 1717     ;   _i2c_readByte
                                    1- 1718     ;   __gptrput1
                                    1- 1719     ;   _i2c_send_ack
                                    1- 1720     ;   _i2c_readByte
                                    1- 1721     ;   __gptrput1
                                    1- 1722     ;   _i2c_send_nack
                                    1- 1723     ;   _i2c_stop
                                    1- 1724     ;15 compiler assigned registers:
                                    1- 1725     ;   r0x102B
                                    1- 1726     ;   STK00
                                    1- 1727     ;   r0x102C
                                    1- 1728     ;   STK01
                                    1- 1729     ;   r0x102D
                                    1- 1730     ;   STK02
                                    1- 1731     ;   r0x102E
                                    1- 1732     ;   STK03
                                    1- 1733     ;   r0x102F
                                    1- 1734     ;   STK04
                                    1- 1735     ;   r0x1030
                                    1- 1736     ;   r0x1031
                                    1- 1737     ;   r0x1032
                                    1- 1738     ;   r0x1033
                                    1- 1739     ;   r0x1034
                                    1- 1740     ;; Starting pCode block
                                    1- 1741     .segment "code"; module=main, function=_ip53xs_read_nBytes
                                    1- 1743     ;local variable name mapping:
     0000                           1- 1749     _ip53xs_read_nBytes:
                                    1- 1750     ; 2 exit points
                                    1- 1751     	.line	758, "main.c"; 	void ip53xs_read_nBytes(unsigned char *pBuffer, unsigned char deviceAddr, unsigned char regAddr, unsigned char nbytes) //(unsigned char regAddr)
                                    1- 1752     	BANKSEL	r0x102B
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 1753     	MOVAR	r0x102B
     0002 01rr                      1- 1754     	MOVR	STK00,W
                                    1- 1755     	BANKSEL	r0x102C
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 1756     	MOVAR	r0x102C
     0005 01rr                      1- 1757     	MOVR	STK01,W
                                    1- 1758     	BANKSEL	r0x102D
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1759     	MOVAR	r0x102D
     0008 01rr                      1- 1760     	MOVR	STK02,W
                                    1- 1761     	BANKSEL	r0x102E
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 00rr                      1- 1762     	MOVAR	r0x102E
     000B 01rr                      1- 1763     	MOVR	STK03,W
                                    1- 1764     	BANKSEL	r0x102F
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1- 1765     	MOVAR	r0x102F
     000E 01rr                      1- 1766     	MOVR	STK04,W
                                    1- 1767     	BANKSEL	r0x1030
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 00rr                      1- 1768     	MOVAR	r0x1030
                                    1- 1769     	.line	762, "main.c"; 	i2c_start();
                                    1- 1770     	MCALL	_i2c_start
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1771     	.line	764, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_WRITE))
                                    1- 1772     	BANKSEL	r0x102E
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 01rr                      1- 1773     	MOVR	r0x102E,W
                                    1- 1774     	MCALL	_i2c_writeByte
     0014 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1775     	BANKSEL	r0x1031
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 00rr                      1- 1776     	MOVAR	r0x1031
     0017 01rr                      1- 1777     	MOVR	r0x1031,W
     0018 0903                      1- 1778     	BTRSS	STATUS,2
                                    1- 1779     	MGOTO	_02419_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1780     	.line	769, "main.c"; 	if (i2c_writeByte(regAddr))
                                    1- 1781     	BANKSEL	r0x102F
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 01rr                      1- 1782     	MOVR	r0x102F,W
                                    1- 1783     	MCALL	_i2c_writeByte
     001C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1784     	BANKSEL	r0x102F
     001D rrrr                      3-  109 m1      .banksel ram_address
     001E 00rr                      1- 1785     	MOVAR	r0x102F
     001F 01rr                      1- 1786     	MOVR	r0x102F,W
     0020 0903                      1- 1787     	BTRSS	STATUS,2
                                    1- 1788     	MGOTO	_02419_DS_
     0021 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1789     	.line	774, "main.c"; 	i2c_start();
                                    1- 1790     	MCALL	_i2c_start
     0022 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1791     	.line	776, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_READ))
                                    1- 1792     	BANKSEL	r0x102E
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 18rr                      1- 1793     	BSR	r0x102E,0
     0025 01rr                      1- 1794     	MOVR	r0x102E,W
                                    1- 1795     	MCALL	_i2c_writeByte
     0026 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1796     	BANKSEL	r0x102E
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 00rr                      1- 1797     	MOVAR	r0x102E
     0029 01rr                      1- 1798     	MOVR	r0x102E,W
     002A 0903                      1- 1799     	BTRSS	STATUS,2
                                    1- 1800     	MGOTO	_02419_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1801     	.line	781, "main.c"; 	for (itmp = 0; itmp < (nbytes - 1); itmp++) // 连续接收
     002C 02rr                      1- 1802     	CLRR	r0x102E
     002D                           1- 1803     _02421_DS_:
                                    1- 1804     	BANKSEL	r0x1030
     002D rrrr                      3-  109 m1      .banksel ram_address
     002E 01rr                      1- 1805     	MOVR	r0x1030,W
                                    1- 1806     	BANKSEL	r0x102F
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 00rr                      1- 1807     	MOVAR	r0x102F
                                    1- 1808     	BANKSEL	r0x1031
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 02rr                      1- 1809     	CLRR	r0x1031
     0033 21FF                      1- 1810     	MOVIA	0xff
                                    1- 1811     	BANKSEL	r0x102F
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 03rr                      1- 1812     	ADDAR	r0x102F,F
     0036 21FF                      1- 1813     	MOVIA	0xff
                                    1- 1814     	BANKSEL	r0x1031
     0037 rrrr                      3-  109 m1      .banksel ram_address
     0038 34rr                      1- 1815     	ADCAR	r0x1031,F
                                    1- 1816     	BANKSEL	r0x102E
     0039 rrrr                      3-  109 m1      .banksel ram_address
     003A 01rr                      1- 1817     	MOVR	r0x102E,W
                                    1- 1818     	BANKSEL	r0x1032
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 00rr                      1- 1819     	MOVAR	r0x1032
                                    1- 1820     ;;1	CLRR	r0x1033
     003D 2100                      1- 1821     	MOVIA	0x00
     003E 2580                      1- 1822     	ADDIA	0x80
                                    1- 1823     	BANKSEL	r0x1034
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 00rr                      1- 1824     	MOVAR	r0x1034
                                    1- 1825     	BANKSEL	r0x1031
     0041 rrrr                      3-  109 m1      .banksel ram_address
     0042 01rr                      1- 1826     	MOVR	r0x1031,W
     0043 2580                      1- 1827     	ADDIA	0x80
                                    1- 1828     	BANKSEL	r0x1034
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 04rr                      1- 1829     	SUBAR	r0x1034,W
     0046 0903                      1- 1830     	BTRSS	STATUS,2
                                    1- 1831     	MGOTO	_02446_DS_
     0047 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1832     	BANKSEL	r0x102F
     0048 rrrr                      3-  109 m1      .banksel ram_address
     0049 01rr                      1- 1833     	MOVR	r0x102F,W
                                    1- 1834     	BANKSEL	r0x1032
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 04rr                      1- 1835     	SUBAR	r0x1032,W
     004C                           1- 1836     _02446_DS_:
     004C 0C03                      1- 1837     	BTRSC	STATUS,0
                                    1- 1838     	MGOTO	_02418_DS_
     004D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1839     	.line	783, "main.c"; 	*pBuffer = i2c_readByte();
                                    1- 1840     	MCALL	_i2c_readByte
     004E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1841     	BANKSEL	r0x102F
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 00rr                      1- 1842     	MOVAR	r0x102F
     0051 00rr                      1- 1843     	MOVAR	STK02
                                    1- 1844     	BANKSEL	r0x102D
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 01rr                      1- 1845     	MOVR	r0x102D,W
     0054 00rr                      1- 1846     	MOVAR	STK01
                                    1- 1847     	BANKSEL	r0x102C
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 01rr                      1- 1848     	MOVR	r0x102C,W
     0057 00rr                      1- 1849     	MOVAR	STK00
                                    1- 1850     	BANKSEL	r0x102B
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 01rr                      1- 1851     	MOVR	r0x102B,W
                                    1- 1852     	MCALL	__gptrput1
     005A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1853     	.line	784, "main.c"; 	pBuffer++;
                                    1- 1854     	BANKSEL	r0x102D
     005B rrrr                      3-  109 m1      .banksel ram_address
     005C 05rr                      1- 1855     	INCR	r0x102D,F
     005D 0903                      1- 1856     	BTRSS	STATUS,2
                                    1- 1857     	MGOTO	_00002_DS_
     005E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1858     	BANKSEL	r0x102C
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 05rr                      1- 1859     	INCR	r0x102C,F
     0061                           1- 1860     _00002_DS_:
     0061 0903                      1- 1861     	BTRSS	STATUS,2
                                    1- 1862     	MGOTO	_00003_DS_
     0062 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1863     	BANKSEL	r0x102B
     0063 rrrr                      3-  109 m1      .banksel ram_address
     0064 05rr                      1- 1864     	INCR	r0x102B,F
     0065                           1- 1865     _00003_DS_:
                                    1- 1866     	.line	785, "main.c"; 	i2c_send_ack();
                                    1- 1867     	MCALL	_i2c_send_ack
     0065 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1868     	.line	781, "main.c"; 	for (itmp = 0; itmp < (nbytes - 1); itmp++) // 连续接收
                                    1- 1869     	BANKSEL	r0x102E
     0066 rrrr                      3-  109 m1      .banksel ram_address
     0067 05rr                      1- 1870     	INCR	r0x102E,F
                                    1- 1871     	MGOTO	_02421_DS_
     0068 3rrr                      3-   62 m1      LGOTO rom_address
     0069                           1- 1872     _02418_DS_:
                                    1- 1873     	.line	788, "main.c"; 	*pBuffer = i2c_readByte();
                                    1- 1874     	MCALL	_i2c_readByte
     0069 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1875     	BANKSEL	r0x102E
     006A rrrr                      3-  109 m1      .banksel ram_address
     006B 00rr                      1- 1876     	MOVAR	r0x102E
     006C 00rr                      1- 1877     	MOVAR	STK02
                                    1- 1878     	BANKSEL	r0x102D
     006D rrrr                      3-  109 m1      .banksel ram_address
     006E 01rr                      1- 1879     	MOVR	r0x102D,W
     006F 00rr                      1- 1880     	MOVAR	STK01
                                    1- 1881     	BANKSEL	r0x102C
     0070 rrrr                      3-  109 m1      .banksel ram_address
     0071 01rr                      1- 1882     	MOVR	r0x102C,W
     0072 00rr                      1- 1883     	MOVAR	STK00
                                    1- 1884     	BANKSEL	r0x102B
     0073 rrrr                      3-  109 m1      .banksel ram_address
     0074 01rr                      1- 1885     	MOVR	r0x102B,W
                                    1- 1886     	MCALL	__gptrput1
     0075 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1887     	.line	789, "main.c"; 	i2c_send_nack();
                                    1- 1888     	MCALL	_i2c_send_nack
     0076 2rrr                      3-   65 m1      LCALL rom_address
     0077                           1- 1889     _02419_DS_:
                                    1- 1890     	.line	792, "main.c"; 	i2c_stop();
                                    1- 1891     	MCALL	_i2c_stop
     0077 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1892     	.line	793, "main.c"; 	}
                                    1- 1893     	RETURN	
     0078 0010                      3-   39 m1      ret
                                    1- 1894     ; exit point of _ip53xs_read_nBytes
                                    1- 1896     ;***
                                    1- 1897     ;  pBlock Stats: dbName = C
                                    1- 1898     ;***
                                    1- 1899     ;has an exit
                                    1- 1900     ;functions called:
                                    1- 1901     ;   _i2c_start
                                    1- 1902     ;   _i2c_writeByte
                                    1- 1903     ;   _i2c_stop
                                    1- 1904     ;   _i2c_writeByte
                                    1- 1905     ;   _i2c_stop
                                    1- 1906     ;   _i2c_writeByte
                                    1- 1907     ;   _i2c_stop
                                    1- 1908     ;   _i2c_stop
                                    1- 1909     ;   _i2c_start
                                    1- 1910     ;   _i2c_writeByte
                                    1- 1911     ;   _i2c_stop
                                    1- 1912     ;   _i2c_writeByte
                                    1- 1913     ;   _i2c_stop
                                    1- 1914     ;   _i2c_writeByte
                                    1- 1915     ;   _i2c_stop
                                    1- 1916     ;   _i2c_stop
                                    1- 1917     ;5 compiler assigned registers:
                                    1- 1918     ;   r0x103B
                                    1- 1919     ;   STK00
                                    1- 1920     ;   r0x103C
                                    1- 1921     ;   STK01
                                    1- 1922     ;   r0x103D
                                    1- 1923     ;; Starting pCode block
                                    1- 1924     .segment "code"; module=main, function=_ip53xs_writeByte
                                    1- 1926     ;local variable name mapping:
     0000                           1- 1930     _ip53xs_writeByte:
                                    1- 1931     ; 2 exit points
                                    1- 1932     	.line	693, "main.c"; 	BOOL ip53xs_writeByte(unsigned char deviceAddr, unsigned char regAddr, unsigned char sendByte)
                                    1- 1933     	BANKSEL	r0x103B
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 1934     	MOVAR	r0x103B
     0002 01rr                      1- 1935     	MOVR	STK00,W
                                    1- 1936     	BANKSEL	r0x103C
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 1937     	MOVAR	r0x103C
     0005 01rr                      1- 1938     	MOVR	STK01,W
                                    1- 1939     	BANKSEL	r0x103D
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1940     	MOVAR	r0x103D
                                    1- 1941     	.line	697, "main.c"; 	i2c_start();
                                    1- 1942     	MCALL	_i2c_start
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1943     	.line	699, "main.c"; 	if (i2c_writeByte(deviceAddr | IIC_WRITE))
                                    1- 1944     	BANKSEL	r0x103B
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 01rr                      1- 1945     	MOVR	r0x103B,W
                                    1- 1946     	MCALL	_i2c_writeByte
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1947     	BANKSEL	r0x103B
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1- 1948     	MOVAR	r0x103B
     000E 01rr                      1- 1949     	MOVR	r0x103B,W
     000F 0D03                      1- 1950     	BTRSC	STATUS,2
                                    1- 1951     	MGOTO	_02402_DS_
     0010 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1952     	.line	701, "main.c"; 	i2c_stop();
                                    1- 1953     	MCALL	_i2c_stop
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1954     	.line	702, "main.c"; 	return FALSE;
     0012 2100                      1- 1955     	MOVIA	0x00
                                    1- 1956     	MGOTO	_02407_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
     0014                           1- 1957     _02402_DS_:
                                    1- 1958     	.line	705, "main.c"; 	if (i2c_writeByte(regAddr))
                                    1- 1959     	BANKSEL	r0x103C
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 01rr                      1- 1960     	MOVR	r0x103C,W
                                    1- 1961     	MCALL	_i2c_writeByte
     0016 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1962     	BANKSEL	r0x103B
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 00rr                      1- 1963     	MOVAR	r0x103B
     0019 01rr                      1- 1964     	MOVR	r0x103B,W
     001A 0D03                      1- 1965     	BTRSC	STATUS,2
                                    1- 1966     	MGOTO	_02404_DS_
     001B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1967     	.line	707, "main.c"; 	i2c_stop();
                                    1- 1968     	MCALL	_i2c_stop
     001C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1969     	.line	708, "main.c"; 	return FALSE;
     001D 2100                      1- 1970     	MOVIA	0x00
                                    1- 1971     	MGOTO	_02407_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
     001F                           1- 1972     _02404_DS_:
                                    1- 1973     	.line	711, "main.c"; 	if (i2c_writeByte(sendByte))
                                    1- 1974     	BANKSEL	r0x103D
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 01rr                      1- 1975     	MOVR	r0x103D,W
                                    1- 1976     	MCALL	_i2c_writeByte
     0021 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1977     	BANKSEL	r0x103B
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 00rr                      1- 1978     	MOVAR	r0x103B
     0024 01rr                      1- 1979     	MOVR	r0x103B,W
     0025 0D03                      1- 1980     	BTRSC	STATUS,2
                                    1- 1981     	MGOTO	_02406_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1982     	.line	713, "main.c"; 	i2c_stop();
                                    1- 1983     	MCALL	_i2c_stop
     0027 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1984     	.line	714, "main.c"; 	return FALSE;
     0028 2100                      1- 1985     	MOVIA	0x00
                                    1- 1986     	MGOTO	_02407_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
     002A                           1- 1987     _02406_DS_:
                                    1- 1988     	.line	717, "main.c"; 	i2c_stop();
                                    1- 1989     	MCALL	_i2c_stop
     002A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1990     	.line	720, "main.c"; 	return TRUE;
     002B 2101                      1- 1991     	MOVIA	0x01
     002C                           1- 1992     _02407_DS_:
                                    1- 1993     	.line	721, "main.c"; 	}
                                    1- 1994     	RETURN	
     002C 0010                      3-   39 m1      ret
                                    1- 1995     ; exit point of _ip53xs_writeByte
                                    1- 1997     ;***
                                    1- 1998     ;  pBlock Stats: dbName = C
                                    1- 1999     ;***
                                    1- 2000     ;has an exit
                                    1- 2001     ;functions called:
                                    1- 2002     ;   __dly_us
                                    1- 2003     ;   __dly_us
                                    1- 2004     ;   __dly_us
                                    1- 2005     ;   __dly_us
                                    1- 2006     ;3 compiler assigned registers:
                                    1- 2007     ;   r0x1027
                                    1- 2008     ;   r0x1028
                                    1- 2009     ;   r0x1029
                                    1- 2010     ;; Starting pCode block
                                    1- 2011     .segment "code"; module=main, function=_i2c_readByte
                                    1- 2013     ;local variable name mapping:
     0000                           1- 2016     _i2c_readByte:
                                    1- 2017     ; 2 exit points
                                    1- 2018     	.line	667, "main.c"; 	unsigned char readByte = 0;
                                    1- 2019     	BANKSEL	r0x1027
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 02rr                      1- 2020     	CLRR	r0x1027
                                    1- 2021     	.line	669, "main.c"; 	P_I2C_SCL_CLR;   // 拉低I2C_SCL
     0002 1Drr                      1- 2022     	BCR	_PORTAbits,2
                                    1- 2023     	.line	670, "main.c"; 	P_I2C_SDA_INPUT; // 设置I2C_SDA为输入
     0003 001r                      1- 2024     	IOSTR	_IOSTA
                                    1- 2025     	BANKSEL	r0x1028
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 00rr                      1- 2026     	MOVAR	r0x1028
     0006 19rr                      1- 2027     	BSR	r0x1028,3
     0007 01rr                      1- 2028     	MOVR	r0x1028,W
     0008 000r                      1- 2029     	IOST	_IOSTA
                                    1- 2030     	.line	672, "main.c"; 	while (i--)
     0009 2108                      1- 2031     	MOVIA	0x08
     000A 00rr                      1- 2032     	MOVAR	r0x1028
     000B                           1- 2033     _02394_DS_:
                                    1- 2034     	BANKSEL	r0x1028
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2035     	MOVR	r0x1028,W
                                    1- 2036     	BANKSEL	r0x1029
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2037     	MOVAR	r0x1029
                                    1- 2038     	BANKSEL	r0x1028
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 06rr                      1- 2039     	DECR	r0x1028,F
                                    1- 2040     	BANKSEL	r0x1029
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 01rr                      1- 2041     	MOVR	r0x1029,W
     0013 0D03                      1- 2042     	BTRSC	STATUS,2
                                    1- 2043     	MGOTO	_02396_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2044     	.line	675, "main.c"; 	P_I2C_SCL_SET; // 拉高I2C_SCL
     0015 19rr                      1- 2045     	BSR	_PORTAbits,2
                                    1- 2046     	.line	676, "main.c"; 	_dly_us(0);
     0016 2100                      1- 2047     	MOVIA	0x00
                                    1- 2048     	MCALL	__dly_us
     0017 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2049     	.line	677, "main.c"; 	readByte <<= 1;
     0018 1C03                      1- 2050     	BCR	STATUS,0
                                    1- 2051     	BANKSEL	r0x1027
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 14rr                      1- 2052     	RLR	r0x1027,F
                                    1- 2053     	.line	679, "main.c"; 	if (P_I2C_SDA)
     001B 0Drr                      1- 2054     	BTRSC	_PORTAbits,3
                                    1- 2055     	.line	681, "main.c"; 	readByte |= 0x01;
     001C 18rr                      1- 2056     	BSR	r0x1027,0
                                    1- 2057     	.line	684, "main.c"; 	P_I2C_SCL_CLR; // 拉低I2C_SCL
     001D 1Drr                      1- 2058     	BCR	_PORTAbits,2
                                    1- 2059     	.line	685, "main.c"; 	_dly_us(0);
     001E 2100                      1- 2060     	MOVIA	0x00
                                    1- 2061     	MCALL	__dly_us
     001F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2062     	MGOTO	_02394_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021                           1- 2063     _02396_DS_:
                                    1- 2064     	.line	689, "main.c"; 	P_I2C_SDA_OUTPUT; // 设置I2C_SDA为输出
     0021 001r                      1- 2065     	IOSTR	_IOSTA
                                    1- 2066     	BANKSEL	r0x1028
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 00rr                      1- 2067     	MOVAR	r0x1028
     0024 1Drr                      1- 2068     	BCR	r0x1028,3
     0025 01rr                      1- 2069     	MOVR	r0x1028,W
     0026 000r                      1- 2070     	IOST	_IOSTA
                                    1- 2071     	.line	690, "main.c"; 	return readByte;  // 返回数据
                                    1- 2072     	BANKSEL	r0x1027
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 01rr                      1- 2073     	MOVR	r0x1027,W
                                    1- 2074     	.line	691, "main.c"; 	}
                                    1- 2075     	RETURN	
     0029 0010                      3-   39 m1      ret
                                    1- 2076     ; exit point of _i2c_readByte
                                    1- 2078     ;***
                                    1- 2079     ;  pBlock Stats: dbName = C
                                    1- 2080     ;***
                                    1- 2081     ;has an exit
                                    1- 2082     ;functions called:
                                    1- 2083     ;   __dly_us
                                    1- 2084     ;   __dly_us
                                    1- 2085     ;   _i2c_chk_ack
                                    1- 2086     ;   __dly_us
                                    1- 2087     ;   __dly_us
                                    1- 2088     ;   _i2c_chk_ack
                                    1- 2089     ;3 compiler assigned registers:
                                    1- 2090     ;   r0x1028
                                    1- 2091     ;   r0x1029
                                    1- 2092     ;   r0x102A
                                    1- 2093     ;; Starting pCode block
                                    1- 2094     .segment "code"; module=main, function=_i2c_writeByte
                                    1- 2096     ;local variable name mapping:
     0000                           1- 2099     _i2c_writeByte:
                                    1- 2100     ; 2 exit points
                                    1- 2101     	.line	639, "main.c"; 	unsigned char i2c_writeByte(unsigned char sendByte)
                                    1- 2102     	BANKSEL	r0x1028
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 2103     	MOVAR	r0x1028
                                    1- 2104     	.line	643, "main.c"; 	while (i--) // I2C_SDA脚从高位至低位发送数据
     0002 2108                      1- 2105     	MOVIA	0x08
                                    1- 2106     	BANKSEL	r0x1029
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2107     	MOVAR	r0x1029
     0005                           1- 2108     _02385_DS_:
                                    1- 2109     	BANKSEL	r0x1029
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 01rr                      1- 2110     	MOVR	r0x1029,W
                                    1- 2111     	BANKSEL	r0x102A
     0007 rrrr                      3-  109 m1      .banksel ram_address
     0008 00rr                      1- 2112     	MOVAR	r0x102A
                                    1- 2113     	BANKSEL	r0x1029
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 06rr                      1- 2114     	DECR	r0x1029,F
                                    1- 2115     	BANKSEL	r0x102A
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 2116     	MOVR	r0x102A,W
     000D 0D03                      1- 2117     	BTRSC	STATUS,2
                                    1- 2118     	MGOTO	_02387_DS_
     000E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2119     	.line	645, "main.c"; 	P_I2C_SCL_CLR; // 拉低I2C_SCL,以允许I2C_SDA脚w位数据发生变化
     000F 1Drr                      1- 2120     	BCR	_PORTAbits,2
                                    1- 2121     	.line	646, "main.c"; 	_dly_us(0);
     0010 2100                      1- 2122     	MOVIA	0x00
                                    1- 2123     	MCALL	__dly_us
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2124     	.line	647, "main.c"; 	if (sendByte & 0x80) /* MSB output first */
                                    1- 2125     	BANKSEL	r0x1028
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 0Brr                      1- 2126     	BTRSS	r0x1028,7
                                    1- 2127     	MGOTO	_02383_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2128     	.line	649, "main.c"; 	P_I2C_SDA_SET;
     0015 19rr                      1- 2129     	BSR	_PORTAbits,3
                                    1- 2130     	MGOTO	_02384_DS_
     0016 3rrr                      3-   62 m1      LGOTO rom_address
     0017                           1- 2131     _02383_DS_:
                                    1- 2132     	.line	653, "main.c"; 	P_I2C_SDA_CLR;
     0017 1Drr                      1- 2133     	BCR	_PORTAbits,3
     0018                           1- 2134     _02384_DS_:
                                    1- 2135     	.line	655, "main.c"; 	sendByte <<= 1;
     0018 1C03                      1- 2136     	BCR	STATUS,0
                                    1- 2137     	BANKSEL	r0x1028
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 14rr                      1- 2138     	RLR	r0x1028,F
                                    1- 2139     	.line	656, "main.c"; 	P_I2C_SCL_SET; // 拉高I2C_SCL
     001B 19rr                      1- 2140     	BSR	_PORTAbits,2
                                    1- 2141     	.line	657, "main.c"; 	_dly_us(0);
     001C 2100                      1- 2142     	MOVIA	0x00
                                    1- 2143     	MCALL	__dly_us
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2144     	.line	658, "main.c"; 	NOP();
     001E 0000                      1- 2145     	nop
                                    1- 2146     	MGOTO	_02385_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020                           1- 2147     _02387_DS_:
                                    1- 2148     	.line	661, "main.c"; 	return i2c_chk_ack();
                                    1- 2149     	MCALL	_i2c_chk_ack
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2150     	BANKSEL	r0x1028
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 00rr                      1- 2151     	MOVAR	r0x1028
                                    1- 2152     	.line	662, "main.c"; 	}
                                    1- 2153     	RETURN	
     0023 0010                      3-   39 m1      ret
                                    1- 2154     ; exit point of _i2c_writeByte
                                    1- 2156     ;***
                                    1- 2157     ;  pBlock Stats: dbName = C
                                    1- 2158     ;***
                                    1- 2159     ;has an exit
                                    1- 2160     ;functions called:
                                    1- 2161     ;   __dly_us
                                    1- 2162     ;   __dly_us
                                    1- 2163     ;   __dly_us
                                    1- 2164     ;   __dly_us
                                    1- 2165     ;; Starting pCode block
                                    1- 2166     .segment "code"; module=main, function=_i2c_send_nack
     0000                           1- 2168     _i2c_send_nack:
                                    1- 2169     ; 2 exit points
                                    1- 2170     	.line	630, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Drr                      1- 2171     	BCR	_PORTAbits,2
                                    1- 2172     	.line	631, "main.c"; 	P_I2C_SDA_SET;
     0001 19rr                      1- 2173     	BSR	_PORTAbits,3
                                    1- 2174     	.line	632, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2175     	MOVIA	0x0a
                                    1- 2176     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2177     	.line	633, "main.c"; 	P_I2C_SCL_SET;
     0004 19rr                      1- 2178     	BSR	_PORTAbits,2
                                    1- 2179     	.line	634, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2180     	MOVIA	0x0a
                                    1- 2181     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2182     	.line	635, "main.c"; 	P_I2C_SCL_CLR;
     0007 1Drr                      1- 2183     	BCR	_PORTAbits,2
                                    1- 2184     	.line	636, "main.c"; 	P_I2C_SDA_CLR;
     0008 1Drr                      1- 2185     	BCR	_PORTAbits,3
                                    1- 2186     	.line	637, "main.c"; 	}
                                    1- 2187     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1- 2188     ; exit point of _i2c_send_nack
                                    1- 2190     ;***
                                    1- 2191     ;  pBlock Stats: dbName = C
                                    1- 2192     ;***
                                    1- 2193     ;has an exit
                                    1- 2194     ;functions called:
                                    1- 2195     ;   __dly_us
                                    1- 2196     ;   __dly_us
                                    1- 2197     ;   __dly_us
                                    1- 2198     ;   __dly_us
                                    1- 2199     ;; Starting pCode block
                                    1- 2200     .segment "code"; module=main, function=_i2c_send_ack
     0000                           1- 2202     _i2c_send_ack:
                                    1- 2203     ; 2 exit points
                                    1- 2204     	.line	619, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Drr                      1- 2205     	BCR	_PORTAbits,2
                                    1- 2206     	.line	620, "main.c"; 	P_I2C_SDA_CLR;
     0001 1Drr                      1- 2207     	BCR	_PORTAbits,3
                                    1- 2208     	.line	621, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2209     	MOVIA	0x0a
                                    1- 2210     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2211     	.line	622, "main.c"; 	P_I2C_SCL_SET;
     0004 19rr                      1- 2212     	BSR	_PORTAbits,2
                                    1- 2213     	.line	623, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2214     	MOVIA	0x0a
                                    1- 2215     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2216     	.line	624, "main.c"; 	P_I2C_SCL_CLR;
     0007 1Drr                      1- 2217     	BCR	_PORTAbits,2
                                    1- 2218     	.line	625, "main.c"; 	P_I2C_SDA_CLR;
     0008 1Drr                      1- 2219     	BCR	_PORTAbits,3
                                    1- 2220     	.line	626, "main.c"; 	}
                                    1- 2221     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1- 2222     ; exit point of _i2c_send_ack
                                    1- 2224     ;***
                                    1- 2225     ;  pBlock Stats: dbName = C
                                    1- 2226     ;***
                                    1- 2227     ;has an exit
                                    1- 2228     ;functions called:
                                    1- 2229     ;   __dly_us
                                    1- 2230     ;   __dly_us
                                    1- 2231     ;   __dly_us
                                    1- 2232     ;   __dly_us
                                    1- 2233     ;1 compiler assigned register :
                                    1- 2234     ;   r0x1027
                                    1- 2235     ;; Starting pCode block
                                    1- 2236     .segment "code"; module=main, function=_i2c_chk_ack
                                    1- 2238     ;local variable name mapping:
     0000                           1- 2240     _i2c_chk_ack:
                                    1- 2241     ; 2 exit points
                                    1- 2242     	.line	596, "main.c"; 	P_I2C_SCL_CLR;                                  // slave send ACK
     0000 1Drr                      1- 2243     	BCR	_PORTAbits,2
                                    1- 2244     	.line	597, "main.c"; 	P_I2C_SDA_INPUT;                                // Allow slave to send ACK
     0001 001r                      1- 2245     	IOSTR	_IOSTA
                                    1- 2246     	BANKSEL	r0x1027
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 00rr                      1- 2247     	MOVAR	r0x1027
     0004 19rr                      1- 2248     	BSR	r0x1027,3
     0005 01rr                      1- 2249     	MOVR	r0x1027,W
     0006 000r                      1- 2250     	IOST	_IOSTA
                                    1- 2251     	.line	599, "main.c"; 	_dly_us(0);
     0007 2100                      1- 2252     	MOVIA	0x00
                                    1- 2253     	MCALL	__dly_us
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2254     	.line	600, "main.c"; 	P_I2C_SCL_SET;
     0009 19rr                      1- 2255     	BSR	_PORTAbits,2
                                    1- 2256     	.line	601, "main.c"; 	_dly_us(0);
     000A 2100                      1- 2257     	MOVIA	0x00
                                    1- 2258     	MCALL	__dly_us
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2259     	.line	602, "main.c"; 	while (P_I2C_SDA)
     000C 21FA                      1- 2260     	MOVIA	0xfa
                                    1- 2261     	BANKSEL	r0x1027
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 2262     	MOVAR	r0x1027
     000F                           1- 2263     _02366_DS_:
     000F 09rr                      1- 2264     	BTRSS	_PORTAbits,3
                                    1- 2265     	MGOTO	_02368_DS_
     0010 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2266     	.line	604, "main.c"; 	--getAckTime;
                                    1- 2267     	BANKSEL	r0x1027
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 17rr                      1- 2268     	DECRSZ	r0x1027,F
                                    1- 2269     	.line	606, "main.c"; 	if (0 == getAckTime)
                                    1- 2270     	MGOTO	_02366_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2271     	.line	608, "main.c"; 	return 1;
     0014 2101                      1- 2272     	MOVIA	0x01
                                    1- 2273     	MGOTO	_02369_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
     0016                           1- 2274     _02368_DS_:
                                    1- 2275     	.line	612, "main.c"; 	P_I2C_SCL_CLR;
     0016 1Drr                      1- 2276     	BCR	_PORTAbits,2
                                    1- 2277     	.line	613, "main.c"; 	P_I2C_SDA_OUTPUT;
     0017 001r                      1- 2278     	IOSTR	_IOSTA
                                    1- 2279     	BANKSEL	r0x1027
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 00rr                      1- 2280     	MOVAR	r0x1027
     001A 1Drr                      1- 2281     	BCR	r0x1027,3
     001B 01rr                      1- 2282     	MOVR	r0x1027,W
     001C 000r                      1- 2283     	IOST	_IOSTA
                                    1- 2284     	.line	614, "main.c"; 	return 0;
     001D 2100                      1- 2285     	MOVIA	0x00
     001E                           1- 2286     _02369_DS_:
                                    1- 2287     	.line	615, "main.c"; 	}
                                    1- 2288     	RETURN	
     001E 0010                      3-   39 m1      ret
                                    1- 2289     ; exit point of _i2c_chk_ack
                                    1- 2291     ;***
                                    1- 2292     ;  pBlock Stats: dbName = C
                                    1- 2293     ;***
                                    1- 2294     ;has an exit
                                    1- 2295     ;functions called:
                                    1- 2296     ;   __dly_us
                                    1- 2297     ;   __dly_us
                                    1- 2298     ;   __dly_us
                                    1- 2299     ;   __dly_us
                                    1- 2300     ;; Starting pCode block
                                    1- 2301     .segment "code"; module=main, function=_i2c_stop
     0000                           1- 2303     _i2c_stop:
                                    1- 2304     ; 2 exit points
                                    1- 2305     	.line	584, "main.c"; 	P_I2C_SCL_CLR;
     0000 1Drr                      1- 2306     	BCR	_PORTAbits,2
                                    1- 2307     	.line	585, "main.c"; 	P_I2C_SDA_CLR;
     0001 1Drr                      1- 2308     	BCR	_PORTAbits,3
                                    1- 2309     	.line	586, "main.c"; 	_dly_us(10);
     0002 210A                      1- 2310     	MOVIA	0x0a
                                    1- 2311     	MCALL	__dly_us
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2312     	.line	587, "main.c"; 	P_I2C_SCL_SET;
     0004 19rr                      1- 2313     	BSR	_PORTAbits,2
                                    1- 2314     	.line	588, "main.c"; 	_dly_us(10);
     0005 210A                      1- 2315     	MOVIA	0x0a
                                    1- 2316     	MCALL	__dly_us
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2317     	.line	589, "main.c"; 	P_I2C_SDA_SET;
     0007 19rr                      1- 2318     	BSR	_PORTAbits,3
                                    1- 2319     	.line	590, "main.c"; 	}
                                    1- 2320     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 2321     ; exit point of _i2c_stop
                                    1- 2323     ;***
                                    1- 2324     ;  pBlock Stats: dbName = C
                                    1- 2325     ;***
                                    1- 2326     ;has an exit
                                    1- 2327     ;functions called:
                                    1- 2328     ;   __dly_us
                                    1- 2329     ;   __dly_us
                                    1- 2330     ;   __dly_us
                                    1- 2331     ;   __dly_us
                                    1- 2332     ;1 compiler assigned register :
                                    1- 2333     ;   r0x1027
                                    1- 2334     ;; Starting pCode block
                                    1- 2335     .segment "code"; module=main, function=_i2c_start
     0000                           1- 2337     _i2c_start:
                                    1- 2338     ; 2 exit points
                                    1- 2339     	.line	571, "main.c"; 	P_I2C_SDA_SET;
     0000 19rr                      1- 2340     	BSR	_PORTAbits,3
                                    1- 2341     	.line	572, "main.c"; 	P_I2C_SCL_SET;
     0001 19rr                      1- 2342     	BSR	_PORTAbits,2
                                    1- 2343     	.line	573, "main.c"; 	P_I2C_SDA_OUTPUT;
     0002 001r                      1- 2344     	IOSTR	_IOSTA
                                    1- 2345     	BANKSEL	r0x1027
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 2346     	MOVAR	r0x1027
     0005 1Drr                      1- 2347     	BCR	r0x1027,3
     0006 01rr                      1- 2348     	MOVR	r0x1027,W
     0007 000r                      1- 2349     	IOST	_IOSTA
                                    1- 2350     	.line	574, "main.c"; 	P_I2C_SCL_OUTPUT;
     0008 001r                      1- 2351     	IOSTR	_IOSTA
     0009 00rr                      1- 2352     	MOVAR	r0x1027
     000A 1Drr                      1- 2353     	BCR	r0x1027,2
     000B 01rr                      1- 2354     	MOVR	r0x1027,W
     000C 000r                      1- 2355     	IOST	_IOSTA
                                    1- 2356     	.line	575, "main.c"; 	_dly_us(10);
     000D 210A                      1- 2357     	MOVIA	0x0a
                                    1- 2358     	MCALL	__dly_us
     000E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2359     	.line	576, "main.c"; 	P_I2C_SDA_CLR;
     000F 1Drr                      1- 2360     	BCR	_PORTAbits,3
                                    1- 2361     	.line	577, "main.c"; 	_dly_us(10);
     0010 210A                      1- 2362     	MOVIA	0x0a
                                    1- 2363     	MCALL	__dly_us
     0011 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2364     	.line	578, "main.c"; 	P_I2C_SCL_CLR;
     0012 1Drr                      1- 2365     	BCR	_PORTAbits,2
                                    1- 2366     	.line	579, "main.c"; 	}
                                    1- 2367     	RETURN	
     0013 0010                      3-   39 m1      ret
                                    1- 2368     ; exit point of _i2c_start
                                    1- 2370     ;***
                                    1- 2371     ;  pBlock Stats: dbName = C
                                    1- 2372     ;***
                                    1- 2373     ;has an exit
                                    1- 2374     ;functions called:
                                    1- 2375     ;   _gpioKeyScan
                                    1- 2376     ;   _io_uart_tx
                                    1- 2377     ;   _io_uart_tx
                                    1- 2378     ;   _io_uart_tx
                                    1- 2379     ;   _io_uart_tx
                                    1- 2380     ;   _io_uart_tx
                                    1- 2381     ;   _io_uart_tx
                                    1- 2382     ;   _io_uart_tx
                                    1- 2383     ;   _io_uart_tx
                                    1- 2384     ;   _io_uart_tx
                                    1- 2385     ;   _io_uart_tx
                                    1- 2386     ;   _io_uart_tx
                                    1- 2387     ;   _io_uart_tx
                                    1- 2388     ;   _io_uart_tx
                                    1- 2389     ;   _gpioKeyScan
                                    1- 2390     ;   _io_uart_tx
                                    1- 2391     ;   _io_uart_tx
                                    1- 2392     ;   _io_uart_tx
                                    1- 2393     ;   _io_uart_tx
                                    1- 2394     ;   _io_uart_tx
                                    1- 2395     ;   _io_uart_tx
                                    1- 2396     ;   _io_uart_tx
                                    1- 2397     ;   _io_uart_tx
                                    1- 2398     ;   _io_uart_tx
                                    1- 2399     ;   _io_uart_tx
                                    1- 2400     ;   _io_uart_tx
                                    1- 2401     ;   _io_uart_tx
                                    1- 2402     ;   _io_uart_tx
                                    1- 2403     ;1 compiler assigned register :
                                    1- 2404     ;   r0x102C
                                    1- 2405     ;; Starting pCode block
                                    1- 2406     .segment "code"; module=main, function=_Key_Proc
                                    1- 2408     ;local variable name mapping:
     0000                           1- 2410     _Key_Proc:
                                    1- 2411     ; 2 exit points
                                    1- 2412     	.line	394, "main.c"; 	imsg = gpioKeyScan();
                                    1- 2413     	MCALL	_gpioKeyScan
     0000 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2414     	BANKSEL	r0x102C
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 00rr                      1- 2415     	MOVAR	r0x102C
                                    1- 2416     	.line	396, "main.c"; 	switch (imsg)
     0003 2423                      1- 2417     	XORIA	0x23
     0004 0D03                      1- 2418     	BTRSC	STATUS,2
                                    1- 2419     	MGOTO	_02197_DS_
     0005 3rrr                      3-   62 m1      LGOTO rom_address
     0006 01rr                      1- 2420     	MOVR	r0x102C,W
     0007 2424                      1- 2421     	XORIA	0x24
     0008 0D03                      1- 2422     	BTRSC	STATUS,2
                                    1- 2423     	MGOTO	_02206_DS_
     0009 3rrr                      3-   62 m1      LGOTO rom_address
     000A 01rr                      1- 2424     	MOVR	r0x102C,W
     000B 2443                      1- 2425     	XORIA	0x43
     000C 0D03                      1- 2426     	BTRSC	STATUS,2
                                    1- 2427     	MGOTO	_02218_DS_
     000D 3rrr                      3-   62 m1      LGOTO rom_address
     000E 01rr                      1- 2428     	MOVR	r0x102C,W
     000F 2444                      1- 2429     	XORIA	0x44
     0010 0D03                      1- 2430     	BTRSC	STATUS,2
                                    1- 2431     	MGOTO	_02224_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
     0012 01rr                      1- 2432     	MOVR	r0x102C,W
     0013 2445                      1- 2433     	XORIA	0x45
     0014 0D03                      1- 2434     	BTRSC	STATUS,2
                                    1- 2435     	MGOTO	_02230_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2436     	MGOTO	_02238_DS_
     0016 3rrr                      3-   62 m1      LGOTO rom_address
     0017                           1- 2437     _02197_DS_:
                                    1- 2438     	.line	399, "main.c"; 	if (0 == bFlag_disable_key_func)
                                    1- 2439     	BANKSEL	_vFlag_0
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 0Drr                      1- 2440     	BTRSC	_vFlag_0,2
                                    1- 2441     	MGOTO	_02238_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2442     	.line	401, "main.c"; 	switch (mMotorWorkMode)
                                    1- 2443     	BANKSEL	_mMotorWorkMode
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 01rr                      1- 2444     	MOVR	_mMotorWorkMode,W
                                    1- 2445     	BANKSEL	r0x102C
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 00rr                      1- 2446     	MOVAR	r0x102C
     001E 2401                      1- 2447     	XORIA	0x01
     001F 0D03                      1- 2448     	BTRSC	STATUS,2
                                    1- 2449     	MGOTO	_02198_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021 01rr                      1- 2450     	MOVR	r0x102C,W
     0022 2402                      1- 2451     	XORIA	0x02
     0023 0D03                      1- 2452     	BTRSC	STATUS,2
                                    1- 2453     	MGOTO	_02199_DS_
     0024 3rrr                      3-   62 m1      LGOTO rom_address
     0025 01rr                      1- 2454     	MOVR	r0x102C,W
     0026 2403                      1- 2455     	XORIA	0x03
     0027 0D03                      1- 2456     	BTRSC	STATUS,2
                                    1- 2457     	MGOTO	_02200_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
     0029 01rr                      1- 2458     	MOVR	r0x102C,W
     002A 2404                      1- 2459     	XORIA	0x04
     002B 0D03                      1- 2460     	BTRSC	STATUS,2
                                    1- 2461     	MGOTO	_02201_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2462     	MGOTO	_02238_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
     002E                           1- 2463     _02198_DS_:
                                    1- 2464     	.line	405, "main.c"; 	mMotorWorkMode = 2;
     002E 2102                      1- 2465     	MOVIA	0x02
                                    1- 2466     	BANKSEL	_mMotorWorkMode
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 00rr                      1- 2467     	MOVAR	_mMotorWorkMode
                                    1- 2468     	.line	406, "main.c"; 	mMotorWorkDuty = 70;   // 70%
     0031 2146                      1- 2469     	MOVIA	0x46
                                    1- 2470     	BANKSEL	_mMotorWorkDuty
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 00rr                      1- 2471     	MOVAR	_mMotorWorkDuty
     0034 02rr                      1- 2472     	CLRR	(_mMotorWorkDuty + 1)
                                    1- 2473     	.line	407, "main.c"; 	mMotorWorkCycle = 100; // 对应周期10ms 1%=100us 100%= 10ms
     0035 2164                      1- 2474     	MOVIA	0x64
                                    1- 2475     	BANKSEL	_mMotorWorkCycle
     0036 rrrr                      3-  109 m1      .banksel ram_address
     0037 00rr                      1- 2476     	MOVAR	_mMotorWorkCycle
     0038 02rr                      1- 2477     	CLRR	(_mMotorWorkCycle + 1)
                                    1- 2478     	.line	408, "main.c"; 	break;
                                    1- 2479     	MGOTO	_02238_DS_
     0039 3rrr                      3-   62 m1      LGOTO rom_address
     003A                           1- 2480     _02199_DS_:
                                    1- 2481     	.line	411, "main.c"; 	mMotorWorkMode = 3;
     003A 2103                      1- 2482     	MOVIA	0x03
                                    1- 2483     	BANKSEL	_mMotorWorkMode
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 00rr                      1- 2484     	MOVAR	_mMotorWorkMode
                                    1- 2485     	.line	412, "main.c"; 	mMotorWorkDuty = 100;  // 100%
     003D 2164                      1- 2486     	MOVIA	0x64
                                    1- 2487     	BANKSEL	_mMotorWorkDuty
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 00rr                      1- 2488     	MOVAR	_mMotorWorkDuty
     0040 02rr                      1- 2489     	CLRR	(_mMotorWorkDuty + 1)
                                    1- 2490     	.line	413, "main.c"; 	mMotorWorkCycle = 100; // 对应周期10ms 1%=100us 100%= 10ms
     0041 2164                      1- 2491     	MOVIA	0x64
                                    1- 2492     	BANKSEL	_mMotorWorkCycle
     0042 rrrr                      3-  109 m1      .banksel ram_address
     0043 00rr                      1- 2493     	MOVAR	_mMotorWorkCycle
     0044 02rr                      1- 2494     	CLRR	(_mMotorWorkCycle + 1)
                                    1- 2495     	.line	414, "main.c"; 	break;
                                    1- 2496     	MGOTO	_02238_DS_
     0045 3rrr                      3-   62 m1      LGOTO rom_address
     0046                           1- 2497     _02200_DS_:
                                    1- 2498     	.line	417, "main.c"; 	mMotorWorkMode = 4;
     0046 2104                      1- 2499     	MOVIA	0x04
                                    1- 2500     	BANKSEL	_mMotorWorkMode
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 00rr                      1- 2501     	MOVAR	_mMotorWorkMode
                                    1- 2502     	.line	418, "main.c"; 	mMotorWorkDuty = 2000;  // 50% --- 200ms = 2000*100us
     0049 21D0                      1- 2503     	MOVIA	0xd0
                                    1- 2504     	BANKSEL	_mMotorWorkDuty
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 00rr                      1- 2505     	MOVAR	_mMotorWorkDuty
     004C 2107                      1- 2506     	MOVIA	0x07
     004D 00rr                      1- 2507     	MOVAR	(_mMotorWorkDuty + 1)
                                    1- 2508     	.line	419, "main.c"; 	mMotorWorkCycle = 4000; // 对应周期400ms 1%=4ms 100%= 10ms
     004E 21A0                      1- 2509     	MOVIA	0xa0
                                    1- 2510     	BANKSEL	_mMotorWorkCycle
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 00rr                      1- 2511     	MOVAR	_mMotorWorkCycle
     0051 210F                      1- 2512     	MOVIA	0x0f
     0052 00rr                      1- 2513     	MOVAR	(_mMotorWorkCycle + 1)
                                    1- 2514     	.line	420, "main.c"; 	mMotorWorkMode4Cnt = 0;
                                    1- 2515     	BANKSEL	_mMotorWorkMode4Cnt
     0053 rrrr                      3-  109 m1      .banksel ram_address
     0054 02rr                      1- 2516     	CLRR	_mMotorWorkMode4Cnt
                                    1- 2517     	.line	421, "main.c"; 	break;
                                    1- 2518     	MGOTO	_02238_DS_
     0055 3rrr                      3-   62 m1      LGOTO rom_address
     0056                           1- 2519     _02201_DS_:
                                    1- 2520     	.line	424, "main.c"; 	mMotorWorkMode = 1;
     0056 2101                      1- 2521     	MOVIA	0x01
                                    1- 2522     	BANKSEL	_mMotorWorkMode
     0057 rrrr                      3-  109 m1      .banksel ram_address
     0058 00rr                      1- 2523     	MOVAR	_mMotorWorkMode
                                    1- 2524     	.line	425, "main.c"; 	mMotorWorkDuty = 40;   // 40% = 40*100us = 4ms
     0059 2128                      1- 2525     	MOVIA	0x28
                                    1- 2526     	BANKSEL	_mMotorWorkDuty
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 00rr                      1- 2527     	MOVAR	_mMotorWorkDuty
     005C 02rr                      1- 2528     	CLRR	(_mMotorWorkDuty + 1)
                                    1- 2529     	.line	426, "main.c"; 	mMotorWorkCycle = 100; // 对应周期10ms 1%=100us 100%= 10ms
     005D 2164                      1- 2530     	MOVIA	0x64
                                    1- 2531     	BANKSEL	_mMotorWorkCycle
     005E rrrr                      3-  109 m1      .banksel ram_address
     005F 00rr                      1- 2532     	MOVAR	_mMotorWorkCycle
     0060 02rr                      1- 2533     	CLRR	(_mMotorWorkCycle + 1)
                                    1- 2534     	.line	427, "main.c"; 	break;
                                    1- 2535     	MGOTO	_02238_DS_
     0061 3rrr                      3-   62 m1      LGOTO rom_address
     0062                           1- 2536     _02206_DS_:
                                    1- 2537     	.line	435, "main.c"; 	if (0 == bFlag_disable_key_func)
                                    1- 2538     	BANKSEL	_vFlag_0
     0062 rrrr                      3-  109 m1      .banksel ram_address
     0063 0Drr                      1- 2539     	BTRSC	_vFlag_0,2
                                    1- 2540     	MGOTO	_02238_DS_
     0064 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2541     	.line	437, "main.c"; 	switch (yMotorWorkMode)
                                    1- 2542     	BANKSEL	_yMotorWorkMode
     0065 rrrr                      3-  109 m1      .banksel ram_address
     0066 01rr                      1- 2543     	MOVR	_yMotorWorkMode,W
                                    1- 2544     	BANKSEL	r0x102C
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 00rr                      1- 2545     	MOVAR	r0x102C
     0069 2401                      1- 2546     	XORIA	0x01
     006A 0D03                      1- 2547     	BTRSC	STATUS,2
                                    1- 2548     	MGOTO	_02207_DS_
     006B 3rrr                      3-   62 m1      LGOTO rom_address
     006C 01rr                      1- 2549     	MOVR	r0x102C,W
     006D 2402                      1- 2550     	XORIA	0x02
     006E 0D03                      1- 2551     	BTRSC	STATUS,2
                                    1- 2552     	MGOTO	_02208_DS_
     006F 3rrr                      3-   62 m1      LGOTO rom_address
     0070 01rr                      1- 2553     	MOVR	r0x102C,W
     0071 2403                      1- 2554     	XORIA	0x03
     0072 0D03                      1- 2555     	BTRSC	STATUS,2
                                    1- 2556     	MGOTO	_02209_DS_
     0073 3rrr                      3-   62 m1      LGOTO rom_address
     0074 01rr                      1- 2557     	MOVR	r0x102C,W
     0075 2404                      1- 2558     	XORIA	0x04
     0076 0D03                      1- 2559     	BTRSC	STATUS,2
                                    1- 2560     	MGOTO	_02210_DS_
     0077 3rrr                      3-   62 m1      LGOTO rom_address
     0078 01rr                      1- 2561     	MOVR	r0x102C,W
     0079 2405                      1- 2562     	XORIA	0x05
     007A 0D03                      1- 2563     	BTRSC	STATUS,2
                                    1- 2564     	MGOTO	_02211_DS_
     007B 3rrr                      3-   62 m1      LGOTO rom_address
     007C 01rr                      1- 2565     	MOVR	r0x102C,W
     007D 2406                      1- 2566     	XORIA	0x06
     007E 0D03                      1- 2567     	BTRSC	STATUS,2
                                    1- 2568     	MGOTO	_02212_DS_
     007F 3rrr                      3-   62 m1      LGOTO rom_address
     0080 01rr                      1- 2569     	MOVR	r0x102C,W
     0081 2407                      1- 2570     	XORIA	0x07
     0082 0D03                      1- 2571     	BTRSC	STATUS,2
                                    1- 2572     	MGOTO	_02213_DS_
     0083 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2573     	MGOTO	_02238_DS_
     0084 3rrr                      3-   62 m1      LGOTO rom_address
     0085                           1- 2574     _02207_DS_:
                                    1- 2575     	.line	440, "main.c"; 	io_uart_tx(0x72);
     0085 2172                      1- 2576     	MOVIA	0x72
                                    1- 2577     	MCALL	_io_uart_tx
     0086 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2578     	.line	441, "main.c"; 	yMotorWorkMode = 2;
     0087 2102                      1- 2579     	MOVIA	0x02
                                    1- 2580     	BANKSEL	_yMotorWorkMode
     0088 rrrr                      3-  109 m1      .banksel ram_address
     0089 00rr                      1- 2581     	MOVAR	_yMotorWorkMode
                                    1- 2582     	.line	442, "main.c"; 	yMotorWorkDuty = 80; // 80/200 = 40%
     008A 2150                      1- 2583     	MOVIA	0x50
                                    1- 2584     	BANKSEL	_yMotorWorkDuty
     008B rrrr                      3-  109 m1      .banksel ram_address
     008C 00rr                      1- 2585     	MOVAR	_yMotorWorkDuty
                                    1- 2586     	.line	443, "main.c"; 	yMotorWorkDutyBase = 80;
                                    1- 2587     	BANKSEL	_yMotorWorkDutyBase
     008D rrrr                      3-  109 m1      .banksel ram_address
     008E 00rr                      1- 2588     	MOVAR	_yMotorWorkDutyBase
                                    1- 2589     	.line	444, "main.c"; 	yMotorWorkCycle = 200; // 对应周期20ms = 200*100us
     008F 21C8                      1- 2590     	MOVIA	0xc8
                                    1- 2591     	BANKSEL	_yMotorWorkCycle
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 00rr                      1- 2592     	MOVAR	_yMotorWorkCycle
                                    1- 2593     	.line	445, "main.c"; 	yMotorWorkStep = 12;
     0092 210C                      1- 2594     	MOVIA	0x0c
                                    1- 2595     	BANKSEL	_yMotorWorkStep
     0093 rrrr                      3-  109 m1      .banksel ram_address
     0094 00rr                      1- 2596     	MOVAR	_yMotorWorkStep
                                    1- 2597     	.line	446, "main.c"; 	break;
                                    1- 2598     	MGOTO	_02238_DS_
     0095 3rrr                      3-   62 m1      LGOTO rom_address
     0096                           1- 2599     _02208_DS_:
                                    1- 2600     	.line	448, "main.c"; 	io_uart_tx(0x73);
     0096 2173                      1- 2601     	MOVIA	0x73
                                    1- 2602     	MCALL	_io_uart_tx
     0097 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2603     	.line	449, "main.c"; 	yMotorWorkMode = 3;
     0098 2103                      1- 2604     	MOVIA	0x03
                                    1- 2605     	BANKSEL	_yMotorWorkMode
     0099 rrrr                      3-  109 m1      .banksel ram_address
     009A 00rr                      1- 2606     	MOVAR	_yMotorWorkMode
                                    1- 2607     	.line	450, "main.c"; 	yMotorWorkDuty = 140; // 140/200 = 70%
     009B 218C                      1- 2608     	MOVIA	0x8c
                                    1- 2609     	BANKSEL	_yMotorWorkDuty
     009C rrrr                      3-  109 m1      .banksel ram_address
     009D 00rr                      1- 2610     	MOVAR	_yMotorWorkDuty
                                    1- 2611     	.line	451, "main.c"; 	yMotorWorkDutyBase = 140;
                                    1- 2612     	BANKSEL	_yMotorWorkDutyBase
     009E rrrr                      3-  109 m1      .banksel ram_address
     009F 00rr                      1- 2613     	MOVAR	_yMotorWorkDutyBase
                                    1- 2614     	.line	452, "main.c"; 	yMotorWorkCycle = 200; // 对应周期20ms = 200*100us
     00A0 21C8                      1- 2615     	MOVIA	0xc8
                                    1- 2616     	BANKSEL	_yMotorWorkCycle
     00A1 rrrr                      3-  109 m1      .banksel ram_address
     00A2 00rr                      1- 2617     	MOVAR	_yMotorWorkCycle
                                    1- 2618     	.line	453, "main.c"; 	yMotorWorkStep = 6;
     00A3 2106                      1- 2619     	MOVIA	0x06
                                    1- 2620     	BANKSEL	_yMotorWorkStep
     00A4 rrrr                      3-  109 m1      .banksel ram_address
     00A5 00rr                      1- 2621     	MOVAR	_yMotorWorkStep
                                    1- 2622     	.line	454, "main.c"; 	break;
                                    1- 2623     	MGOTO	_02238_DS_
     00A6 3rrr                      3-   62 m1      LGOTO rom_address
     00A7                           1- 2624     _02209_DS_:
                                    1- 2625     	.line	456, "main.c"; 	io_uart_tx(0x74);
     00A7 2174                      1- 2626     	MOVIA	0x74
                                    1- 2627     	MCALL	_io_uart_tx
     00A8 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2628     	.line	457, "main.c"; 	yMotorWorkMode = 4;
     00A9 2104                      1- 2629     	MOVIA	0x04
                                    1- 2630     	BANKSEL	_yMotorWorkMode
     00AA rrrr                      3-  109 m1      .banksel ram_address
     00AB 00rr                      1- 2631     	MOVAR	_yMotorWorkMode
                                    1- 2632     	.line	458, "main.c"; 	yMotorWorkDuty = 70;   // 70/200 = 35%
     00AC 2146                      1- 2633     	MOVIA	0x46
                                    1- 2634     	BANKSEL	_yMotorWorkDuty
     00AD rrrr                      3-  109 m1      .banksel ram_address
     00AE 00rr                      1- 2635     	MOVAR	_yMotorWorkDuty
                                    1- 2636     	.line	459, "main.c"; 	yMotorWorkCycle = 200; // 对应周期20ms = 200*100us
     00AF 21C8                      1- 2637     	MOVIA	0xc8
                                    1- 2638     	BANKSEL	_yMotorWorkCycle
     00B0 rrrr                      3-  109 m1      .banksel ram_address
     00B1 00rr                      1- 2639     	MOVAR	_yMotorWorkCycle
                                    1- 2640     	.line	460, "main.c"; 	yMotorWorkStep = 0;
                                    1- 2641     	BANKSEL	_yMotorWorkStep
     00B2 rrrr                      3-  109 m1      .banksel ram_address
     00B3 02rr                      1- 2642     	CLRR	_yMotorWorkStep
                                    1- 2643     	.line	461, "main.c"; 	break;
                                    1- 2644     	MGOTO	_02238_DS_
     00B4 3rrr                      3-   62 m1      LGOTO rom_address
     00B5                           1- 2645     _02210_DS_:
                                    1- 2646     	.line	463, "main.c"; 	io_uart_tx(0x75);
     00B5 2175                      1- 2647     	MOVIA	0x75
                                    1- 2648     	MCALL	_io_uart_tx
     00B6 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2649     	.line	464, "main.c"; 	yMotorWorkMode = 5;
     00B7 2105                      1- 2650     	MOVIA	0x05
                                    1- 2651     	BANKSEL	_yMotorWorkMode
     00B8 rrrr                      3-  109 m1      .banksel ram_address
     00B9 00rr                      1- 2652     	MOVAR	_yMotorWorkMode
                                    1- 2653     	.line	465, "main.c"; 	yMotorWorkDuty = 80;   // 80/200 = 40%
     00BA 2150                      1- 2654     	MOVIA	0x50
                                    1- 2655     	BANKSEL	_yMotorWorkDuty
     00BB rrrr                      3-  109 m1      .banksel ram_address
     00BC 00rr                      1- 2656     	MOVAR	_yMotorWorkDuty
                                    1- 2657     	.line	466, "main.c"; 	yMotorWorkCycle = 200; // 对应周期20ms = 200*100us
     00BD 21C8                      1- 2658     	MOVIA	0xc8
                                    1- 2659     	BANKSEL	_yMotorWorkCycle
     00BE rrrr                      3-  109 m1      .banksel ram_address
     00BF 00rr                      1- 2660     	MOVAR	_yMotorWorkCycle
                                    1- 2661     	.line	467, "main.c"; 	yMotorWorkStep = 0;
                                    1- 2662     	BANKSEL	_yMotorWorkStep
     00C0 rrrr                      3-  109 m1      .banksel ram_address
     00C1 02rr                      1- 2663     	CLRR	_yMotorWorkStep
                                    1- 2664     	.line	468, "main.c"; 	break;
                                    1- 2665     	MGOTO	_02238_DS_
     00C2 3rrr                      3-   62 m1      LGOTO rom_address
     00C3                           1- 2666     _02211_DS_:
                                    1- 2667     	.line	470, "main.c"; 	io_uart_tx(0x76);
     00C3 2176                      1- 2668     	MOVIA	0x76
                                    1- 2669     	MCALL	_io_uart_tx
     00C4 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2670     	.line	471, "main.c"; 	yMotorWorkMode = 6;
     00C5 2106                      1- 2671     	MOVIA	0x06
                                    1- 2672     	BANKSEL	_yMotorWorkMode
     00C6 rrrr                      3-  109 m1      .banksel ram_address
     00C7 00rr                      1- 2673     	MOVAR	_yMotorWorkMode
                                    1- 2674     	.line	472, "main.c"; 	yMotorWorkDuty = 90;   // 90/200 = 45%
     00C8 215A                      1- 2675     	MOVIA	0x5a
                                    1- 2676     	BANKSEL	_yMotorWorkDuty
     00C9 rrrr                      3-  109 m1      .banksel ram_address
     00CA 00rr                      1- 2677     	MOVAR	_yMotorWorkDuty
                                    1- 2678     	.line	473, "main.c"; 	yMotorWorkCycle = 200; // 对应周期20ms = 200*100us
     00CB 21C8                      1- 2679     	MOVIA	0xc8
                                    1- 2680     	BANKSEL	_yMotorWorkCycle
     00CC rrrr                      3-  109 m1      .banksel ram_address
     00CD 00rr                      1- 2681     	MOVAR	_yMotorWorkCycle
                                    1- 2682     	.line	474, "main.c"; 	yMotorWorkStep = 0;
                                    1- 2683     	BANKSEL	_yMotorWorkStep
     00CE rrrr                      3-  109 m1      .banksel ram_address
     00CF 02rr                      1- 2684     	CLRR	_yMotorWorkStep
                                    1- 2685     	.line	475, "main.c"; 	break;
                                    1- 2686     	MGOTO	_02238_DS_
     00D0 3rrr                      3-   62 m1      LGOTO rom_address
     00D1                           1- 2687     _02212_DS_:
                                    1- 2688     	.line	477, "main.c"; 	io_uart_tx(0x77);
     00D1 2177                      1- 2689     	MOVIA	0x77
                                    1- 2690     	MCALL	_io_uart_tx
     00D2 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2691     	.line	478, "main.c"; 	yMotorWorkMode = 7;
     00D3 2107                      1- 2692     	MOVIA	0x07
                                    1- 2693     	BANKSEL	_yMotorWorkMode
     00D4 rrrr                      3-  109 m1      .banksel ram_address
     00D5 00rr                      1- 2694     	MOVAR	_yMotorWorkMode
                                    1- 2695     	.line	479, "main.c"; 	yMotorWorkDuty = 100;  // 100/200 = 50%
     00D6 2164                      1- 2696     	MOVIA	0x64
                                    1- 2697     	BANKSEL	_yMotorWorkDuty
     00D7 rrrr                      3-  109 m1      .banksel ram_address
     00D8 00rr                      1- 2698     	MOVAR	_yMotorWorkDuty
                                    1- 2699     	.line	480, "main.c"; 	yMotorWorkCycle = 200; // 对应周期20ms = 200*100us
     00D9 21C8                      1- 2700     	MOVIA	0xc8
                                    1- 2701     	BANKSEL	_yMotorWorkCycle
     00DA rrrr                      3-  109 m1      .banksel ram_address
     00DB 00rr                      1- 2702     	MOVAR	_yMotorWorkCycle
                                    1- 2703     	.line	481, "main.c"; 	yMotorWorkStep = 0;
                                    1- 2704     	BANKSEL	_yMotorWorkStep
     00DC rrrr                      3-  109 m1      .banksel ram_address
     00DD 02rr                      1- 2705     	CLRR	_yMotorWorkStep
                                    1- 2706     	.line	482, "main.c"; 	break;
                                    1- 2707     	MGOTO	_02238_DS_
     00DE 3rrr                      3-   62 m1      LGOTO rom_address
     00DF                           1- 2708     _02213_DS_:
                                    1- 2709     	.line	484, "main.c"; 	io_uart_tx(0x78);
     00DF 2178                      1- 2710     	MOVIA	0x78
                                    1- 2711     	MCALL	_io_uart_tx
     00E0 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2712     	.line	485, "main.c"; 	yMotorWorkMode = 1;
     00E1 2101                      1- 2713     	MOVIA	0x01
                                    1- 2714     	BANKSEL	_yMotorWorkMode
     00E2 rrrr                      3-  109 m1      .banksel ram_address
     00E3 00rr                      1- 2715     	MOVAR	_yMotorWorkMode
                                    1- 2716     	.line	486, "main.c"; 	yMotorWorkDuty = 60; // 60/200 = 30%
     00E4 213C                      1- 2717     	MOVIA	0x3c
                                    1- 2718     	BANKSEL	_yMotorWorkDuty
     00E5 rrrr                      3-  109 m1      .banksel ram_address
     00E6 00rr                      1- 2719     	MOVAR	_yMotorWorkDuty
                                    1- 2720     	.line	487, "main.c"; 	yMotorWorkDutyBase = 60;
                                    1- 2721     	BANKSEL	_yMotorWorkDutyBase
     00E7 rrrr                      3-  109 m1      .banksel ram_address
     00E8 00rr                      1- 2722     	MOVAR	_yMotorWorkDutyBase
                                    1- 2723     	.line	488, "main.c"; 	yMotorWorkCycle = 200; // 对应周期20ms = 200*100us
     00E9 21C8                      1- 2724     	MOVIA	0xc8
                                    1- 2725     	BANKSEL	_yMotorWorkCycle
     00EA rrrr                      3-  109 m1      .banksel ram_address
     00EB 00rr                      1- 2726     	MOVAR	_yMotorWorkCycle
                                    1- 2727     	.line	489, "main.c"; 	yMotorWorkStep = 14;
     00EC 210E                      1- 2728     	MOVIA	0x0e
                                    1- 2729     	BANKSEL	_yMotorWorkStep
     00ED rrrr                      3-  109 m1      .banksel ram_address
     00EE 00rr                      1- 2730     	MOVAR	_yMotorWorkStep
                                    1- 2731     	.line	490, "main.c"; 	break;
                                    1- 2732     	MGOTO	_02238_DS_
     00EF 3rrr                      3-   62 m1      LGOTO rom_address
     00F0                           1- 2733     _02218_DS_:
                                    1- 2734     	.line	498, "main.c"; 	if (0 == bFlag_disable_key_func)
                                    1- 2735     	BANKSEL	_vFlag_0
     00F0 rrrr                      3-  109 m1      .banksel ram_address
     00F1 0Drr                      1- 2736     	BTRSC	_vFlag_0,2
                                    1- 2737     	MGOTO	_02238_DS_
     00F2 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2738     	.line	500, "main.c"; 	if (mMotorWorkMode)
                                    1- 2739     	BANKSEL	_mMotorWorkMode
     00F3 rrrr                      3-  109 m1      .banksel ram_address
     00F4 01rr                      1- 2740     	MOVR	_mMotorWorkMode,W
     00F5 0D03                      1- 2741     	BTRSC	STATUS,2
                                    1- 2742     	MGOTO	_02220_DS_
     00F6 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2743     	.line	502, "main.c"; 	io_uart_tx(0x60);
     00F7 2160                      1- 2744     	MOVIA	0x60
                                    1- 2745     	MCALL	_io_uart_tx
     00F8 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2746     	.line	503, "main.c"; 	mMotorWorkMode = 0;
                                    1- 2747     	BANKSEL	_mMotorWorkMode
     00F9 rrrr                      3-  109 m1      .banksel ram_address
     00FA 02rr                      1- 2748     	CLRR	_mMotorWorkMode
                                    1- 2749     	.line	504, "main.c"; 	mMotorWorkDuty = 0;    // 0% = 0*100us = 0ms
                                    1- 2750     	BANKSEL	_mMotorWorkDuty
     00FB rrrr                      3-  109 m1      .banksel ram_address
     00FC 02rr                      1- 2751     	CLRR	_mMotorWorkDuty
     00FD 02rr                      1- 2752     	CLRR	(_mMotorWorkDuty + 1)
                                    1- 2753     	.line	505, "main.c"; 	mMotorWorkCycle = 100; // 对应周期10ms 1%=100us 100%= 10ms
     00FE 2164                      1- 2754     	MOVIA	0x64
                                    1- 2755     	BANKSEL	_mMotorWorkCycle
     00FF rrrr                      3-  109 m1      .banksel ram_address
     0100 00rr                      1- 2756     	MOVAR	_mMotorWorkCycle
     0101 02rr                      1- 2757     	CLRR	(_mMotorWorkCycle + 1)
                                    1- 2758     	.line	506, "main.c"; 	M_BDCM_OFF;
     0102 1Crr                      1- 2759     	BCR	_PORTAbits,0
                                    1- 2760     	MGOTO	_02238_DS_
     0103 3rrr                      3-   62 m1      LGOTO rom_address
     0104                           1- 2761     _02220_DS_:
                                    1- 2762     	.line	510, "main.c"; 	io_uart_tx(0x6F);
     0104 216F                      1- 2763     	MOVIA	0x6f
                                    1- 2764     	MCALL	_io_uart_tx
     0105 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2765     	.line	511, "main.c"; 	mMotorWorkMode = 1;
     0106 2101                      1- 2766     	MOVIA	0x01
                                    1- 2767     	BANKSEL	_mMotorWorkMode
     0107 rrrr                      3-  109 m1      .banksel ram_address
     0108 00rr                      1- 2768     	MOVAR	_mMotorWorkMode
                                    1- 2769     	.line	512, "main.c"; 	mMotorWorkDuty = 40;   // 40% = 40*100us = 4ms
     0109 2128                      1- 2770     	MOVIA	0x28
                                    1- 2771     	BANKSEL	_mMotorWorkDuty
     010A rrrr                      3-  109 m1      .banksel ram_address
     010B 00rr                      1- 2772     	MOVAR	_mMotorWorkDuty
     010C 02rr                      1- 2773     	CLRR	(_mMotorWorkDuty + 1)
                                    1- 2774     	.line	513, "main.c"; 	mMotorWorkCycle = 100; // 对应周期10ms 1%=100us 100%= 10ms
     010D 2164                      1- 2775     	MOVIA	0x64
                                    1- 2776     	BANKSEL	_mMotorWorkCycle
     010E rrrr                      3-  109 m1      .banksel ram_address
     010F 00rr                      1- 2777     	MOVAR	_mMotorWorkCycle
     0110 02rr                      1- 2778     	CLRR	(_mMotorWorkCycle + 1)
                                    1- 2779     	.line	516, "main.c"; 	break;
                                    1- 2780     	MGOTO	_02238_DS_
     0111 3rrr                      3-   62 m1      LGOTO rom_address
     0112                           1- 2781     _02224_DS_:
                                    1- 2782     	.line	519, "main.c"; 	if (0 == bFlag_disable_key_func)
                                    1- 2783     	BANKSEL	_vFlag_0
     0112 rrrr                      3-  109 m1      .banksel ram_address
     0113 0Drr                      1- 2784     	BTRSC	_vFlag_0,2
                                    1- 2785     	MGOTO	_02238_DS_
     0114 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2786     	.line	521, "main.c"; 	if (yMotorWorkMode)
                                    1- 2787     	BANKSEL	_yMotorWorkMode
     0115 rrrr                      3-  109 m1      .banksel ram_address
     0116 01rr                      1- 2788     	MOVR	_yMotorWorkMode,W
     0117 0D03                      1- 2789     	BTRSC	STATUS,2
                                    1- 2790     	MGOTO	_02226_DS_
     0118 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2791     	.line	523, "main.c"; 	io_uart_tx(0x70);
     0119 2170                      1- 2792     	MOVIA	0x70
                                    1- 2793     	MCALL	_io_uart_tx
     011A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2794     	.line	524, "main.c"; 	yMotorWorkMode = 0;
                                    1- 2795     	BANKSEL	_yMotorWorkMode
     011B rrrr                      3-  109 m1      .banksel ram_address
     011C 02rr                      1- 2796     	CLRR	_yMotorWorkMode
                                    1- 2797     	.line	525, "main.c"; 	yMotorWorkDuty = 0;    // 0/200 = 0%
                                    1- 2798     	BANKSEL	_yMotorWorkDuty
     011D rrrr                      3-  109 m1      .banksel ram_address
     011E 02rr                      1- 2799     	CLRR	_yMotorWorkDuty
                                    1- 2800     	.line	526, "main.c"; 	yMotorWorkCycle = 200; // 对应周期20ms = 200*100us
     011F 21C8                      1- 2801     	MOVIA	0xc8
                                    1- 2802     	BANKSEL	_yMotorWorkCycle
     0120 rrrr                      3-  109 m1      .banksel ram_address
     0121 00rr                      1- 2803     	MOVAR	_yMotorWorkCycle
                                    1- 2804     	.line	527, "main.c"; 	Y_BDCM_OFF;
     0122 1Crr                      1- 2805     	BCR	_PORTBbits,0
                                    1- 2806     	.line	528, "main.c"; 	M68_POWER_OFF;
     0123 18rr                      1- 2807     	BSR	_PORTBbits,1
                                    1- 2808     	MGOTO	_02238_DS_
     0124 3rrr                      3-   62 m1      LGOTO rom_address
     0125                           1- 2809     _02226_DS_:
                                    1- 2810     	.line	532, "main.c"; 	io_uart_tx(0x7F);
     0125 217F                      1- 2811     	MOVIA	0x7f
                                    1- 2812     	MCALL	_io_uart_tx
     0126 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2813     	.line	533, "main.c"; 	yMotorWorkMode = 1;
     0127 2101                      1- 2814     	MOVIA	0x01
                                    1- 2815     	BANKSEL	_yMotorWorkMode
     0128 rrrr                      3-  109 m1      .banksel ram_address
     0129 00rr                      1- 2816     	MOVAR	_yMotorWorkMode
                                    1- 2817     	.line	534, "main.c"; 	yMotorWorkDuty = 60; // 60/200 = 30%
     012A 213C                      1- 2818     	MOVIA	0x3c
                                    1- 2819     	BANKSEL	_yMotorWorkDuty
     012B rrrr                      3-  109 m1      .banksel ram_address
     012C 00rr                      1- 2820     	MOVAR	_yMotorWorkDuty
                                    1- 2821     	.line	535, "main.c"; 	yMotorWorkDutyBase = 60;
                                    1- 2822     	BANKSEL	_yMotorWorkDutyBase
     012D rrrr                      3-  109 m1      .banksel ram_address
     012E 00rr                      1- 2823     	MOVAR	_yMotorWorkDutyBase
                                    1- 2824     	.line	536, "main.c"; 	yMotorWorkCycle = 200; // 对应周期20ms = 200*100us
     012F 21C8                      1- 2825     	MOVIA	0xc8
                                    1- 2826     	BANKSEL	_yMotorWorkCycle
     0130 rrrr                      3-  109 m1      .banksel ram_address
     0131 00rr                      1- 2827     	MOVAR	_yMotorWorkCycle
                                    1- 2828     	.line	537, "main.c"; 	yMotorWorkStep = 14;
     0132 210E                      1- 2829     	MOVIA	0x0e
                                    1- 2830     	BANKSEL	_yMotorWorkStep
     0133 rrrr                      3-  109 m1      .banksel ram_address
     0134 00rr                      1- 2831     	MOVAR	_yMotorWorkStep
                                    1- 2832     	.line	538, "main.c"; 	M68_POWER_ON;
     0135 1Crr                      1- 2833     	BCR	_PORTBbits,1
                                    1- 2834     	.line	539, "main.c"; 	delay_op_m68_timer = CONST_DLY_OP_M68_TIMER;
     0136 2115                      1- 2835     	MOVIA	0x15
                                    1- 2836     	BANKSEL	_delay_op_m68_timer
     0137 rrrr                      3-  109 m1      .banksel ram_address
     0138 00rr                      1- 2837     	MOVAR	_delay_op_m68_timer
                                    1- 2838     	.line	542, "main.c"; 	break;
                                    1- 2839     	MGOTO	_02238_DS_
     0139 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2840     ;;unsigned compare: left < lit(0x4=4), size=1
     013A                           1- 2841     _02230_DS_:
                                    1- 2842     	.line	545, "main.c"; 	if (red_led_blink_cnt < 4)
     013A 2104                      1- 2843     	MOVIA	0x04
                                    1- 2844     	BANKSEL	_red_led_blink_cnt
     013B rrrr                      3-  109 m1      .banksel ram_address
     013C 04rr                      1- 2845     	SUBAR	_red_led_blink_cnt,W
     013D 0C03                      1- 2846     	BTRSC	STATUS,0
                                    1- 2847     	MGOTO	_02232_DS_
     013E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2848     	.line	547, "main.c"; 	red_led_blink_cnt = 4;
     013F 2104                      1- 2849     	MOVIA	0x04
     0140 00rr                      1- 2850     	MOVAR	_red_led_blink_cnt
     0141                           1- 2851     _02232_DS_:
                                    1- 2852     	.line	549, "main.c"; 	bFlag_light_on = 0;
                                    1- 2853     	BANKSEL	_vFlag_0
     0141 rrrr                      3-  109 m1      .banksel ram_address
     0142 1Drr                      1- 2854     	BCR	_vFlag_0,3
                                    1- 2855     	.line	550, "main.c"; 	if (bFlag_disable_key_func)
     0143 09rr                      1- 2856     	BTRSS	_vFlag_0,2
                                    1- 2857     	MGOTO	_02234_DS_
     0144 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2858     	.line	552, "main.c"; 	io_uart_tx(0xEE);
     0145 21EE                      1- 2859     	MOVIA	0xee
                                    1- 2860     	MCALL	_io_uart_tx
     0146 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2861     	.line	553, "main.c"; 	bFlag_disable_key_func = 0;
                                    1- 2862     	BANKSEL	_vFlag_0
     0147 rrrr                      3-  109 m1      .banksel ram_address
     0148 1Drr                      1- 2863     	BCR	_vFlag_0,2
                                    1- 2864     	MGOTO	_02238_DS_
     0149 3rrr                      3-   62 m1      LGOTO rom_address
     014A                           1- 2865     _02234_DS_:
                                    1- 2866     	.line	557, "main.c"; 	io_uart_tx(0xDD);
     014A 21DD                      1- 2867     	MOVIA	0xdd
                                    1- 2868     	MCALL	_io_uart_tx
     014B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 2869     	.line	558, "main.c"; 	bFlag_disable_key_func = 1;
                                    1- 2870     	BANKSEL	_vFlag_0
     014C rrrr                      3-  109 m1      .banksel ram_address
     014D 19rr                      1- 2871     	BSR	_vFlag_0,2
     014E                           1- 2872     _02238_DS_:
                                    1- 2873     	.line	565, "main.c"; 	}
                                    1- 2874     	RETURN	
     014E 0010                      3-   39 m1      ret
                                    1- 2875     ; exit point of _Key_Proc
                                    1- 2877     ;***
                                    1- 2878     ;  pBlock Stats: dbName = C
                                    1- 2879     ;***
                                    1- 2880     ;has an exit
                                    1- 2881     ;functions called:
                                    1- 2882     ;   _io_uart_tx
                                    1- 2883     ;   _io_uart_tx
                                    1- 2884     ;   _io_uart_tx
                                    1- 2885     ;   __muluchar
                                    1- 2886     ;   __gptrget1
                                    1- 2887     ;   _io_uart_tx
                                    1- 2888     ;   __muluchar
                                    1- 2889     ;   __gptrget1
                                    1- 2890     ;   _io_uart_tx
                                    1- 2891     ;   __muluchar
                                    1- 2892     ;   __gptrget1
                                    1- 2893     ;   _io_uart_tx
                                    1- 2894     ;   __muluchar
                                    1- 2895     ;   __gptrget1
                                    1- 2896     ;   _io_uart_tx
                                    1- 2897     ;   __muluchar
                                    1- 2898     ;   __gptrget1
                                    1- 2899     ;   _io_uart_tx
                                    1- 2900     ;   _io_uart_tx
                                    1- 2901     ;   _io_uart_tx
                                    1- 2902     ;   __muluchar
                                    1- 2903     ;   __gptrget1
                                    1- 2904     ;   _io_uart_tx
                                    1- 2905     ;   __muluchar
                                    1- 2906     ;   __gptrget1
                                    1- 2907     ;   _io_uart_tx
                                    1- 2908     ;   __muluchar
                                    1- 2909     ;   __gptrget1
                                    1- 2910     ;   _io_uart_tx
                                    1- 2911     ;   __muluchar
                                    1- 2912     ;   __gptrget1
                                    1- 2913     ;   _io_uart_tx
                                    1- 2914     ;   __muluchar
                                    1- 2915     ;   __gptrget1
                                    1- 2916     ;6 compiler assigned registers:
                                    1- 2917     ;   r0x1028
                                    1- 2918     ;   STK00
                                    1- 2919     ;   r0x1029
                                    1- 2920     ;   r0x102A
                                    1- 2921     ;   STK01
                                    1- 2922     ;   r0x102B
                                    1- 2923     ;; Starting pCode block
                                    1- 2924     .segment "code"; module=main, function=_gpioKeyScan
                                    1- 2926     ;local variable name mapping:
     0000                           1- 2929     _gpioKeyScan:
                                    1- 2930     ; 2 exit points
                                    1- 2931     	.line	279, "main.c"; 	if (gpioKeyWaitTimer)
                                    1- 2932     	BANKSEL	_gpioKeyWaitTimer
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 01rr                      1- 2933     	MOVR	_gpioKeyWaitTimer,W
     0002 0D03                      1- 2934     	BTRSC	STATUS,2
                                    1- 2935     	MGOTO	_02081_DS_
     0003 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2936     	.line	281, "main.c"; 	gpioKeyWaitTimer--;
     0004 01rr                      1- 2937     	MOVR	_gpioKeyWaitTimer,W
                                    1- 2938     	BANKSEL	r0x1028
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 00rr                      1- 2939     	MOVAR	r0x1028
     0007 06rr                      1- 2940     	DECR	r0x1028,W
                                    1- 2941     	BANKSEL	_gpioKeyWaitTimer
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1- 2942     	MOVAR	_gpioKeyWaitTimer
     000A                           1- 2943     _02081_DS_:
                                    1- 2944     	.line	284, "main.c"; 	keyIndex = 0xFF;
     000A 21FF                      1- 2945     	MOVIA	0xff
                                    1- 2946     	BANKSEL	r0x1028
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 00rr                      1- 2947     	MOVAR	r0x1028
                                    1- 2948     	.line	285, "main.c"; 	if (bFlag_Vin_Plug_In)
                                    1- 2949     	BANKSEL	_vFlag_0
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 0Arr                      1- 2950     	BTRSS	_vFlag_0,4
                                    1- 2951     	MGOTO	_02083_DS_
     000F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2952     	.line	287, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 2953     	BANKSEL	_gpioKeyState
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 02rr                      1- 2954     	CLRR	_gpioKeyState
                                    1- 2955     	.line	288, "main.c"; 	return MSG_NONE;
     0012 2100                      1- 2956     	MOVIA	0x00
                                    1- 2957     	MGOTO	_02116_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
     0014                           1- 2958     _02083_DS_:
                                    1- 2959     	.line	291, "main.c"; 	if ((0 == P_KEY_M) && (0 == P_KEY_Y))
     0014 0Drr                      1- 2960     	BTRSC	_PORTBbits,3
                                    1- 2961     	MGOTO	_02090_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
     0016 0Drr                      1- 2962     	BTRSC	_PORTBbits,2
                                    1- 2963     	MGOTO	_02090_DS_
     0017 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2964     	.line	293, "main.c"; 	keyIndex = 2;
     0018 2102                      1- 2965     	MOVIA	0x02
                                    1- 2966     	BANKSEL	r0x1028
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 00rr                      1- 2967     	MOVAR	r0x1028
                                    1- 2968     	MGOTO	_02091_DS_
     001B 3rrr                      3-   62 m1      LGOTO rom_address
     001C                           1- 2969     _02090_DS_:
                                    1- 2970     	.line	296, "main.c"; 	else if (0 == P_KEY_M)
     001C 0Drr                      1- 2971     	BTRSC	_PORTBbits,3
                                    1- 2972     	MGOTO	_02087_DS_
     001D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2973     	.line	298, "main.c"; 	keyIndex = 0;
                                    1- 2974     	BANKSEL	r0x1028
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 02rr                      1- 2975     	CLRR	r0x1028
                                    1- 2976     	MGOTO	_02091_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
     0021                           1- 2977     _02087_DS_:
                                    1- 2978     	.line	300, "main.c"; 	else if (0 == P_KEY_Y)
     0021 0Drr                      1- 2979     	BTRSC	_PORTBbits,2
                                    1- 2980     	MGOTO	_02091_DS_
     0022 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 2981     	.line	302, "main.c"; 	keyIndex = 1;
     0023 2101                      1- 2982     	MOVIA	0x01
                                    1- 2983     	BANKSEL	r0x1028
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 2984     	MOVAR	r0x1028
     0026                           1- 2985     _02091_DS_:
                                    1- 2986     	.line	305, "main.c"; 	switch (gpioKeyState)
                                    1- 2987     	BANKSEL	_gpioKeyState
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 01rr                      1- 2988     	MOVR	_gpioKeyState,W
     0028 0D03                      1- 2989     	BTRSC	STATUS,2
                                    1- 2990     	MGOTO	_02093_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
     002A 01rr                      1- 2991     	MOVR	_gpioKeyState,W
     002B 2401                      1- 2992     	XORIA	0x01
     002C 0D03                      1- 2993     	BTRSC	STATUS,2
                                    1- 2994     	MGOTO	_02096_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
     002E 01rr                      1- 2995     	MOVR	_gpioKeyState,W
     002F 2402                      1- 2996     	XORIA	0x02
     0030 0D03                      1- 2997     	BTRSC	STATUS,2
                                    1- 2998     	MGOTO	_02102_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
     0032 01rr                      1- 2999     	MOVR	_gpioKeyState,W
     0033 2403                      1- 3000     	XORIA	0x03
     0034 0D03                      1- 3001     	BTRSC	STATUS,2
                                    1- 3002     	MGOTO	_02108_DS_
     0035 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3003     	MGOTO	_02114_DS_
     0036 3rrr                      3-   62 m1      LGOTO rom_address
     0037                           1- 3004     _02093_DS_:
                                    1- 3005     	.line	308, "main.c"; 	if (0xFF == keyIndex)
                                    1- 3006     	BANKSEL	r0x1028
     0037 rrrr                      3-  109 m1      .banksel ram_address
     0038 01rr                      1- 3007     	MOVR	r0x1028,W
     0039 24FF                      1- 3008     	XORIA	0xff
     003A 0903                      1- 3009     	BTRSS	STATUS,2
                                    1- 3010     	MGOTO	_02095_DS_
     003B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3011     	.line	310, "main.c"; 	return MSG_NONE;
     003C 2100                      1- 3012     	MOVIA	0x00
                                    1- 3013     	MGOTO	_02116_DS_
     003D 3rrr                      3-   62 m1      LGOTO rom_address
     003E                           1- 3014     _02095_DS_:
                                    1- 3015     	.line	313, "main.c"; 	prekeyIndex = keyIndex;
                                    1- 3016     	BANKSEL	r0x1028
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 01rr                      1- 3017     	MOVR	r0x1028,W
                                    1- 3018     	BANKSEL	_gpioKeyScan_prekeyIndex_65536_43
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 00rr                      1- 3019     	MOVAR	_gpioKeyScan_prekeyIndex_65536_43
                                    1- 3020     	.line	314, "main.c"; 	gpioKeyWaitTimer = GPIO_KEY_JTTER_TIME;
     0042 2103                      1- 3021     	MOVIA	0x03
                                    1- 3022     	BANKSEL	_gpioKeyWaitTimer
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 00rr                      1- 3023     	MOVAR	_gpioKeyWaitTimer
                                    1- 3024     	.line	316, "main.c"; 	io_uart_tx(0x51);
     0045 2151                      1- 3025     	MOVIA	0x51
                                    1- 3026     	MCALL	_io_uart_tx
     0046 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3027     	.line	317, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_JITTER;
     0047 2101                      1- 3028     	MOVIA	0x01
                                    1- 3029     	BANKSEL	_gpioKeyState
     0048 rrrr                      3-  109 m1      .banksel ram_address
     0049 00rr                      1- 3030     	MOVAR	_gpioKeyState
     004A                           1- 3031     _02096_DS_:
                                    1- 3032     	.line	320, "main.c"; 	if (prekeyIndex != keyIndex)
                                    1- 3033     	BANKSEL	r0x1028
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 01rr                      1- 3034     	MOVR	r0x1028,W
                                    1- 3035     	BANKSEL	_gpioKeyScan_prekeyIndex_65536_43
     004C rrrr                      3-  109 m1      .banksel ram_address
     004D 12rr                      1- 3036     	XORAR	_gpioKeyScan_prekeyIndex_65536_43,W
     004E 0D03                      1- 3037     	BTRSC	STATUS,2
                                    1- 3038     	MGOTO	_02100_DS_
     004F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3039     	.line	323, "main.c"; 	io_uart_tx(0x50);
     0050 2150                      1- 3040     	MOVIA	0x50
                                    1- 3041     	MCALL	_io_uart_tx
     0051 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3042     	.line	324, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3043     	BANKSEL	_gpioKeyState
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 02rr                      1- 3044     	CLRR	_gpioKeyState
                                    1- 3045     	MGOTO	_02115_DS_
     0054 3rrr                      3-   62 m1      LGOTO rom_address
     0055                           1- 3046     _02100_DS_:
                                    1- 3047     	.line	326, "main.c"; 	else if (!gpioKeyWaitTimer)
                                    1- 3048     	BANKSEL	_gpioKeyWaitTimer
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 01rr                      1- 3049     	MOVR	_gpioKeyWaitTimer,W
     0057 0903                      1- 3050     	BTRSS	STATUS,2
                                    1- 3051     	MGOTO	_02115_DS_
     0058 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3052     	.line	329, "main.c"; 	io_uart_tx(0x52);
     0059 2152                      1- 3053     	MOVIA	0x52
                                    1- 3054     	MCALL	_io_uart_tx
     005A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3055     	.line	330, "main.c"; 	gpioKeyWaitTimer = GPIO_KEY_CP_TIME;
     005B 2196                      1- 3056     	MOVIA	0x96
                                    1- 3057     	BANKSEL	_gpioKeyWaitTimer
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 00rr                      1- 3058     	MOVAR	_gpioKeyWaitTimer
                                    1- 3059     	.line	331, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_PRESS_DOWN;
     005E 2102                      1- 3060     	MOVIA	0x02
                                    1- 3061     	BANKSEL	_gpioKeyState
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 00rr                      1- 3062     	MOVAR	_gpioKeyState
                                    1- 3063     	.line	332, "main.c"; 	return gpioKeyEvent[prekeyIndex][0]; //! PDS(按键开始)
     0061 2105                      1- 3064     	MOVIA	0x05
     0062 00rr                      1- 3065     	MOVAR	STK00
                                    1- 3066     	BANKSEL	_gpioKeyScan_prekeyIndex_65536_43
     0063 rrrr                      3-  109 m1      .banksel ram_address
     0064 01rr                      1- 3067     	MOVR	_gpioKeyScan_prekeyIndex_65536_43,W
                                    1- 3068     	MCALL	__muluchar
     0065 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3069     	BANKSEL	r0x1029
     0066 rrrr                      3-  109 m1      .banksel ram_address
     0067 00rr                      1- 3070     	MOVAR	r0x1029
     0068 01rr                      1- 3071     	MOVR	STK00,W
                                    1- 3072     ;;3	MOVAR	r0x102A
     0069 25rr                      1- 3073     	ADDIA	(_gpioKeyEvent + 0)
                                    1- 3074     	BANKSEL	r0x102A
     006A rrrr                      3-  109 m1      .banksel ram_address
     006B 00rr                      1- 3075     	MOVAR	r0x102A
     006C 21rr                      1- 3076     	MOVIA	((_gpioKeyEvent + 0) >> 8) & 0xff
                                    1- 3077     	BANKSEL	r0x1029
     006D rrrr                      3-  109 m1      .banksel ram_address
     006E 34rr                      1- 3078     	ADCAR	r0x1029,F
                                    1- 3079     	BANKSEL	r0x102A
     006F rrrr                      3-  109 m1      .banksel ram_address
     0070 01rr                      1- 3080     	MOVR	r0x102A,W
     0071 00rr                      1- 3081     	MOVAR	STK01
                                    1- 3082     	BANKSEL	r0x1029
     0072 rrrr                      3-  109 m1      .banksel ram_address
     0073 01rr                      1- 3083     	MOVR	r0x1029,W
     0074 00rr                      1- 3084     	MOVAR	STK00
     0075 2180                      1- 3085     	MOVIA	0x80
                                    1- 3086     	MCALL	__gptrget1
     0076 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3087     ;;2	MOVAR	r0x102B
                                    1- 3088     	MGOTO	_02116_DS_
     0077 3rrr                      3-   62 m1      LGOTO rom_address
     0078                           1- 3089     _02102_DS_:
                                    1- 3090     	.line	338, "main.c"; 	if (prekeyIndex != keyIndex)
                                    1- 3091     	BANKSEL	r0x1028
     0078 rrrr                      3-  109 m1      .banksel ram_address
     0079 01rr                      1- 3092     	MOVR	r0x1028,W
                                    1- 3093     	BANKSEL	_gpioKeyScan_prekeyIndex_65536_43
     007A rrrr                      3-  109 m1      .banksel ram_address
     007B 12rr                      1- 3094     	XORAR	_gpioKeyScan_prekeyIndex_65536_43,W
     007C 0D03                      1- 3095     	BTRSC	STATUS,2
                                    1- 3096     	MGOTO	_02106_DS_
     007D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3097     	.line	341, "main.c"; 	io_uart_tx(0x53);
     007E 2153                      1- 3098     	MOVIA	0x53
                                    1- 3099     	MCALL	_io_uart_tx
     007F 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3100     	.line	342, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3101     	BANKSEL	_gpioKeyState
     0080 rrrr                      3-  109 m1      .banksel ram_address
     0081 02rr                      1- 3102     	CLRR	_gpioKeyState
                                    1- 3103     	.line	343, "main.c"; 	return gpioKeyEvent[prekeyIndex][1]; //! SPR(短按松开)
     0082 2105                      1- 3104     	MOVIA	0x05
     0083 00rr                      1- 3105     	MOVAR	STK00
                                    1- 3106     	BANKSEL	_gpioKeyScan_prekeyIndex_65536_43
     0084 rrrr                      3-  109 m1      .banksel ram_address
     0085 01rr                      1- 3107     	MOVR	_gpioKeyScan_prekeyIndex_65536_43,W
                                    1- 3108     	MCALL	__muluchar
     0086 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3109     	BANKSEL	r0x1029
     0087 rrrr                      3-  109 m1      .banksel ram_address
     0088 00rr                      1- 3110     	MOVAR	r0x1029
     0089 01rr                      1- 3111     	MOVR	STK00,W
                                    1- 3112     ;;3	MOVAR	r0x102A
     008A 25rr                      1- 3113     	ADDIA	(_gpioKeyEvent + 0)
                                    1- 3114     	BANKSEL	r0x102A
     008B rrrr                      3-  109 m1      .banksel ram_address
     008C 00rr                      1- 3115     	MOVAR	r0x102A
     008D 21rr                      1- 3116     	MOVIA	((_gpioKeyEvent + 0) >> 8) & 0xff
                                    1- 3117     	BANKSEL	r0x1029
     008E rrrr                      3-  109 m1      .banksel ram_address
     008F 34rr                      1- 3118     	ADCAR	r0x1029,F
                                    1- 3119     	BANKSEL	r0x102A
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 05rr                      1- 3120     	INCR	r0x102A,F
     0092 0903                      1- 3121     	BTRSS	STATUS,2
                                    1- 3122     	MGOTO	_00004_DS_
     0093 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3123     	BANKSEL	r0x1029
     0094 rrrr                      3-  109 m1      .banksel ram_address
     0095 05rr                      1- 3124     	INCR	r0x1029,F
     0096                           1- 3125     _00004_DS_:
                                    1- 3126     	BANKSEL	r0x102A
     0096 rrrr                      3-  109 m1      .banksel ram_address
     0097 01rr                      1- 3127     	MOVR	r0x102A,W
     0098 00rr                      1- 3128     	MOVAR	STK01
                                    1- 3129     	BANKSEL	r0x1029
     0099 rrrr                      3-  109 m1      .banksel ram_address
     009A 01rr                      1- 3130     	MOVR	r0x1029,W
     009B 00rr                      1- 3131     	MOVAR	STK00
     009C 2180                      1- 3132     	MOVIA	0x80
                                    1- 3133     	MCALL	__gptrget1
     009D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3134     ;;2	MOVAR	r0x102B
                                    1- 3135     	MGOTO	_02116_DS_
     009E 3rrr                      3-   62 m1      LGOTO rom_address
     009F                           1- 3136     _02106_DS_:
                                    1- 3137     	.line	346, "main.c"; 	else if (!gpioKeyWaitTimer)
                                    1- 3138     	BANKSEL	_gpioKeyWaitTimer
     009F rrrr                      3-  109 m1      .banksel ram_address
     00A0 01rr                      1- 3139     	MOVR	_gpioKeyWaitTimer,W
     00A1 0903                      1- 3140     	BTRSS	STATUS,2
                                    1- 3141     	MGOTO	_02115_DS_
     00A2 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3142     	.line	349, "main.c"; 	io_uart_tx(0x54);
     00A3 2154                      1- 3143     	MOVIA	0x54
                                    1- 3144     	MCALL	_io_uart_tx
     00A4 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3145     	.line	350, "main.c"; 	gpioKeyWaitTimer = GPIO_KEY_CPH_TIME;
     00A5 2119                      1- 3146     	MOVIA	0x19
                                    1- 3147     	BANKSEL	_gpioKeyWaitTimer
     00A6 rrrr                      3-  109 m1      .banksel ram_address
     00A7 00rr                      1- 3148     	MOVAR	_gpioKeyWaitTimer
                                    1- 3149     	.line	351, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_CP;
     00A8 2103                      1- 3150     	MOVIA	0x03
                                    1- 3151     	BANKSEL	_gpioKeyState
     00A9 rrrr                      3-  109 m1      .banksel ram_address
     00AA 00rr                      1- 3152     	MOVAR	_gpioKeyState
                                    1- 3153     	.line	352, "main.c"; 	return gpioKeyEvent[prekeyIndex][2]; //! CPS(长按开始)
     00AB 2105                      1- 3154     	MOVIA	0x05
     00AC 00rr                      1- 3155     	MOVAR	STK00
                                    1- 3156     	BANKSEL	_gpioKeyScan_prekeyIndex_65536_43
     00AD rrrr                      3-  109 m1      .banksel ram_address
     00AE 01rr                      1- 3157     	MOVR	_gpioKeyScan_prekeyIndex_65536_43,W
                                    1- 3158     	MCALL	__muluchar
     00AF 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3159     	BANKSEL	r0x1029
     00B0 rrrr                      3-  109 m1      .banksel ram_address
     00B1 00rr                      1- 3160     	MOVAR	r0x1029
     00B2 01rr                      1- 3161     	MOVR	STK00,W
                                    1- 3162     ;;3	MOVAR	r0x102A
     00B3 25rr                      1- 3163     	ADDIA	(_gpioKeyEvent + 0)
                                    1- 3164     	BANKSEL	r0x102A
     00B4 rrrr                      3-  109 m1      .banksel ram_address
     00B5 00rr                      1- 3165     	MOVAR	r0x102A
     00B6 21rr                      1- 3166     	MOVIA	((_gpioKeyEvent + 0) >> 8) & 0xff
                                    1- 3167     	BANKSEL	r0x1029
     00B7 rrrr                      3-  109 m1      .banksel ram_address
     00B8 34rr                      1- 3168     	ADCAR	r0x1029,F
     00B9 2102                      1- 3169     	MOVIA	0x02
                                    1- 3170     	BANKSEL	r0x102A
     00BA rrrr                      3-  109 m1      .banksel ram_address
     00BB 03rr                      1- 3171     	ADDAR	r0x102A,F
     00BC 2100                      1- 3172     	MOVIA	0x00
                                    1- 3173     	BANKSEL	r0x1029
     00BD rrrr                      3-  109 m1      .banksel ram_address
     00BE 34rr                      1- 3174     	ADCAR	r0x1029,F
                                    1- 3175     	BANKSEL	r0x102A
     00BF rrrr                      3-  109 m1      .banksel ram_address
     00C0 01rr                      1- 3176     	MOVR	r0x102A,W
     00C1 00rr                      1- 3177     	MOVAR	STK01
                                    1- 3178     	BANKSEL	r0x1029
     00C2 rrrr                      3-  109 m1      .banksel ram_address
     00C3 01rr                      1- 3179     	MOVR	r0x1029,W
     00C4 00rr                      1- 3180     	MOVAR	STK00
     00C5 2180                      1- 3181     	MOVIA	0x80
                                    1- 3182     	MCALL	__gptrget1
     00C6 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3183     ;;2	MOVAR	r0x102B
                                    1- 3184     	MGOTO	_02116_DS_
     00C7 3rrr                      3-   62 m1      LGOTO rom_address
     00C8                           1- 3185     _02108_DS_:
                                    1- 3186     	.line	358, "main.c"; 	if (prekeyIndex != keyIndex)
                                    1- 3187     	BANKSEL	r0x1028
     00C8 rrrr                      3-  109 m1      .banksel ram_address
     00C9 01rr                      1- 3188     	MOVR	r0x1028,W
                                    1- 3189     	BANKSEL	_gpioKeyScan_prekeyIndex_65536_43
     00CA rrrr                      3-  109 m1      .banksel ram_address
     00CB 12rr                      1- 3190     	XORAR	_gpioKeyScan_prekeyIndex_65536_43,W
     00CC 0D03                      1- 3191     	BTRSC	STATUS,2
                                    1- 3192     	MGOTO	_02112_DS_
     00CD 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3193     	.line	361, "main.c"; 	io_uart_tx(0x55);
     00CE 2155                      1- 3194     	MOVIA	0x55
                                    1- 3195     	MCALL	_io_uart_tx
     00CF 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3196     	.line	362, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3197     	BANKSEL	_gpioKeyState
     00D0 rrrr                      3-  109 m1      .banksel ram_address
     00D1 02rr                      1- 3198     	CLRR	_gpioKeyState
                                    1- 3199     	.line	363, "main.c"; 	return gpioKeyEvent[prekeyIndex][4]; //! CPR(长按松开)
     00D2 2105                      1- 3200     	MOVIA	0x05
     00D3 00rr                      1- 3201     	MOVAR	STK00
                                    1- 3202     	BANKSEL	_gpioKeyScan_prekeyIndex_65536_43
     00D4 rrrr                      3-  109 m1      .banksel ram_address
     00D5 01rr                      1- 3203     	MOVR	_gpioKeyScan_prekeyIndex_65536_43,W
                                    1- 3204     	MCALL	__muluchar
     00D6 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3205     	BANKSEL	r0x102A
     00D7 rrrr                      3-  109 m1      .banksel ram_address
     00D8 00rr                      1- 3206     	MOVAR	r0x102A
     00D9 01rr                      1- 3207     	MOVR	STK00,W
                                    1- 3208     ;;3	MOVAR	r0x1028
     00DA 25rr                      1- 3209     	ADDIA	(_gpioKeyEvent + 0)
                                    1- 3210     	BANKSEL	r0x1028
     00DB rrrr                      3-  109 m1      .banksel ram_address
     00DC 00rr                      1- 3211     	MOVAR	r0x1028
     00DD 21rr                      1- 3212     	MOVIA	((_gpioKeyEvent + 0) >> 8) & 0xff
                                    1- 3213     	BANKSEL	r0x102A
     00DE rrrr                      3-  109 m1      .banksel ram_address
     00DF 34rr                      1- 3214     	ADCAR	r0x102A,F
     00E0 2104                      1- 3215     	MOVIA	0x04
                                    1- 3216     	BANKSEL	r0x1028
     00E1 rrrr                      3-  109 m1      .banksel ram_address
     00E2 03rr                      1- 3217     	ADDAR	r0x1028,F
     00E3 2100                      1- 3218     	MOVIA	0x00
                                    1- 3219     	BANKSEL	r0x102A
     00E4 rrrr                      3-  109 m1      .banksel ram_address
     00E5 34rr                      1- 3220     	ADCAR	r0x102A,F
                                    1- 3221     	BANKSEL	r0x1028
     00E6 rrrr                      3-  109 m1      .banksel ram_address
     00E7 01rr                      1- 3222     	MOVR	r0x1028,W
     00E8 00rr                      1- 3223     	MOVAR	STK01
                                    1- 3224     	BANKSEL	r0x102A
     00E9 rrrr                      3-  109 m1      .banksel ram_address
     00EA 01rr                      1- 3225     	MOVR	r0x102A,W
     00EB 00rr                      1- 3226     	MOVAR	STK00
     00EC 2180                      1- 3227     	MOVIA	0x80
                                    1- 3228     	MCALL	__gptrget1
     00ED 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3229     	BANKSEL	r0x1029
     00EE rrrr                      3-  109 m1      .banksel ram_address
     00EF 00rr                      1- 3230     	MOVAR	r0x1029
                                    1- 3231     	MGOTO	_02116_DS_
     00F0 3rrr                      3-   62 m1      LGOTO rom_address
     00F1                           1- 3232     _02112_DS_:
                                    1- 3233     	.line	366, "main.c"; 	else if (!gpioKeyWaitTimer)
                                    1- 3234     	BANKSEL	_gpioKeyWaitTimer
     00F1 rrrr                      3-  109 m1      .banksel ram_address
     00F2 01rr                      1- 3235     	MOVR	_gpioKeyWaitTimer,W
     00F3 0903                      1- 3236     	BTRSS	STATUS,2
                                    1- 3237     	MGOTO	_02115_DS_
     00F4 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3238     	.line	369, "main.c"; 	io_uart_tx(0x56);
     00F5 2156                      1- 3239     	MOVIA	0x56
                                    1- 3240     	MCALL	_io_uart_tx
     00F6 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3241     	.line	370, "main.c"; 	gpioKeyWaitTimer = GPIO_KEY_CPH_TIME;
     00F7 2119                      1- 3242     	MOVIA	0x19
                                    1- 3243     	BANKSEL	_gpioKeyWaitTimer
     00F8 rrrr                      3-  109 m1      .banksel ram_address
     00F9 00rr                      1- 3244     	MOVAR	_gpioKeyWaitTimer
                                    1- 3245     	.line	371, "main.c"; 	return gpioKeyEvent[prekeyIndex][3]; //! CPH (长按保持)
     00FA 2105                      1- 3246     	MOVIA	0x05
     00FB 00rr                      1- 3247     	MOVAR	STK00
                                    1- 3248     	BANKSEL	_gpioKeyScan_prekeyIndex_65536_43
     00FC rrrr                      3-  109 m1      .banksel ram_address
     00FD 01rr                      1- 3249     	MOVR	_gpioKeyScan_prekeyIndex_65536_43,W
                                    1- 3250     	MCALL	__muluchar
     00FE 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3251     	BANKSEL	r0x102A
     00FF rrrr                      3-  109 m1      .banksel ram_address
     0100 00rr                      1- 3252     	MOVAR	r0x102A
     0101 01rr                      1- 3253     	MOVR	STK00,W
                                    1- 3254     ;;3	MOVAR	r0x1028
     0102 25rr                      1- 3255     	ADDIA	(_gpioKeyEvent + 0)
                                    1- 3256     	BANKSEL	r0x1028
     0103 rrrr                      3-  109 m1      .banksel ram_address
     0104 00rr                      1- 3257     	MOVAR	r0x1028
     0105 21rr                      1- 3258     	MOVIA	((_gpioKeyEvent + 0) >> 8) & 0xff
                                    1- 3259     	BANKSEL	r0x102A
     0106 rrrr                      3-  109 m1      .banksel ram_address
     0107 34rr                      1- 3260     	ADCAR	r0x102A,F
     0108 2103                      1- 3261     	MOVIA	0x03
                                    1- 3262     	BANKSEL	r0x1028
     0109 rrrr                      3-  109 m1      .banksel ram_address
     010A 03rr                      1- 3263     	ADDAR	r0x1028,F
     010B 2100                      1- 3264     	MOVIA	0x00
                                    1- 3265     	BANKSEL	r0x102A
     010C rrrr                      3-  109 m1      .banksel ram_address
     010D 34rr                      1- 3266     	ADCAR	r0x102A,F
                                    1- 3267     	BANKSEL	r0x1028
     010E rrrr                      3-  109 m1      .banksel ram_address
     010F 01rr                      1- 3268     	MOVR	r0x1028,W
     0110 00rr                      1- 3269     	MOVAR	STK01
                                    1- 3270     	BANKSEL	r0x102A
     0111 rrrr                      3-  109 m1      .banksel ram_address
     0112 01rr                      1- 3271     	MOVR	r0x102A,W
     0113 00rr                      1- 3272     	MOVAR	STK00
     0114 2180                      1- 3273     	MOVIA	0x80
                                    1- 3274     	MCALL	__gptrget1
     0115 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3275     	BANKSEL	r0x1029
     0116 rrrr                      3-  109 m1      .banksel ram_address
     0117 00rr                      1- 3276     	MOVAR	r0x1029
                                    1- 3277     	MGOTO	_02116_DS_
     0118 3rrr                      3-   62 m1      LGOTO rom_address
     0119                           1- 3278     _02114_DS_:
                                    1- 3279     	.line	378, "main.c"; 	gpioKeyState = GPIO_KEY_STATE_IDLE;
                                    1- 3280     	BANKSEL	_gpioKeyState
     0119 rrrr                      3-  109 m1      .banksel ram_address
     011A 02rr                      1- 3281     	CLRR	_gpioKeyState
     011B                           1- 3282     _02115_DS_:
                                    1- 3283     	.line	382, "main.c"; 	return MSG_NONE;
     011B 2100                      1- 3284     	MOVIA	0x00
     011C                           1- 3285     _02116_DS_:
                                    1- 3286     	.line	383, "main.c"; 	}
                                    1- 3287     	RETURN	
     011C 0010                      3-   39 m1      ret
                                    1- 3288     ; exit point of _gpioKeyScan
                                    1- 3290     ;***
                                    1- 3291     ;  pBlock Stats: dbName = C
                                    1- 3292     ;***
                                    1- 3293     ;has an exit
                                    1- 3294     ;functions called:
                                    1- 3295     ;   _io_uart_tx
                                    1- 3296     ;   _io_uart_tx
                                    1- 3297     ;1 compiler assigned register :
                                    1- 3298     ;   r0x1028
                                    1- 3299     ;; Starting pCode block
                                    1- 3300     .segment "code"; module=main, function=_get_bat_vol
                                    1- 3302     ;local variable name mapping:
     0000                           1- 3304     _get_bat_vol:
                                    1- 3305     ; 2 exit points
                                    1- 3306     	.line	235, "main.c"; 	if (0 == bFlag_bat_vol_low)
                                    1- 3307     	BANKSEL	_vFlag_0
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 0Err                      1- 3308     	BTRSC	_vFlag_0,5
                                    1- 3309     	MGOTO	_02073_DS_
     0002 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3310     	.line	237, "main.c"; 	if (0 == (PCON1 & BIT6)) //
     0003 001r                      1- 3311     	IOSTR	_PCON1
                                    1- 3312     	BANKSEL	r0x1028
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 00rr                      1- 3313     	MOVAR	r0x1028
     0006 0Frr                      1- 3314     	BTRSC	r0x1028,6
                                    1- 3315     	MGOTO	_02063_DS_
     0007 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3316     	.line	239, "main.c"; 	if (++counter > CONST_VIN_FILTER)
                                    1- 3317     	BANKSEL	_get_bat_vol_counter_65536_32
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 05rr                      1- 3318     	INCR	_get_bat_vol_counter_65536_32,F
                                    1- 3319     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3320     ;;unsigned compare: left >= lit(0x10=16), size=1
     000A 2110                      1- 3321     	MOVIA	0x10
     000B 04rr                      1- 3322     	SUBAR	_get_bat_vol_counter_65536_32,W
     000C 0803                      1- 3323     	BTRSS	STATUS,0
                                    1- 3324     	MGOTO	_02075_DS_
     000D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3325     	.line	241, "main.c"; 	bFlag_bat_vol_low = 1; //
                                    1- 3326     	BANKSEL	_vFlag_0
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 1Arr                      1- 3327     	BSR	_vFlag_0,5
                                    1- 3328     ;;unsigned compare: left < lit(0xC=12), size=1
                                    1- 3329     	.line	242, "main.c"; 	if (red_led_blink_cnt < 12)
     0010 210C                      1- 3330     	MOVIA	0x0c
                                    1- 3331     	BANKSEL	_red_led_blink_cnt
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 04rr                      1- 3332     	SUBAR	_red_led_blink_cnt,W
     0013 0C03                      1- 3333     	BTRSC	STATUS,0
                                    1- 3334     	MGOTO	_02059_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3335     	.line	244, "main.c"; 	red_led_blink_cnt = 12;
     0015 210C                      1- 3336     	MOVIA	0x0c
     0016 00rr                      1- 3337     	MOVAR	_red_led_blink_cnt
     0017                           1- 3338     _02059_DS_:
                                    1- 3339     	.line	246, "main.c"; 	bFlag_light_on = 0;
                                    1- 3340     	BANKSEL	_vFlag_0
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 1Drr                      1- 3341     	BCR	_vFlag_0,3
                                    1- 3342     	.line	247, "main.c"; 	PCON1 &= 0xE3;          // 111 0 00 11
     0019 001r                      1- 3343     	IOSTR	_PCON1
                                    1- 3344     	BANKSEL	r0x1028
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 00rr                      1- 3345     	MOVAR	r0x1028
     001C 21E3                      1- 3346     	MOVIA	0xe3
     001D 10rr                      1- 3347     	ANDAR	r0x1028,F
     001E 01rr                      1- 3348     	MOVR	r0x1028,W
     001F 000r                      1- 3349     	IOST	_PCON1
                                    1- 3350     	.line	248, "main.c"; 	PCON1 |= (BIT4 | BIT2); // LVDS[2:0] 101 --3.3V
     0020 001r                      1- 3351     	IOSTR	_PCON1
     0021 00rr                      1- 3352     	MOVAR	r0x1028
     0022 2114                      1- 3353     	MOVIA	0x14
     0023 11rr                      1- 3354     	IORAR	r0x1028,F
     0024 01rr                      1- 3355     	MOVR	r0x1028,W
     0025 000r                      1- 3356     	IOST	_PCON1
                                    1- 3357     	MGOTO	_02075_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
     0027                           1- 3358     _02063_DS_:
                                    1- 3359     	.line	253, "main.c"; 	counter = 0;
                                    1- 3360     	BANKSEL	_get_bat_vol_counter_65536_32
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 02rr                      1- 3361     	CLRR	_get_bat_vol_counter_65536_32
                                    1- 3362     	MGOTO	_02075_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
     002A                           1- 3363     _02073_DS_:
                                    1- 3364     	.line	256, "main.c"; 	else if (0 == bFlag_bat_vol_shutdown)
                                    1- 3365     	BANKSEL	_vFlag_0
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 0Frr                      1- 3366     	BTRSC	_vFlag_0,6
                                    1- 3367     	MGOTO	_02075_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3368     	.line	258, "main.c"; 	if (0 == (PCON1 & BIT6))
     002D 001r                      1- 3369     	IOSTR	_PCON1
                                    1- 3370     	BANKSEL	r0x1028
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 3371     	MOVAR	r0x1028
     0030 0Frr                      1- 3372     	BTRSC	r0x1028,6
                                    1- 3373     	MGOTO	_02068_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3374     	.line	260, "main.c"; 	if (++counter > CONST_VIN_FILTER)
                                    1- 3375     	BANKSEL	_get_bat_vol_counter_65536_32
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 05rr                      1- 3376     	INCR	_get_bat_vol_counter_65536_32,F
                                    1- 3377     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3378     ;;unsigned compare: left >= lit(0x10=16), size=1
     0034 2110                      1- 3379     	MOVIA	0x10
     0035 04rr                      1- 3380     	SUBAR	_get_bat_vol_counter_65536_32,W
     0036 0803                      1- 3381     	BTRSS	STATUS,0
                                    1- 3382     	MGOTO	_02075_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3383     	.line	262, "main.c"; 	io_uart_tx(0x44);
     0038 2144                      1- 3384     	MOVIA	0x44
                                    1- 3385     	MCALL	_io_uart_tx
     0039 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 3386     	.line	263, "main.c"; 	bFlag_bat_vol_shutdown = 1; //
                                    1- 3387     	BANKSEL	_vFlag_0
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 1Brr                      1- 3388     	BSR	_vFlag_0,6
                                    1- 3389     	.line	264, "main.c"; 	red_led_blink_cnt = 90;
     003C 215A                      1- 3390     	MOVIA	0x5a
                                    1- 3391     	BANKSEL	_red_led_blink_cnt
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1- 3392     	MOVAR	_red_led_blink_cnt
                                    1- 3393     	.line	265, "main.c"; 	bFlag_light_on = 0;
                                    1- 3394     	BANKSEL	_vFlag_0
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 1Drr                      1- 3395     	BCR	_vFlag_0,3
                                    1- 3396     	MGOTO	_02075_DS_
     0041 3rrr                      3-   62 m1      LGOTO rom_address
     0042                           1- 3397     _02068_DS_:
                                    1- 3398     	.line	270, "main.c"; 	counter = 0;
                                    1- 3399     	BANKSEL	_get_bat_vol_counter_65536_32
     0042 rrrr                      3-  109 m1      .banksel ram_address
     0043 02rr                      1- 3400     	CLRR	_get_bat_vol_counter_65536_32
     0044                           1- 3401     _02075_DS_:
                                    1- 3402     	.line	273, "main.c"; 	}
                                    1- 3403     	RETURN	
     0044 0010                      3-   39 m1      ret
                                    1- 3404     ; exit point of _get_bat_vol
                                    1- 3406     ;***
                                    1- 3407     ;  pBlock Stats: dbName = C
                                    1- 3408     ;***
                                    1- 3409     ;has an exit
                                    1- 3410     ;1 compiler assigned register :
                                    1- 3411     ;   r0x1026
                                    1- 3412     ;; Starting pCode block
                                    1- 3413     .segment "code"; module=main, function=_get_vin_status
                                    1- 3415     ;local variable name mapping:
     0000                           1- 3417     _get_vin_status:
                                    1- 3418     ; 2 exit points
                                    1- 3419     	.line	185, "main.c"; 	P_VIN_INPUT;
     0000 001r                      1- 3420     	IOSTR	_IOSTA
                                    1- 3421     	BANKSEL	r0x1026
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 00rr                      1- 3422     	MOVAR	r0x1026
     0003 1Brr                      1- 3423     	BSR	r0x1026,6
     0004 01rr                      1- 3424     	MOVR	r0x1026,W
     0005 000r                      1- 3425     	IOST	_IOSTA
                                    1- 3426     	.line	187, "main.c"; 	if (bFlag_Vin_Plug_In)
                                    1- 3427     	BANKSEL	_vFlag_0
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 0Arr                      1- 3428     	BTRSS	_vFlag_0,4
                                    1- 3429     	MGOTO	_02051_DS_
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3430     	.line	189, "main.c"; 	if (!P_VIN)
     0009 0Frr                      1- 3431     	BTRSC	_PORTAbits,6
                                    1- 3432     	MGOTO	_02043_DS_
     000A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3433     	.line	191, "main.c"; 	if (++counter > CONST_VIN_FILTER)
                                    1- 3434     	BANKSEL	_get_vin_status_counter_65536_22
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 05rr                      1- 3435     	INCR	_get_vin_status_counter_65536_22,F
                                    1- 3436     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3437     ;;unsigned compare: left >= lit(0x10=16), size=1
     000D 2110                      1- 3438     	MOVIA	0x10
     000E 04rr                      1- 3439     	SUBAR	_get_vin_status_counter_65536_22,W
     000F 0803                      1- 3440     	BTRSS	STATUS,0
                                    1- 3441     	MGOTO	_02053_DS_
     0010 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3442     	.line	193, "main.c"; 	bFlag_Vin_Plug_In = 0;
                                    1- 3443     	BANKSEL	_vFlag_0
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 1Err                      1- 3444     	BCR	_vFlag_0,4
                                    1- 3445     	MGOTO	_02053_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
     0014                           1- 3446     _02043_DS_:
                                    1- 3447     	.line	198, "main.c"; 	counter = 0;
                                    1- 3448     	BANKSEL	_get_vin_status_counter_65536_22
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 02rr                      1- 3449     	CLRR	_get_vin_status_counter_65536_22
                                    1- 3450     	MGOTO	_02053_DS_
     0016 3rrr                      3-   62 m1      LGOTO rom_address
     0017                           1- 3451     _02051_DS_:
                                    1- 3452     	.line	203, "main.c"; 	if (P_VIN)
     0017 0Brr                      1- 3453     	BTRSS	_PORTAbits,6
                                    1- 3454     	MGOTO	_02048_DS_
     0018 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3455     	.line	205, "main.c"; 	if (++counter > CONST_VIN_FILTER)
                                    1- 3456     	BANKSEL	_get_vin_status_counter_65536_22
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 05rr                      1- 3457     	INCR	_get_vin_status_counter_65536_22,F
                                    1- 3458     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3459     ;;unsigned compare: left >= lit(0x10=16), size=1
     001B 2110                      1- 3460     	MOVIA	0x10
     001C 04rr                      1- 3461     	SUBAR	_get_vin_status_counter_65536_22,W
     001D 0803                      1- 3462     	BTRSS	STATUS,0
                                    1- 3463     	MGOTO	_02053_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3464     	.line	207, "main.c"; 	bFlag_Vin_Plug_In = 1; //
                                    1- 3465     	BANKSEL	_vFlag_0
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 1Arr                      1- 3466     	BSR	_vFlag_0,4
                                    1- 3467     	.line	208, "main.c"; 	bFlag_bat_vol_low = 0;
     0021 1Err                      1- 3468     	BCR	_vFlag_0,5
                                    1- 3469     	.line	209, "main.c"; 	bFlag_bat_vol_shutdown = 0;
     0022 1Frr                      1- 3470     	BCR	_vFlag_0,6
                                    1- 3471     	.line	210, "main.c"; 	PCON1 &= 0xE3;          // 111 0 00 11
     0023 001r                      1- 3472     	IOSTR	_PCON1
                                    1- 3473     	BANKSEL	r0x1026
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 00rr                      1- 3474     	MOVAR	r0x1026
     0026 21E3                      1- 3475     	MOVIA	0xe3
     0027 10rr                      1- 3476     	ANDAR	r0x1026,F
     0028 01rr                      1- 3477     	MOVR	r0x1026,W
     0029 000r                      1- 3478     	IOST	_PCON1
                                    1- 3479     	.line	211, "main.c"; 	PCON1 |= (BIT4 | BIT3); // LVDS[2:0] 110 --3.6V
     002A 001r                      1- 3480     	IOSTR	_PCON1
     002B 00rr                      1- 3481     	MOVAR	r0x1026
     002C 2118                      1- 3482     	MOVIA	0x18
     002D 11rr                      1- 3483     	IORAR	r0x1026,F
     002E 01rr                      1- 3484     	MOVR	r0x1026,W
     002F 000r                      1- 3485     	IOST	_PCON1
                                    1- 3486     	.line	212, "main.c"; 	yMotorWorkMode = 0;
                                    1- 3487     	BANKSEL	_yMotorWorkMode
     0030 rrrr                      3-  109 m1      .banksel ram_address
     0031 02rr                      1- 3488     	CLRR	_yMotorWorkMode
                                    1- 3489     	.line	213, "main.c"; 	yMotorWorkDuty = 0;    // 0/200 = 0%
                                    1- 3490     	BANKSEL	_yMotorWorkDuty
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 02rr                      1- 3491     	CLRR	_yMotorWorkDuty
                                    1- 3492     	.line	214, "main.c"; 	yMotorWorkCycle = 200; // 对应周期20ms = 200*100us
     0034 21C8                      1- 3493     	MOVIA	0xc8
                                    1- 3494     	BANKSEL	_yMotorWorkCycle
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 00rr                      1- 3495     	MOVAR	_yMotorWorkCycle
                                    1- 3496     	.line	215, "main.c"; 	Y_BDCM_OFF;
     0037 1Crr                      1- 3497     	BCR	_PORTBbits,0
                                    1- 3498     	.line	216, "main.c"; 	M68_POWER_OFF;
     0038 18rr                      1- 3499     	BSR	_PORTBbits,1
                                    1- 3500     	.line	217, "main.c"; 	mMotorWorkMode = 0;
                                    1- 3501     	BANKSEL	_mMotorWorkMode
     0039 rrrr                      3-  109 m1      .banksel ram_address
     003A 02rr                      1- 3502     	CLRR	_mMotorWorkMode
                                    1- 3503     	.line	218, "main.c"; 	mMotorWorkDuty = 0;    // 0% = 0*100us = 0ms
                                    1- 3504     	BANKSEL	_mMotorWorkDuty
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 02rr                      1- 3505     	CLRR	_mMotorWorkDuty
     003D 02rr                      1- 3506     	CLRR	(_mMotorWorkDuty + 1)
                                    1- 3507     	.line	219, "main.c"; 	mMotorWorkCycle = 100; // 对应周期10ms 1%=100us 100%= 10ms
     003E 2164                      1- 3508     	MOVIA	0x64
                                    1- 3509     	BANKSEL	_mMotorWorkCycle
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 00rr                      1- 3510     	MOVAR	_mMotorWorkCycle
     0041 02rr                      1- 3511     	CLRR	(_mMotorWorkCycle + 1)
                                    1- 3512     	.line	220, "main.c"; 	M_BDCM_OFF;
     0042 1Crr                      1- 3513     	BCR	_PORTAbits,0
                                    1- 3514     	.line	221, "main.c"; 	bFlag_bat_vol_shutdown = 0;
                                    1- 3515     	BANKSEL	_vFlag_0
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 1Frr                      1- 3516     	BCR	_vFlag_0,6
                                    1- 3517     	MGOTO	_02053_DS_
     0045 3rrr                      3-   62 m1      LGOTO rom_address
     0046                           1- 3518     _02048_DS_:
                                    1- 3519     	.line	226, "main.c"; 	counter = 0;
                                    1- 3520     	BANKSEL	_get_vin_status_counter_65536_22
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 02rr                      1- 3521     	CLRR	_get_vin_status_counter_65536_22
     0048                           1- 3522     _02053_DS_:
                                    1- 3523     	.line	229, "main.c"; 	}
                                    1- 3524     	RETURN	
     0048 0010                      3-   39 m1      ret
                                    1- 3525     ; exit point of _get_vin_status
                                    1- 3527     ;***
                                    1- 3528     ;  pBlock Stats: dbName = C
                                    1- 3529     ;***
                                    1- 3530     ;has an exit
                                    1- 3531     ;1 compiler assigned register :
                                    1- 3532     ;   r0x1026
                                    1- 3533     ;; Starting pCode block
                                    1- 3534     .segment "code"; module=main, function=__dly_us
     0000                           1- 3536     __dly_us:
                                    1- 3537     ; 2 exit points
                                    1- 3538     	.line	173, "main.c"; 	void _dly_us(unsigned char cnt)
                                    1- 3539     	BANKSEL	r0x1026
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 3540     	MOVAR	r0x1026
     0002                           1- 3541     _02032_DS_:
                                    1- 3542     	.line	175, "main.c"; 	while (cnt)
                                    1- 3543     	BANKSEL	r0x1026
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 01rr                      1- 3544     	MOVR	r0x1026,W
     0004 0D03                      1- 3545     	BTRSC	STATUS,2
                                    1- 3546     	MGOTO	_02035_DS_
     0005 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 3547     	.line	177, "main.c"; 	cnt--;
     0006 06rr                      1- 3548     	DECR	r0x1026,F
                                    1- 3549     	MGOTO	_02032_DS_
     0007 3rrr                      3-   62 m1      LGOTO rom_address
     0008                           1- 3550     _02035_DS_:
                                    1- 3551     	.line	179, "main.c"; 	}
                                    1- 3552     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1- 3553     ; exit point of __dly_us
                                    1- 3556     ;	code size estimation:
                                    1- 3557     ;	 1431+  421 =  1852 instructions ( 4546 byte)
                                    1- 3559     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
